<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>php - 看看俺 – KanKanAn.com</title>
        <link>http://blog.kankanan.com/tag/php.xml</link>
        <description>记我所思，忆我所为。</description>
        <lastBuildDate>Thu, 19 Dec 2019 12:34:04 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>php - 看看俺 – KanKanAn.com</title>
            <url>http://blog.kankanan.com/static/favicon.ico</url>
            <link>http://blog.kankanan.com/tag/php.xml</link>
        </image>
        <copyright>版权所有 © 2011-2015 看看俺 – KanKanAn.com</copyright>
        <category>技术</category>
        <item>
            <title><![CDATA[在 PHP 使用 Protobuf Buffers 有性能问题]]></title>
            <link>/article/5728-php-4f7f7528-protobuf-buffers-6709602780fd95ee9898.html</link>
            <guid>/article/5728-php-4f7f7528-protobuf-buffers-6709602780fd95ee9898.html</guid>
            <pubDate>Tue, 11 Jun 2019 11:41:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>
  <a href="https://github.com/protocolbuffers/protobuf/">Protocol Buffers</a> 是一种应用广泛的数据交换格式，内部服务间通信时常常用它做为数据传输格式，主要是因为较之 Json 它具有更好的性能（体现在空间占用更少、编解码更快）、数据结构定义更规范。　
  然而在 PHP 中使用 <a href="https://github.com/protocolbuffers/protobuf/">Protocol Buffers</a> 却是一场灾难。
</p>

<div id="outline-container-orga0f3ab5" class="outline-2">
<h2 id="orga0f3ab5"><a href="https://github.com/protocolbuffers/protobuf/">Protocol Buffers</a> 初始化是很慢的</h2>
<div class="outline-text-2" id="text-orga0f3ab5">
<p>
通过 <code>protoc</code> 编译出来的骨架代码本质上只是将 <code>proto</code> 文件编译成方便解析的中间文件格式，建立 PHP 层对应的类型系统，大部分工作在运行时。
</p>

<p>
参考 <a href="https://github.com/protocolbuffers/protobuf/issues/4227">php performance problem · Issue #4227 · protocolbuffers/protobuf</a>
</p>

<p>
使用 <a href="https://github.com/phacility/xhprof">XHProf</a> 分析实际的请求，发现 <code>40%</code> 的时间（133 毫秒）花在了初始化上
</p>

<p>
使用的是 <a href="https://github.com/protocolbuffers/protobuf/">Protocol Buffers</a> 的 PHP 实现，耗时的调用栈如下
</p>

<pre class="example">
PaymentEvent::__construct
  GPBMetadata\PaymentEvent::initOnce
    Google\Protobuf\Internal\DescriptorPool::internalAddGeneratedFile
</pre>

<p>
使用本文末尾的测试项目对 C 扩展和 PHP 实现进行性能对比可以确认 C 扩展的性能是
PHP 实现的 <code>10</code> 倍以上。
</p>

<p>
但是无论是 C 扩展和 PHP 实现，耗时都是毫秒级别，主要的时间都花在了纯 CPU 计算代码部分 <code>internalAddGeneratedFile</code> ，而且很可能会随着 <code>Proto</code> 数的增加而线性增长，CPU 占用会很高。
</p>
</div>
</div>

<div id="outline-container-org2b2346e" class="outline-2">
<h2 id="org2b2346e"><a href="https://github.com/protocolbuffers/protobuf/">Protocol Buffers</a> 的 C 扩展不稳定</h2>
<div class="outline-text-2" id="text-org2b2346e">
<p>
线上系统跑久了 php-fpm 进程的内存和 CPU 占用会升高，估计是有 C 扩展有内存泄露。
</p>
</div>
</div>

<div id="outline-container-org493d528" class="outline-2">
<h2 id="org493d528"><a href="https://github.com/protocolbuffers/protobuf/">Protocol Buffers</a> 性能问题对 PHP 应用的影响是巨大的</h2>
<div class="outline-text-2" id="text-org493d528">
<p>
其它语言(如：Go、C++)程序是常驻内存运行的，初始化 Protocol Buffers 的开销只付出一次，所以往往意识不到这个问题。
</p>

<p>
PHP 采用 <code>FastCGI</code> 模型，每次请求都要承担 Protocol Buffers 的开销，很快就会发现采用 Protocol Buffers 后接口响应时间变长，系统的吞吐率下降。
</p>
</div>
</div>

<div id="outline-container-orge711db3" class="outline-2">
<h2 id="orge711db3">PHP 实现与 C 扩展的性能对比</h2>
<div class="outline-text-2" id="text-orge711db3">
<ul class="org-ul">
<li><p>
Protocol Buffers C 扩展的安装 
</p>

<div class="org-src-container">
<pre class="src src-sh">sudo pecl install protobuf-3.7.0
</pre>
</div></li>

<li><p>
Protocol Buffers C 扩展的启用与禁用
</p>

<p>
在 <code>php.ini</code> 加入以下配置项启用 C 扩展
</p>

<div class="org-src-container">
<pre class="src src-sh"><span style="color: #0084C8; font-weight: bold;">extension</span>=protobuf.so
</pre>
</div>

<p>
注释掉上面的配置项禁用 C 扩展。
</p></li>

<li><p>
创建性能测试 PHP 项目
</p>

<p>
进入项目目录
</p>

<p>
创建 <code>composer.json</code> 文件，内容如下
</p>

<div class="org-src-container">
<pre class="src src-json">{
<span style="background-color: #E6E6E6;"> </span> <span style="background-color: #E6E6E6;"> </span> <span style="color: #A52A2A; font-weight: bold;">"require"</span>: {
<span style="background-color: #E6E6E6;"> </span> <span style="background-color: #E6E6E6;"> </span> <span style="background-color: #E6E6E6;"> </span> <span style="background-color: #E6E6E6;"> </span> <span style="color: #A52A2A; font-weight: bold;">"google/protobuf"</span>: <span style="color: #4E9A06;">"3.7.0"</span>
<span style="background-color: #E6E6E6;"> </span> <span style="background-color: #E6E6E6;"> </span> }
}
</pre>
</div>

<p>
创建 <code>index.php</code> 文件，内容如下
</p>

<div class="org-src-container">
<pre class="src src-php"><span style="color: #A020F0;">&lt;?php</span>
$<span style="color: #0084C8; font-weight: bold;">startTime</span> = microtime(<span style="color: #F5666D;">true</span>);

<span style="color: #A52A2A; font-weight: bold;">require</span> <span style="color: #F5666D;">__DIR__</span> . <span style="color: #4E9A06;">'/vendor/autoload.php'</span>;
<span style="color: #A52A2A; font-weight: bold;">require</span> <span style="color: #F5666D;">__DIR__</span> . <span style="color: #4E9A06;">'/generated/GPBMetadata/Addressbook.php'</span>;
<span style="color: #A52A2A; font-weight: bold;">require</span> <span style="color: #F5666D;">__DIR__</span> . <span style="color: #4E9A06;">'/generated/Tutorial/AddressBook.php'</span>;
<span style="color: #A52A2A; font-weight: bold;">require</span> <span style="color: #F5666D;">__DIR__</span> . <span style="color: #4E9A06;">'/generated/Tutorial/Person.php'</span>;
<span style="color: #A52A2A; font-weight: bold;">require</span> <span style="color: #F5666D;">__DIR__</span> . <span style="color: #4E9A06;">'/generated/Tutorial/Person/PhoneType.php'</span>;
<span style="color: #A52A2A; font-weight: bold;">require</span> <span style="color: #F5666D;">__DIR__</span> . <span style="color: #4E9A06;">'/generated/Tutorial/Person/PhoneNumber.php'</span>;

$<span style="color: #0084C8; font-weight: bold;">addressBook</span> = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">Tutorial\AddressBook</span>();

$<span style="color: #0084C8; font-weight: bold;">person</span> = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">Tutorial\Person</span>();
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setId(1);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setName(<span style="color: #4E9A06;">"user1"</span>);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setEmail(<span style="color: #4E9A06;">"user1@example.com"</span>);
$<span style="color: #0084C8; font-weight: bold;">phone</span> = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">Tutorial\Person\PhoneNumber</span>();
$<span style="color: #0084C8; font-weight: bold;">phone</span>-&gt;setType(<span style="color: #F5666D;">Tutorial\Person\PhoneType</span>::<span style="color: #F5666D;">HOME</span>);
$<span style="color: #0084C8; font-weight: bold;">phone</span>-&gt;setNumber(<span style="color: #4E9A06;">"1000001"</span>);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;getPhones()[] = $<span style="color: #0084C8; font-weight: bold;">phone</span>;
$<span style="color: #0084C8; font-weight: bold;">addressBook</span>-&gt;getPeople()[] = $<span style="color: #0084C8; font-weight: bold;">person</span>;

$<span style="color: #0084C8; font-weight: bold;">person</span> = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">Tutorial\Person</span>();
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setId(2);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setName(<span style="color: #4E9A06;">"user2"</span>);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setEmail(<span style="color: #4E9A06;">"user2@example.com"</span>);
$<span style="color: #0084C8; font-weight: bold;">phone</span> = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">Tutorial\Person\PhoneNumber</span>();
$<span style="color: #0084C8; font-weight: bold;">phone</span>-&gt;setType(<span style="color: #F5666D;">Tutorial\Person\PhoneType</span>::<span style="color: #F5666D;">HOME</span>);
$<span style="color: #0084C8; font-weight: bold;">phone</span>-&gt;setNumber(<span style="color: #4E9A06;">"2000002"</span>);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;getPhones()[] = $<span style="color: #0084C8; font-weight: bold;">phone</span>;
$<span style="color: #0084C8; font-weight: bold;">addressBook</span>-&gt;getPeople()[] = $<span style="color: #0084C8; font-weight: bold;">person</span>;

$<span style="color: #0084C8; font-weight: bold;">person</span> = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">Tutorial\Person</span>();
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setId(3);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setName(<span style="color: #4E9A06;">"user3"</span>);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;setEmail(<span style="color: #4E9A06;">"user3@example.com"</span>);
$<span style="color: #0084C8; font-weight: bold;">phone</span> = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">Tutorial\Person\PhoneNumber</span>();
$<span style="color: #0084C8; font-weight: bold;">phone</span>-&gt;setType(<span style="color: #F5666D;">Tutorial\Person\PhoneType</span>::<span style="color: #F5666D;">HOME</span>);
$<span style="color: #0084C8; font-weight: bold;">phone</span>-&gt;setNumber(<span style="color: #4E9A06;">"3000003"</span>);
$<span style="color: #0084C8; font-weight: bold;">person</span>-&gt;getPhones()[] = $<span style="color: #0084C8; font-weight: bold;">phone</span>;
$<span style="color: #0084C8; font-weight: bold;">addressBook</span>-&gt;getPeople()[] = $<span style="color: #0084C8; font-weight: bold;">person</span>;

$<span style="color: #0084C8; font-weight: bold;">data</span> = $<span style="color: #0084C8; font-weight: bold;">addressBook</span>-&gt;serializeToString();

$<span style="color: #0084C8; font-weight: bold;">endTime</span> = microtime(<span style="color: #F5666D;">true</span>);
$<span style="color: #0084C8; font-weight: bold;">runTime</span> = ($<span style="color: #0084C8; font-weight: bold;">endTime</span>-$<span style="color: #0084C8; font-weight: bold;">startTime</span>)*1000 . <span style="color: #4E9A06;">' ms'</span>;

$<span style="color: #0084C8; font-weight: bold;">class</span> = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">ReflectionClass</span>(<span style="color: #4E9A06;">'Google\Protobuf\Internal\DescriptorPool'</span>);
<span style="color: #A52A2A; font-weight: bold;">if</span> ($<span style="color: #0084C8; font-weight: bold;">class</span>-&gt;getFileName()) {
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">echo</span> <span style="color: #4E9A06;">"protobuf-php </span><span style="color: #0084C8; font-weight: bold;">$runTime</span><span style="color: #4E9A06;">\n"</span>;
} <span style="color: #A52A2A; font-weight: bold;">else</span> {
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">echo</span> <span style="color: #4E9A06;">"protobuf-c   </span><span style="color: #0084C8; font-weight: bold;">$runTime</span><span style="color: #4E9A06;">\n"</span>;
}
</pre>
</div>

<p>
创建 <code>Makefile</code> 内容如下
</p>

<div class="org-src-container">
<pre class="src src-makefile"><span style="color: #00578E; font-weight: bold;">all</span>: install generate benchmark

<span style="color: #00578E; font-weight: bold;">install</span>: vendor

<span style="color: #00578E; font-weight: bold;">vendor</span>: composer.json
<span style="background-color: #E6E6E6;"> </span>   composer install

<span style="color: #00578E; font-weight: bold;">generate</span>: generated/GPBMetadata

<span style="color: #00578E; font-weight: bold;">generated/GPBMetadata</span>: addressbook.proto
<span style="background-color: #E6E6E6;"> </span>   -mkdir generated
<span style="background-color: #E6E6E6;"> </span>   protoc --php_out=generated addressbook.proto

<span style="color: #00578E; font-weight: bold;">benchmark</span>:
<span style="background-color: #E6E6E6;"> </span>   php index.php | tee -a ./benchmark.log

<span style="color: #00578E; font-weight: bold;">addressbook.proto</span>:
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #00578E; font-weight: bold;">wget https</span>://raw.githubusercontent.com/protocolbuffers/protobuf/master/examp<span style="text-decoration: underline;">les/addressbook.proto -O ${</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">CURDIR</span><span style="text-decoration: underline;">}/addressbook.proto</span>

<span style="color: #00578E; font-weight: bold;">clean</span>:
<span style="background-color: #E6E6E6;"> </span>   -rm -rf ${<span style="color: #0084C8; font-weight: bold;">CURDIR</span>}/vendor ${<span style="color: #0084C8; font-weight: bold;">CURDIR</span>}/generated
</pre>
</div></li>

<li><p>
运行性能测试
</p>

<div class="org-src-container">
<pre class="src src-sh">make
</pre>
</div>

<p>
交替启用禁用 C 扩展的运行结果
</p>

<pre class="example">
protobuf-c   2.335 ms
protobuf-php 29.14 ms
protobuf-c   2.443 ms
protobuf-php 27.962 ms
protobuf-c   2.238 ms
protobuf-php 14.957 ms
protobuf-c   2.221 ms
protobuf-php 29.814 ms
protobuf-c   2.295 ms
protobuf-php 29.304 ms
protobuf-c   2.435 ms
protobuf-php 37.493 ms
</pre></li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Discuz访问推广任务反作弊]]></title>
            <link>/article/discuz-8bbf95ee63a85e7f4efb52a153cd4f5c5f0a.html</link>
            <guid>/article/discuz-8bbf95ee63a85e7f4efb52a153cd4f5c5f0a.html</guid>
            <pubDate>Thu, 19 Dec 2013 17:02:00 GMT</pubDate>
            <content:encoded><![CDATA[<ul class="org-ul">
<li><p>
识别作弊
</p>

<p>
发贴、回复较少的用户具有偏高的积分、等级通常就是潜在的作弊对象。在后台查看该用户的积分历史，如果来历不明，那么很可能是通过访问推广作弊获得的。
</p>

<p>
在我们的例子里就发现有一个用户金钱数过高，先查看该用户的积分表：
</p>

<pre class="example">
mysql&gt; SELECT total, cyclenum, extcredits2 FROM g_common_credit_rule_log WHERE rid=8 and uid=119;
+-------+----------+-------------+
| total | cyclenum | extcredits2 |
+-------+----------+-------------+
|  3454 |     3454 |           1 |
+-------+----------+-------------+
1 row in set (0.00 sec)
</pre>

<p>
相关字段说明
</p>
<dl class="org-dl">
<dt>total</dt><dd>策略被执行总次数</dd>
<dt>cyclenum</dt><dd>周期被执行次数</dd>
<dt>extcredits2</dt><dd>我们的系统里对应金钱数</dd>
<dt>rid</dt><dd>值8为访问推广任务类型</dd>
<dt>uid</dt><dd>值119为作弊用户id</dd>
</dl>

<p>
从上面可以看出该用户完成了3454次任务， 接下来就需要确认这些任务是通过作弊完成的了。
</p>

<p>
搜索该用户推广链接在web服务器中留下的访问日志：
</p>
<pre class="example">
logs# grep 'fromuid=119' /usr/local/nginx/logs/access.log*
"GET /?fromuid=119.jpg HTTP/1.1" 301 6243 "http://xxxx.org/details.php?id=178668"
...
</pre>

<p>
可以初步断定，该用户通过在其它论坛中发布信息并将推广url注入到图片的url中，这样我们的站点在访问量没有任何增长的情况下该用户的推广数却瞬间彪升了。
</p></li>

<li><p>
阻止作弊
</p>

<p>
通过使用引用页中的用户标识进行记录来解决这个问题，这样只有当用户来到论坛并进行了相关操作才算推荐有效。
</p>

<p>
修改source/class/discuz/discuz_application.php文件，将下面的内容：
</p>
<div class="org-src-container">
<pre class="src src-php"><span style="color: #A52A2A; font-weight: bold;">if</span>((!empty($<span style="color: #0084C8; font-weight: bold;">_GET</span>[<span style="color: #4E9A06;">'fromuid'</span>]) || !empty($<span style="color: #0084C8; font-weight: bold;">_GET</span>[<span style="color: #4E9A06;">'fromuser'</span>])) &amp;&amp; (<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">var</span>[<span style="color: #4E9A06;">'setti</span><span style="color: #4E9A06; text-decoration: underline;">ng'</span><span style="text-decoration: underline;">][</span><span style="color: #4E9A06; text-decoration: underline;">'creditspolicy'</span><span style="text-decoration: underline;">][</span><span style="color: #4E9A06; text-decoration: underline;">'promotion_visit'</span><span style="text-decoration: underline;">] </span><span style="text-decoration: underline;">||</span><span style="text-decoration: underline;"> </span><span style="color: #F5666D; text-decoration: underline;">$</span><span style="color: #F5666D; text-decoration: underline;">this</span><span style="text-decoration: underline;">-&gt;</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">var</span><span style="text-decoration: underline;">[</span><span style="color: #4E9A06; text-decoration: underline;">'setting'</span><span style="text-decoration: underline;">][</span><span style="color: #4E9A06; text-decoration: underline;">'creditspolicy'</span><span style="text-decoration: underline;">][</span><span style="color: #4E9A06; text-decoration: underline;">'promotion_register'</span><span style="text-decoration: underline;">])) {</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">require_once</span> libfile(<span style="color: #4E9A06;">'misc/promotion'</span>, <span style="color: #4E9A06;">'include'</span>);
}
</pre>
</div>
<p>
改为：
</p>
<div class="org-src-container">
<pre class="src src-php"><span style="color: #A52A2A; font-weight: bold;">if</span> (<span style="color: #A52A2A; font-weight: bold;">isset</span>($<span style="color: #0084C8; font-weight: bold;">_SERVER</span>[<span style="color: #4E9A06;">'HTTP_REFERER'</span>]) &amp;&amp; strpos($<span style="color: #0084C8; font-weight: bold;">_SERVER</span>[<span style="color: #4E9A06;">'HTTP_REFERER'</span>], <span style="color: #4E9A06;">'http://</span><span style="color: #4E9A06; text-decoration: underline;">XXX.com/'</span><span style="text-decoration: underline;">) </span><span style="text-decoration: underline;">===</span><span style="text-decoration: underline;"> 0) {</span>
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">referer_query</span> = parse_url($<span style="color: #0084C8; font-weight: bold;">_SERVER</span>[<span style="color: #4E9A06;">'HTTP_REFERER'</span>], <span style="color: #F5666D;">PHP_URL_QUERY</span>);
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span> ($<span style="color: #0084C8; font-weight: bold;">referer_query</span>) {
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   parse_str($<span style="color: #0084C8; font-weight: bold;">referer_query</span>, $<span style="color: #0084C8; font-weight: bold;">referer_get</span>);
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>((!empty($<span style="color: #0084C8; font-weight: bold;">referer_get</span>[<span style="color: #4E9A06;">'fromuid'</span>]) || !empty($<span style="color: #0084C8; font-weight: bold;">referer_get</span>[<span style="color: #4E9A06;">'fromuser'</span>]))<span style="text-decoration: underline;"> </span><span style="text-decoration: underline;">&amp;&amp;</span><span style="text-decoration: underline;"> (</span><span style="color: #F5666D; text-decoration: underline;">$</span><span style="color: #F5666D; text-decoration: underline;">this</span><span style="text-decoration: underline;">-&gt;</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">var</span><span style="text-decoration: underline;">[</span><span style="color: #4E9A06; text-decoration: underline;">'setting'</span><span style="text-decoration: underline;">][</span><span style="color: #4E9A06; text-decoration: underline;">'creditspolicy'</span><span style="text-decoration: underline;">][</span><span style="color: #4E9A06; text-decoration: underline;">'promotion_visit'</span><span style="text-decoration: underline;">] </span><span style="text-decoration: underline;">||</span><span style="text-decoration: underline;"> </span><span style="color: #F5666D; text-decoration: underline;">$</span><span style="color: #F5666D; text-decoration: underline;">this</span><span style="text-decoration: underline;">-&gt;</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">var</span><span style="text-decoration: underline;">[</span><span style="color: #4E9A06; text-decoration: underline;">'setting'</span><span style="text-decoration: underline;">][</span><span style="color: #4E9A06; text-decoration: underline;">'creditspolicy'</span><span style="text-decoration: underline;">][</span><span style="color: #4E9A06; text-decoration: underline;">'promotion_register'</span><span style="text-decoration: underline;">])) {</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">require_once</span> libfile(<span style="color: #4E9A06;">'misc/promotion'</span>, <span style="color: #4E9A06;">'include'</span>);
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   }
}
</pre>
</div>

<p>
修改source/include/misc/misc_promotion.php文件，将下面的内容：
</p>
<div class="org-src-container">
<pre class="src src-php"><span style="color: #A52A2A; font-weight: bold;">if</span>(!empty($<span style="color: #0084C8; font-weight: bold;">_GET</span>[<span style="color: #4E9A06;">'fromuid'</span>])) {
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">fromuid</span> = intval($<span style="color: #0084C8; font-weight: bold;">_GET</span>[<span style="color: #4E9A06;">'fromuid'</span>]);
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">fromuser</span> = <span style="color: #4E9A06;">''</span>;
} <span style="color: #A52A2A; font-weight: bold;">else</span> {
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">fromuser</span> = $<span style="color: #0084C8; font-weight: bold;">_GET</span>[<span style="color: #4E9A06;">'fromuser'</span>];
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">fromuid</span> = <span style="color: #4E9A06;">''</span>;
}
</pre>
</div>
<p>
改为：
</p>
<div class="org-src-container">
<pre class="src src-php"><span style="color: #A52A2A; font-weight: bold;">if</span>(!empty($<span style="color: #0084C8; font-weight: bold;">referer_get</span>[<span style="color: #4E9A06;">'fromuid'</span>])) {
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">fromuid</span> = intval($<span style="color: #0084C8; font-weight: bold;">referer_get</span>[<span style="color: #4E9A06;">'fromuid'</span>]);
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">fromuser</span> = <span style="color: #4E9A06;">''</span>;
} <span style="color: #A52A2A; font-weight: bold;">else</span> {
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">fromuser</span> = $<span style="color: #0084C8; font-weight: bold;">referer_get</span>[<span style="color: #4E9A06;">'fromuser'</span>];
<span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">fromuid</span> = <span style="color: #4E9A06;">''</span>;
}
</pre>
</div></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[log4php初步使用]]></title>
            <link>/article/log4php-521d6b654f7f7528.html</link>
            <guid>/article/log4php-521d6b654f7f7528.html</guid>
            <pubDate>Mon, 06 May 2013 10:32:00 GMT</pubDate>
            <content:encoded><![CDATA[
<div id="outline-container-orgb98aacc" class="outline-2">
<h2 id="orgb98aacc">简介</h2>
<div class="outline-text-2" id="text-orgb98aacc">
<p>
apache出品必属精品。正宗php日志库，与log4j一脉相承。
</p>

<p>
<a href="http://logging.apache.org/log4php/">http://logging.apache.org/log4php/</a>
</p>
</div>
</div>

<div id="outline-container-org165b026" class="outline-2">
<h2 id="org165b026">安装</h2>
<div class="outline-text-2" id="text-org165b026">
<p>
参考：<a href="http://logging.apache.org/log4php/install.html">http://logging.apache.org/log4php/install.html</a>
</p>

<ul class="org-ul">
<li><p>
有root权限，安装到系统目录
</p>

<div class="org-src-container">
<pre class="src src-sh">sudo apt-get install php-pear
sudo pear channel-discover pear.apache.org/log4php
sudo pear install log4php/Apache_log4php
</pre>
</div></li>

<li><p>
没有root权限，安装到当前目录下
</p>

<div class="org-src-container">
<pre class="src src-sh"><span style="color: #A020F0;">cd</span> libs
wget http://mirrors.tuna.tsinghua.edu.cn/apache/logging/log4php/2.3.0/apache-log<span style="text-decoration: underline;">4php-2.3.0-src.tar.gz</span>
tar xzvf apache-log4php-2.3.0-src.tar.gz
ln -sf apache-log4php-2.3.0/src/main/php ./log4php
</pre>
</div></li>
</ul>
</div>
</div>

<div id="outline-container-org8e02638" class="outline-2">
<h2 id="org8e02638">使用</h2>
<div class="outline-text-2" id="text-org8e02638">
<ul class="org-ul">
<li><p>
进行一下封装定制，可以满足绝大部分情况下的使用
</p>

<ul class="org-ul">
<li>类似nginx的访问日志记录格式</li>
<li>日志中输出文件名及行号</li>
<li>日志文件数据限制为10个，每个日志文件大小为10MB</li>
</ul>

<p>
<a href="../static/logging.inc">logging.inc</a>
</p></li>

<li><p>
使用示例
</p>

<p>
<code>example.php</code>
</p>
<div class="org-src-container">
<pre class="src src-php"><span style="color: #A020F0;">&lt;?php</span>
define(<span style="color: #4E9A06;">'LOGGING_APPNAME'</span>, <span style="color: #4E9A06;">'example'</span>);
<span style="color: #A52A2A; font-weight: bold;">require_once</span>(dirname(<span style="color: #A020F0;">__FILE__</span>) . <span style="color: #4E9A06;">"/logging.inc"</span>);

$<span style="color: #0084C8; font-weight: bold;">logger</span> = <span style="color: #F5666D;">Logger</span>::getLogger(<span style="color: #4E9A06;">"main"</span>);
$<span style="color: #0084C8; font-weight: bold;">logger</span>-&gt;debug(<span style="color: #4E9A06;">"info log"</span>);
$<span style="color: #0084C8; font-weight: bold;">logger</span>-&gt;warn(<span style="color: #4E9A06;">"info log"</span>);
$<span style="color: #0084C8; font-weight: bold;">logger</span>-&gt;error(<span style="color: #4E9A06;">"info log"</span>);
<span style="color: #A020F0;">?&gt;</span>
</pre>
</div></li>

<li><p>
运行结果
</p>

<div class="org-src-container">
<pre class="src src-sh">$ php ./example.php
$ tail -f ./logs/example.log
2013-05-06 18:24:57,925 [DEBUG] main: info log (/home/tangxinfa/php/example.php:<span style="text-decoration: underline;">6)</span>
2013-05-06 18:24:57,930 [WARN] main: info log (/home/tangxinfa/php/example.php:7<span style="text-decoration: underline;">)</span>
2013-05-06 18:24:57,930 [ERROR] main: info log (/home/tangxinfa/php/example.php:<span style="text-decoration: underline;">8)</span>
</pre>
</div></li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[当php遇上redis]]></title>
            <link>/article/5f53-php-90474e0a-redis.html</link>
            <guid>/article/5f53-php-90474e0a-redis.html</guid>
            <pubDate>Sat, 08 Dec 2012 05:41:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>
在最近的项目中，我们需要在php中访问redis，我们选择了使用<a href="https://github.com/nicolasff/phpredis">phpredis</a>库，下面是遇到的一些问题。
</p>

<div id="outline-container-orgbaf1302" class="outline-2">
<h2 id="orgbaf1302">redis持久连接不靠谱。</h2>
<div class="outline-text-2" id="text-orgbaf1302">
<p>
可以说这是php的通病了，不管是mysql、memcache还是redis，指望由php本身（包含php扩展）来实现持久连接都是行不通的。
</p>

<dl class="org-dl">
<dt>为什么这么说呢？</dt><dd><p>
     首先，所谓的持久连接的实现不外乎在进程（php-fpm）内建一个连接池，当php需要连接时，先以ip+port等信息为key在池中查找，找到则直接返回已有连接没有则新建连接。而当一个请求执行结束时，不关闭连接，而是把连接归还到池中。
</p>

<p>
这样当php需要用到多个redis实例时（分库），因为一个php-fpm进程会持有每个redis实例的一个连接，所以需要“php-fpm进程数“*“redis实例数"个redis连接，而对于每个redis服务器则有“php-fpm进程数“个客户端连接。
</p>

<p>
举个例子：一个web应用开了1000个php-fpm进程，有10个redis实例，那么保持的redis连接数就为1000*10也就是10000，每个redis实例有1000个客户端连接。如果前端或redis再扩容所需要的连接就会以乘积方式增加。一个redis实例有php-fpm进程数个连接的情况下表现如何呢，这就要好好测一测了，反正是每连接一线程的mysql是直接堵死了。
</p></dd>
</dl>
</div>
</div>

<div id="outline-container-org5dc3256" class="outline-2">
<h2 id="org5dc3256">RedisArray不靠谱。</h2>
<div class="outline-text-2" id="text-org5dc3256">
<p>
RedisArray实现了一致性hash分布式，但是它在初始化的时候就会连接上每个实例，这在web应用中简直是胡闹，它对一致性hash实现得比较完善，结点失效、动态添加结点时重新hash都有处理，在万不得已进行水平扩容时，可能会用得上。
</p>
</div>
</div>

<div id="outline-container-org657bf59" class="outline-2">
<h2 id="org657bf59">需要自已关闭redis连接。</h2>
<div class="outline-text-2" id="text-org657bf59">
<p>
Redis的析构函数没有关闭redis连接，这会导致redis网络负载过高，要确保脚本结束时关闭连接，最好是能够封装一下Redis类再使用。
</p>

<dl class="org-dl">
<dt>示例封装</dt><dd></dd>
</dl>
<div class="org-src-container">
<pre class="src src-php"><span style="color: #204A87;">/// </span><span style="color: #204A87;">&#20998;&#24067;&#24335;Redis.</span>
<span style="color: #A52A2A; font-weight: bold;">class</span> <span style="color: #2F8B58; font-weight: bold;">RedisShard</span> {
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#26500;&#36896;&#20989;&#25968;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">public</span> <span style="color: #A52A2A; font-weight: bold;">function</span> <span style="color: #00578E; font-weight: bold;">__construct</span>($<span style="color: #0084C8; font-weight: bold;">shards</span>) {
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;reinit($<span style="color: #0084C8; font-weight: bold;">shards</span>);
<span style="background-color: #E6E6E6;"> </span>   }

<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#26512;&#26500;&#20989;&#25968;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#33050;&#26412;&#32467;&#26463;&#26102;&#65292;phpredis&#19981;&#20250;&#33258;&#21160;&#20851;&#38381;redis&#36830;&#25509;&#65292;&#36825;&#37324;&#28155;&#21152;&#33258;&#21160;&#20851;&#38381;&#36830;&#25509;&#25903;&#25345;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#21487;&#20197;&#36890;&#36807;&#25163;&#21160;unset&#26412;&#31867;&#23545;&#35937;&#24555;&#36895;&#37322;&#25918;&#36164;&#28304;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">public</span> <span style="color: #A52A2A; font-weight: bold;">function</span> <span style="color: #00578E; font-weight: bold;">__destruct</span>() {
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>(<span style="color: #A52A2A; font-weight: bold;">isset</span>(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>)){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>]-&gt;close();
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   }

<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#37325;&#26032;&#21021;&#22987;&#21270;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">public</span> <span style="color: #A52A2A; font-weight: bold;">function</span> <span style="color: #00578E; font-weight: bold;">reinit</span>($<span style="color: #0084C8; font-weight: bold;">shards</span>){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">index</span> = 0;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shards</span> = <span style="color: #A52A2A; font-weight: bold;">array</span>();
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">foreach</span>($<span style="color: #0084C8; font-weight: bold;">shards</span> <span style="color: #A52A2A; font-weight: bold;">as</span> $<span style="color: #0084C8; font-weight: bold;">shard</span>){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shards</span>[$<span style="color: #0084C8; font-weight: bold;">index</span>] = explode(<span style="color: #4E9A06;">':'</span>, $<span style="color: #0084C8; font-weight: bold;">shard</span>); <span style="color: #204A87;">//</span><span style="color: #204A87;">&#26684;&#24335;&#65306;host:port:db</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shards</span>[$<span style="color: #0084C8; font-weight: bold;">index</span>][<span style="color: #4E9A06;">'index'</span>] = $<span style="color: #0084C8; font-weight: bold;">index</span>;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   ++$<span style="color: #0084C8; font-weight: bold;">index</span>;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }<span style="font-weight: bold; text-decoration: underline;">        </span>
<span style="background-color: #E6E6E6;"> </span>   }

<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#36716;&#21457;&#26041;&#27861;&#35843;&#29992;&#21040;&#30495;&#27491;&#30340;redis&#23545;&#35937;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">public</span> <span style="color: #A52A2A; font-weight: bold;">function</span> <span style="color: #00578E; font-weight: bold;">__call</span>($<span style="color: #0084C8; font-weight: bold;">name</span>, $<span style="color: #0084C8; font-weight: bold;">arguments</span>) {
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">result</span> = call_user_func_array(<span style="color: #A52A2A; font-weight: bold;">array</span>(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;redis($<span style="color: #0084C8; font-weight: bold;">arguments</span>[0]), $<span style="color: #0084C8; font-weight: bold;">name</span>)<span style="text-decoration: underline;">, </span><span style="text-decoration: underline;">$</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">arguments</span><span style="text-decoration: underline;">);</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>($<span style="color: #0084C8; font-weight: bold;">result</span> === <span style="color: #F5666D;">false</span> <span style="color: #A52A2A; font-weight: bold;">and</span> in_array($<span style="color: #0084C8; font-weight: bold;">name</span>, <span style="color: #A52A2A; font-weight: bold;">array</span>(<span style="color: #4E9A06;">'set'</span>, <span style="color: #4E9A06;">'setex'</span>, <span style="color: #4E9A06;">'incr'</span>)))<span style="text-decoration: underline;"> {</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   trigger_error(<span style="color: #4E9A06;">"redis error: "</span> . <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[0] . <span style="color: #4E9A06;">':'</span> . <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span><span style="text-decoration: underline;">[1] . </span><span style="color: #4E9A06; text-decoration: underline;">':'</span><span style="text-decoration: underline;"> .</span><span style="color: #F5666D; text-decoration: underline;">$</span><span style="color: #F5666D; text-decoration: underline;">this</span><span style="text-decoration: underline;">-&gt;</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">shard</span><span style="text-decoration: underline;">[2] . </span><span style="color: #4E9A06; text-decoration: underline;">" </span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">$name</span><span style="color: #4E9A06; text-decoration: underline;"> "</span><span style="text-decoration: underline;"> . </span><span style="text-decoration: underline;">implode</span><span style="text-decoration: underline;">(</span><span style="color: #4E9A06; text-decoration: underline;">' '</span><span style="text-decoration: underline;">, </span><span style="text-decoration: underline;">$</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">arguments</span><span style="text-decoration: underline;">), </span><span style="color: #F5666D; text-decoration: underline;">E_USER_NOTICE</span><span style="text-decoration: underline;">);</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">return</span> $<span style="color: #0084C8; font-weight: bold;">result</span>;
<span style="background-color: #E6E6E6;"> </span>   }

<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#33719;&#21462;1&#33267;max&#38388;&#30340;&#21807;&#19968;&#24207;&#21495;name&#65292;&#36798;&#21040;max&#21518;&#20250;&#20174;1&#24320;&#22987;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">redis&#30340;&#36882;&#22686;&#21040;&#26368;&#22823;&#20540;&#21518;&#20250;&#36820;&#22238;&#38169;&#35823;&#65292;&#26412;&#26041;&#27861;&#23454;&#29616;&#23433;&#20840;&#30340;&#36882;&#22686;&#12290;</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#22833;&#36133;&#36820;&#22238;false&#65292;&#26368;&#35201;&#30830;&#20445;&#24050;&#29992;redis()&#26041;&#27861;&#36830;&#21040;&#29983;&#25104;&#24207;&#21495;&#30340;&#26576;&#20010;redis&#23545;&#35937;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">public</span> <span style="color: #A52A2A; font-weight: bold;">function</span> <span style="color: #00578E; font-weight: bold;">id</span>($<span style="color: #0084C8; font-weight: bold;">name</span>, $<span style="color: #0084C8; font-weight: bold;">max</span>) {
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>(<span style="color: #A52A2A; font-weight: bold;">isset</span>(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>)){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">id</span> = <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>]-&gt;incr(<span style="color: #4E9A06;">'_id_'</span> . $<span style="color: #0084C8; font-weight: bold;">name</span>);
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>($<span style="color: #0084C8; font-weight: bold;">id</span>){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">max</span> = intval($<span style="color: #0084C8; font-weight: bold;">max</span>/count(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shards</span>));
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>($<span style="color: #0084C8; font-weight: bold;">id</span> % $<span style="color: #0084C8; font-weight: bold;">max</span> == 0){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">while</span>(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>]-&gt;decrBy(<span style="color: #4E9A06;">'_id_'</span> . $<span style="color: #0084C8; font-weight: bold;">name</span>, $<span style="color: #0084C8; font-weight: bold;">max</span>) &gt;=<span style="text-decoration: underline;"> </span><span style="text-decoration: underline;">$</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">max</span><span style="text-decoration: underline;">){</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">id</span> = $<span style="color: #0084C8; font-weight: bold;">max</span>;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">else</span> <span style="color: #A52A2A; font-weight: bold;">if</span>($<span style="color: #0084C8; font-weight: bold;">id</span> &gt; $<span style="color: #0084C8; font-weight: bold;">max</span>){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">id</span> %= $<span style="color: #0084C8; font-weight: bold;">max</span>;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">return</span> ($<span style="color: #0084C8; font-weight: bold;">id</span> - 1)*count(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shards</span>) + (<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'index'</span>] +<span style="text-decoration: underline;"> 1);</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">return</span> <span style="color: #F5666D;">false</span>;
<span style="background-color: #E6E6E6;"> </span>   }

<span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">/// </span><span style="color: #204A87;">&#36830;&#25509;&#24182;&#36820;&#22238;key&#23545;&#24212;&#30340;redis&#23545;&#35937;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">public</span> <span style="color: #A52A2A; font-weight: bold;">function</span> <span style="color: #00578E; font-weight: bold;">redis</span>($<span style="color: #0084C8; font-weight: bold;">key</span>){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">//</span><span style="color: #ff0000; background-color: #ffffff; font-weight: bold;">TODO</span><span style="color: #204A87;">: crc32&#22312;32&#20301;&#31995;&#32479;&#19979;&#20250;&#36820;&#22238;&#36127;&#25968;&#65292;&#22240;&#25105;&#20204;&#26159;&#37096;&#32626;&#22312;64&#20301;&#31995;&#32479;&#19978;&#65292;&#26242;&#26102;&#24573;&#30053;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   assert(<span style="color: #F5666D;">PHP_INT_SIZE</span> === 8);
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">index</span> = crc32($<span style="color: #0084C8; font-weight: bold;">key</span>) % count(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shards</span>);
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">shard</span> = <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shards</span>[$<span style="color: #0084C8; font-weight: bold;">index</span>];
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>(<span style="color: #A52A2A; font-weight: bold;">isset</span>(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>)){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">//</span><span style="color: #204A87;">&#23581;&#35797;&#37325;&#29992;&#24050;&#26377;&#36830;&#25509;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[0] == $<span style="color: #0084C8; font-weight: bold;">shard</span>[0] <span style="color: #A52A2A; font-weight: bold;">and</span> <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[1] == $<span style="color: #0084C8; font-weight: bold;">shard</span>[1]){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[2] != $<span style="color: #0084C8; font-weight: bold;">shard</span>[2]){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>(! <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>]-&gt;select($<span style="color: #0084C8; font-weight: bold;">shard</span>[2])){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   trigger_error(<span style="color: #4E9A06;">'redis error: select '</span> . $<span style="color: #0084C8; font-weight: bold;">shard</span>[0] . <span style="color: #4E9A06;">':'</span> .<span style="text-decoration: underline;"> </span><span style="text-decoration: underline;">$</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">shard</span><span style="text-decoration: underline;">[1] . </span><span style="color: #4E9A06; text-decoration: underline;">':'</span><span style="text-decoration: underline;"> .</span><span style="text-decoration: underline;">$</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">shard</span><span style="text-decoration: underline;">[2], </span><span style="color: #F5666D; text-decoration: underline;">E_USER_ERROR</span><span style="text-decoration: underline;">);</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">return</span> <span style="color: #F5666D;">false</span>;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[2] = $<span style="color: #0084C8; font-weight: bold;">shard</span>[2];
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">return</span> <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>];
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>]-&gt;close();
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">unset</span>(<span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>);
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #204A87;">//</span><span style="color: #204A87;">&#26032;&#24314;&#36830;&#25509;.</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>] = <span style="color: #A52A2A; font-weight: bold;">new</span> <span style="color: #2F8B58; font-weight: bold;">Redis</span>();
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>(! $<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>]-&gt;connect($<span style="color: #0084C8; font-weight: bold;">shard</span>[0], $<span style="color: #0084C8; font-weight: bold;">shard</span>[1])){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   trigger_error(<span style="color: #4E9A06;">'redis error: connect '</span> . $<span style="color: #0084C8; font-weight: bold;">shard</span>[0] . <span style="color: #4E9A06;">':'</span> . $<span style="color: #0084C8; font-weight: bold;">shard</span>[1],<span style="text-decoration: underline;"> </span><span style="color: #F5666D; text-decoration: underline;">E_USER_ERROR</span><span style="text-decoration: underline;">);</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">return</span> <span style="color: #F5666D;">false</span>;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">db</span> = intval($<span style="color: #0084C8; font-weight: bold;">shard</span>[2]);
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>($<span style="color: #0084C8; font-weight: bold;">db</span> != 0 <span style="color: #A52A2A; font-weight: bold;">and</span> !$<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>]-&gt;select($<span style="color: #0084C8; font-weight: bold;">db</span>)){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   trigger_error(<span style="color: #4E9A06;">'redis error: select '</span> . $<span style="color: #0084C8; font-weight: bold;">shard</span>[0] . <span style="color: #4E9A06;">':'</span> . $<span style="color: #0084C8; font-weight: bold;">shard</span>[1] .<span style="text-decoration: underline;"> </span><span style="color: #4E9A06; text-decoration: underline;">':'</span><span style="text-decoration: underline;"> .</span><span style="text-decoration: underline;">$</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">shard</span><span style="text-decoration: underline;">[2], </span><span style="color: #F5666D; text-decoration: underline;">E_USER_ERROR</span><span style="text-decoration: underline;">);</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   $<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>]-&gt;close();
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">return</span> <span style="color: #F5666D;">false</span>;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">if</span>(<span style="color: #F5666D;">ENABLE_DEVELOP</span>){
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   trigger_error(<span style="color: #4E9A06;">'redis connect success. '</span> . $<span style="color: #0084C8; font-weight: bold;">shard</span>[0] . <span style="color: #4E9A06;">':'</span> . $<span style="color: #0084C8; font-weight: bold;">shard</span>[1<span style="text-decoration: underline;">] . </span><span style="color: #4E9A06; text-decoration: underline;">':'</span><span style="text-decoration: underline;"> . </span><span style="text-decoration: underline;">$</span><span style="color: #0084C8; font-weight: bold; text-decoration: underline;">shard</span><span style="text-decoration: underline;">[2], </span><span style="color: #F5666D; text-decoration: underline;">E_USER_NOTICE</span><span style="text-decoration: underline;">);</span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   }<span style="font-weight: bold; text-decoration: underline;">        </span>
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span> = $<span style="color: #0084C8; font-weight: bold;">shard</span>;
<span style="background-color: #E6E6E6;"> </span>   <span style="background-color: #E6E6E6;"> </span>   <span style="color: #A52A2A; font-weight: bold;">return</span> <span style="color: #F5666D;">$</span><span style="color: #F5666D;">this</span>-&gt;<span style="color: #0084C8; font-weight: bold;">shard</span>[<span style="color: #4E9A06;">'redis'</span>];
<span style="background-color: #E6E6E6;"> </span>   }
}
</pre>
</div>
</div>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[php中DOMDocument类createElement和createTextNode的区别]]></title>
            <link>/article/php-4e2d-domdocument-7c7b-createelement-548c-createtextnode-7684533a522b.html</link>
            <guid>/article/php-4e2d-domdocument-7c7b-createelement-548c-createtextnode-7684533a522b.html</guid>
            <pubDate>Thu, 27 Sep 2012 11:05:00 GMT</pubDate>
            <content:encoded><![CDATA[
<div id="outline-container-orgebb4ead" class="outline-2">
<h2 id="orgebb4ead">DOMDocument::createElement</h2>
<div class="outline-text-2" id="text-orgebb4ead">
<ul class="org-ul">
<li><p>
原型：DOMElement DOMDocument::createElement ( string $name [, string $value ] )
</p>

<p>
创建一个元素，其中第二个参数是可选的，不会对它进行转义。当value中包含特殊字符（如：&amp;）会出错。
</p></li>
</ul>
</div>
</div>

<div id="outline-container-org85bad41" class="outline-2">
<h2 id="org85bad41">Domdocument::createTextNode</h2>
<div class="outline-text-2" id="text-org85bad41">
<ul class="org-ul">
<li><p>
原型：DOMText DOMDocument::createTextNode ( string $content )
</p>

<p>
创建一个文本结点，会对其内容进行转义。
</p></li>
</ul>
</div>
</div>

<div id="outline-container-org6dd360c" class="outline-2">
<h2 id="org6dd360c">典型示例：创建一个文本元素</h2>
<div class="outline-text-2" id="text-org6dd360c">
<div class="org-src-container">
<pre class="src src-php">$<span style="color: #0084C8; font-weight: bold;">element</span> = $<span style="color: #0084C8; font-weight: bold;">doc</span>-&gt;createElement(<span style="color: #4E9A06;">"city"</span>);
$<span style="color: #0084C8; font-weight: bold;">node</span> = $<span style="color: #0084C8; font-weight: bold;">doc</span>-&gt;createTextNode(<span style="color: #4E9A06;">"shenzhen"</span>);
$<span style="color: #0084C8; font-weight: bold;">element</span>-&gt;appendChild($<span style="color: #0084C8; font-weight: bold;">node</span>);
$<span style="color: #0084C8; font-weight: bold;">doc</span>-&gt;appendChild($<span style="color: #0084C8; font-weight: bold;">element</span>);
</pre>
</div>
<ul class="org-ul">
<li>对应的xml文档：</li>
</ul>
<div class="org-src-container">
<pre class="src src-xml">&lt;<span style="color: #00578E; font-weight: bold;">city</span>&gt;shenzhen&lt;/<span style="color: #00578E; font-weight: bold;">city</span>&gt;
</pre>
</div>
</div>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[nginx下快速搭建php运行环境]]></title>
            <link>/article/nginx-4e0b5feb901f642d5efa-php-8fd0884c73af5883.html</link>
            <guid>/article/nginx-4e0b5feb901f642d5efa-php-8fd0884c73af5883.html</guid>
            <pubDate>Sat, 11 Aug 2012 13:09:00 GMT</pubDate>
            <content:encoded><![CDATA[
<div id="outline-container-orgbef2772" class="outline-2">
<h2 id="orgbef2772">安装</h2>
<div class="outline-text-2" id="text-orgbef2772">
</div>
<div id="outline-container-org2d7c777" class="outline-3">
<h3 id="org2d7c777">安装nginx</h3>
<div class="outline-text-3" id="text-org2d7c777">
<p>
yaourt -S nginx
</p>
</div>
</div>
<div id="outline-container-org35434a5" class="outline-3">
<h3 id="org35434a5">安装php</h3>
<div class="outline-text-3" id="text-org35434a5">
<p>
yaourt -S php
</p>
</div>
</div>
<div id="outline-container-org7d0ca81" class="outline-3">
<h3 id="org7d0ca81">安装php-fpm</h3>
<div class="outline-text-3" id="text-org7d0ca81">
<p>
yaourt -S php-fpm
</p>
</div>
</div>
</div>

<div id="outline-container-org56fa085" class="outline-2">
<h2 id="org56fa085">配置</h2>
<div class="outline-text-2" id="text-org56fa085">
</div>
<div id="outline-container-org84c8225" class="outline-3">
<h3 id="org84c8225">配置nginx</h3>
<div class="outline-text-3" id="text-org84c8225">
<ul class="org-ul">
<li><p>
将nginx.conf中的以下部分：
</p>
<pre class="example">
#location ~ \.php$ {
...
#}
</pre></li>
<li><p>
修改为
</p>
<pre class="example">
location ~ \.php$ {
   root           /usr/share/nginx/html;
   fastcgi_pass   127.0.0.1:9000;
   fastcgi_index  index.php;
   fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;
   include        fastcgi_params;
}
</pre></li>
</ul>
</div>
</div>
<div id="outline-container-org909800d" class="outline-3">
<h3 id="org909800d">配置php</h3>
<div class="outline-text-3" id="text-org909800d">
<p>
在open_basedir中添加：/usr/share/nginx/html
</p>
</div>
</div>
<div id="outline-container-org48a1c86" class="outline-3">
<h3 id="org48a1c86">配置php-fpm.conf</h3>
<div class="outline-text-3" id="text-org48a1c86">
<p>
启用以下listen配置：
listen = 127.0.0.1:9000
</p>
</div>
</div>
</div>

<div id="outline-container-org547c5e3" class="outline-2">
<h2 id="org547c5e3">运行</h2>
<div class="outline-text-2" id="text-org547c5e3">
<ul class="org-ul">
<li><p>
重启nginx
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo /etc/rc.d/nginx restart
</pre>
</div></li>
<li><p>
启动php-fpm
</p>
<div class="org-src-container">
<pre class="src src-sh">sudo php-fpm
</pre>
</div></li>
<li>然后在/usr/share/nginx/html目录中写php脚本即可。</li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
    </channel>
</rss>