<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>android - 看看俺 – KanKanAn.com</title>
        <link>http://blog.kankanan.com/tag/android.xml</link>
        <description>记我所思，忆我所为。</description>
        <lastBuildDate>Tue, 14 Aug 2018 10:10:52 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>android - 看看俺 – KanKanAn.com</title>
            <url>http://blog.kankanan.com/static/favicon.ico</url>
            <link>http://blog.kankanan.com/tag/android.xml</link>
        </image>
        <copyright>版权所有 © 2011-2015 看看俺 – KanKanAn.com</copyright>
        <category>技术</category>
        <item>
            <title><![CDATA[使用 docker 创建 NDK 开发环境]]></title>
            <link>/article/4f7f7528-docker-521b5efa-ndk-5f0053d173af5883.html</link>
            <guid>/article/4f7f7528-docker-521b5efa-ndk-5f0053d173af5883.html</guid>
            <pubDate>Tue, 14 Aug 2018 10:03:00 GMT</pubDate>
            <content:encoded><![CDATA[<ul class="org-ul">
<li><p>
编写 Dockerfile
</p>

<div class="org-src-container">
<pre class="src src-dockerfile"><span style="color: #b5bd68;">FROM</span> <span style="color: #81a2be; font-weight: bold;">ubuntu:18.04</span>

<span style="color: #b5bd68;">RUN</span> sed -i <span style="color: #8abeb7;">'s/http:\/\/archive\.ubuntu\.com\/ubuntu\//http:\/\/mirrors\.163\.com</span><span style="color: #8abeb7; text-decoration: underline;">\/ubuntu\//g'</span><span style="text-decoration: underline;"> /etc/apt/sources.list</span>
<span style="color: #b5bd68;">RUN</span> apt-get -y update
<span style="color: #b5bd68;">RUN</span> apt-get install -y make wget cmake git autoconf automake libtool file
<span style="color: #b5bd68;">RUN</span> <span style="color: #f0c674;">DEBIAN_FRONTEND</span>=noninteractive apt-get install -y tzdata
<span style="color: #b5bd68;">RUN</span> mkdir /build &amp;&amp; <span style="color: #8abeb7;">\</span>
<span style="color: #969896; background-color: #22a224a427a7;"> </span>   cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span style="color: #8abeb7;">\</span>
<span style="color: #969896; background-color: #22a224a427a7;"> </span>   <span style="color: #b294bb;">echo</span> <span style="color: #8abeb7;">"Asia/Shanghai"</span> &gt; /etc/timezone
<span style="color: #b5bd68;">RUN</span> apt-get install -y android-tools-adb
<span style="color: #b5bd68;">RUN</span> apt-get install -y unzip
<span style="color: #b5bd68;">RUN</span> echo no | dpkg-reconfigure dash
<span style="color: #b5bd68;">RUN</span> wget -c https://dl.google.com/android/repository/android-ndk-r17-beta2-linux<span style="text-decoration: underline;">-x86_64.zip?</span><span style="color: #f0c674; text-decoration: underline;">hl</span><span style="text-decoration: underline;">=zh-cn -O /build/android-ndk-r17-beta2-linux-x86_64.zip</span>
<span style="color: #b5bd68;">RUN</span> unzip /build/android-ndk-r17-beta2-linux-x86_64.zip -d /opt/
<span style="color: #b5bd68;">RUN</span> rm /build/android-ndk-r17-beta2-linux-x86_64.zip
<span style="color: #b5bd68;">RUN</span> apt-get install -y python
<span style="color: #b5bd68;">RUN</span> /opt/android-ndk-r17-beta2/build/tools/make_standalone_toolchain.py --arch a<span style="text-decoration: underline;">rm64 --api 24 --</span><span style="color: #f0c674; text-decoration: underline;">stl</span><span style="text-decoration: underline;">=libc++ --install-dir /opt/android-toolchain</span>
<span style="color: #b5bd68;">RUN</span> echo $<span style="color: #8abeb7;">'export PATH=/opt/android-toolchain/bin:$PATH\n\</span>
<span style="color: #8abeb7;">export CC=aarch64-linux-android-clang\n\</span>
<span style="color: #8abeb7;">export CXX=aarch64-linux-android-clang++\n\</span>
<span style="color: #8abeb7;">export LD=aarch64-linux-android-ld\n\</span>
<span style="color: #8abeb7;">export AR=aarch64-linux-android-ar\n\</span>
<span style="color: #8abeb7;">export STRIP=aarch64-linux-android-strip\n\</span>
<span style="color: #8abeb7;">export RANLIB=aarch64-linux-android-ranlib\n\</span>
<span style="color: #8abeb7;">export AS=aarch64-linux-android-clang\n\</span>
<span style="color: #8abeb7;">export CFLAGS="-fPIE"\n\</span>
<span style="color: #8abeb7;">export CXXFLAGS="$CFLAGS"\n\</span>
<span style="color: #8abeb7;">export LDFLAGS="-fPIE -pie"\n\</span>
<span style="color: #8abeb7;">export SYSROOT=/opt/android-toolchain/sysroot\n\</span>
<span style="color: #8abeb7;">export CROSS_COMPILE_HOST=aarch64-linux-android'</span> &gt; /root/.ndkrc

<span style="color: #b5bd68;">WORKDIR</span> /build

<span style="color: #b5bd68;">ENTRYPOINT</span> [<span style="color: #8abeb7;">"/bin/bash"</span>]
</pre>
</div></li>

<li><p>
构建 docker 镜像
</p>

<div class="org-src-container">
<pre class="src src-sh">docker build -f Dockerfile --network=host -t ndk:r17-beta2 .
</pre>
</div></li>

<li><p>
运行 docker 容器
</p>

<div class="org-src-container">
<pre class="src src-sh">docker run --rm --network=host -v ${<span style="color: #f0c674;">HOME</span>}/.android:/root/.android -it ndk:r17-be<span style="text-decoration: underline;">ta2</span>
</pre>
</div>

<p>
下面的命令全部在 docker 容器中执行。
</p></li>

<li><p>
交叉编译程序
</p>

<div class="org-src-container">
<pre class="src src-sh">cat &gt; hello.c &lt;&lt;EOF
<span style="color: #8abeb7;">#include &lt;stdio.h&gt;</span>
<span style="color: #8abeb7;">int main() {</span>
<span style="color: #969896; background-color: #22a224a427a7;"> </span><span style="color: #8abeb7;">   printf("hello ndk\n");</span>
<span style="color: #969896; background-color: #22a224a427a7;"> </span><span style="color: #8abeb7;">   return 0;</span>
<span style="color: #8abeb7;">}</span>
<span style="color: #8abeb7;">EOF</span>
<span style="color: #b294bb;">.</span> ~/.ndkrc
$<span style="color: #f0c674;">CC</span> $<span style="color: #f0c674;">CFLAGS</span> $<span style="color: #f0c674;">LDFLAGS</span> hello.c -o hello
</pre>
</div></li>

<li><p>
在设备上运行程序
</p>

<p>
假设设备 IP 为 192.168.1.3
</p>

<div class="org-src-container">
<pre class="src src-sh">adb connect 192.168.1.3
adb root
adb connect 192.168.1.3
adb remount
adb connect 192.168.1.3
adb push ./hello /tmp/hello
adb shell /tmp/hello
</pre>
</div>

<p>
最终将输出结果 <code>hello ndk</code> 。</p></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Archlinux 下编译 Android]]></title>
            <link>/article/archlinux-4e0b7f168bd1-android.html</link>
            <guid>/article/archlinux-4e0b7f168bd1-android.html</guid>
            <pubDate>Thu, 09 Aug 2018 07:26:00 GMT</pubDate>
            <content:encoded><![CDATA[
<div id="outline-container-org3b183b9" class="outline-2">
<h2 id="org3b183b9">安装 openjdk</h2>
<div class="outline-text-2" id="text-org3b183b9">
<p>
根据 Android 版本选择 <code>openjdk</code> 版本进行安装
</p>

<div class="org-src-container">
<pre class="src src-sh">yaourt -S jdk8-openjdk
</pre>
</div>

<ul class="org-ul">
<li>参考 <a href="https://wiki.archlinux.org/index.php/Android#Java_Development_Kit">Java_Development_Kit - Android - ArchWiki</a></li>
</ul>
</div>
</div>

<div id="outline-container-org5820fe0" class="outline-2">
<h2 id="org5820fe0">安装 repo</h2>
<div class="outline-text-2" id="text-org5820fe0">
<p>
<a href="https://android.googlesource.com/tools/repo">repo</a> 是用来从多个 <code>Git</code> 仓库构建 <code>Android</code> 的工具。
</p>

<div class="org-src-container">
<pre class="src src-sh">curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/repo
chmod a+x ~/repo
sudo mv ~/repo /usr/local/bin/
</pre>
</div>

<p>
参考 <a href="https://source.android.com/setup/build/downloading#installing-repo">Downloading the Source  |  Android Open Source Project</a>
</p>
</div>
</div>

<div id="outline-container-org9b82c47" class="outline-2">
<h2 id="org9b82c47">设置编译环境</h2>
<div class="outline-text-2" id="text-org9b82c47">
<div class="org-src-container">
<pre class="src src-sh">mkdir -p ~/Opensource/android
<span style="color: #b294bb;">cd</span> ~/Opensource/android
virtualenv2 venv
<span style="color: #b294bb;">source</span> venv/bin/activate
</pre>
</div>

<ul class="org-ul">
<li>参考 <a href="https://wiki.archlinux.org/index.php/Android#Setting_up_the_build_environment">Setting up the build environment - Android - ArchWiki</a></li>
</ul>
</div>
</div>

<div id="outline-container-orge7baed8" class="outline-2">
<h2 id="orge7baed8">下载源代码</h2>
<div class="outline-text-2" id="text-orge7baed8">
<div class="org-src-container">
<pre class="src src-sh">repo init -u https://android.googlesource.com/platform/manifest -b master
repo sync -j4
</pre>
</div>

<p>
以后如果要同步最新代码，则执行
</p>

<div class="org-src-container">
<pre class="src src-sh">repo sync
</pre>
</div>

<p>
下载过程中可能被墙导致失败，可以考虑使用 <code>proxychains</code> 来翻墙，最好还是国内找一
个镜像，加快下载速度。
</p>

<p>
代码有几十个 G，下载和编译都需要很长时间。
</p>

<ul class="org-ul">
<li>参考 <a href="https://wiki.archlinux.org/index.php/Android#Downloading%20the%20source%20code">Downloading the source code - Android - ArchWiki</a></li>
</ul>
</div>
</div>

<div id="outline-container-org84beabd" class="outline-2">
<h2 id="org84beabd">编译</h2>
<div class="outline-text-2" id="text-org84beabd">
<div class="org-src-container">
<pre class="src src-sh"><span style="color: #b294bb;">source</span> build/envsetup.sh
lunch full-eng
make -j4
</pre>
</div>
</div>
</div>

<div id="outline-container-org85d4ce4" class="outline-2">
<h2 id="org85d4ce4">测试</h2>
<div class="outline-text-2" id="text-org85d4ce4">
<div class="org-src-container">
<pre class="src src-sh">emulator
</pre>
</div>
</div>
</div>

<div id="outline-container-org9d5b103" class="outline-2">
<h2 id="org9d5b103">参考</h2>
<div class="outline-text-2" id="text-org9d5b103">
<ul class="org-ul">
<li><a href="https://wiki.archlinux.org/index.php/Android#Building">Building - Android - ArchWiki</a></li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
    </channel>
</rss>