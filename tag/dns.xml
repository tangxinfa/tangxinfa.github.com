<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>dns - 看看俺 – KanKanAn.com</title>
        <description>记我所思，忆我所为。</description>
        <link>http://blog.kankanan.com/tag/dns.xml</link>
        <lastBuildDate>Sat, 09 Jan 2016 10:41:52 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <image>
            <title>dns - 看看俺 – KanKanAn.com</title>
            <url>http://blog.kankanan.com/static/favicon.ico</url>
            <link>http://blog.kankanan.com/tag/dns.xml</link>
        </image>
        <copyright>版权所有 © 2011-2015 看看俺 – KanKanAn.com</copyright>
        <generator>Feed for Node.js</generator>
        <category>技术</category>
        <item>
            <title><![CDATA[使用Pdnsd缓存域名解析结果加快上网速度]]></title>
            <link>/article/4f7f7528-pdnsd-7f135b5857df540d89e367907ed3679c52a05feb4e0a7f51901f5ea6.html</link>
            <guid>/article/4f7f7528-pdnsd-7f135b5857df540d89e367907ed3679c52a05feb4e0a7f51901f5ea6.html</guid>
            <pubDate>Tue, 23 Jun 2015 10:56:00 GMT</pubDate>
            <content:encoded><![CDATA[<ul class="org-ul">
<li>频繁的域名解析容易导致超时出错

<p>
在执行 <code>opkg-cl update</code> 或 <code>yaourt -Syua</code> 命令更新系统软件信息时，容易因为频繁的域名解析而导致更新速度奇慢甚至是超时出错，通过将要访问的域名添加到 <code>/etc/hosts</code> 中，可以立即解决这个问题。考虑到服务器IP可能会换，使用 <code>/etc/hosts</code> 非长久之计。
</p>
</li>

<li>缓存域名解析结果

<p>
更好的办法是缓存域名解析结果，一般来说后台服务程序可以通过缓存域名解析结果加快后继请求的处理，但是对于像 <code>opkg-cl</code> 、 <code>yaourt</code> 之类的工具程序，由于运行一次就退出了，要实现缓存域名解析结果就显得有点小题大作了，最好是在系统底层来实现，而不是每个应用程序都实现这个功能。
</p>

<p>
<a href="http://members.home.nl/p.a.rombouts/pdnsd/">Pdnsd</a> 就是这样一款开源DNS代理服务程序，它安装在客户机上，对于客户端应用程序来说，它是DNS服务程序，对于真正的DNS服务来说它是DNS客户端程序。
</p>
</li>

<li><a href="http://members.home.nl/p.a.rombouts/pdnsd/">Pdnsd</a> 安装

<div class="org-src-container">

<pre class="src src-sh">yaourt -S pdnsd
</pre>
</div>
</li>

<li><a href="http://members.home.nl/p.a.rombouts/pdnsd/">Pdnsd</a> 运行

<div class="org-src-container">

<pre class="src src-sh">sudo systemctl enable pdnsd
sudo systemctl start pdnsd
</pre>
</div>
</li>

<li>客户机DNS设置

<p>
修改 <code>/etc/resolv.conf</code> 为如下内容：
</p>

<pre class="example">
nameserver 127.0.0.1
</pre>

<p>
对于 Archlinux <code>/etc/resolv.conf</code> 是由 <code>resolvconf</code> 工具生成，直接修改后随时可能被覆盖，可以修改 <code>/etc/resolvconf.conf</code> 将以下配置行取消注释：
</p>
<pre class="example">
# name_servers=127.0.0.1
</pre>

<p>
然后重新生成 <code>/etc/resolv.conf</code> 配置文件：
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo resolvconf -u
</pre>
</div>
</li>

<li>看看效果

<p>
多次执行下面的命令，可以感觉到后几次明显比第一次快，这就是DNS缓存在起作用。
</p>

<div class="org-src-container">

<pre class="src src-sh">nslookup www.google.com
</pre>
</div>
</li>

<li>适合国内环境的配置（仅供参考）

<p>
将 <code>/etc/pdnsd.conf</code> 配置文件修改为以下内容：
</p>

<pre class="example">
global {
    perm_cache=1024;
    cache_dir="/var/cache/pdnsd";
    pid_file = /var/run/pdnsd.pid;
    run_as="pdnsd";
    server_ip = 127.0.0.1;
    status_ctl = on;
    query_method=udp_tcp;
    min_ttl=15m;
    max_ttl=1d;
    timeout=10;
    neg_domain_pol=on;
    udpbufsize=1024;
}

server {
    label = "root-servers";
    root_server = discover;
    randomize_servers = on;
    ip = 114.114.114.114,
         223.5.5.5,
         114.114.115.115,
         223.6.6.6;
    timeout = 5;
    uptest = query;
    interval = 30m;
    ping_timeout = 50;
    purge_cache = off;
    exclude = .localdomain;
    policy = included;
    preset = off;
}

source {
    owner=localhost;
    serve_aliases=on;
    file="/etc/hosts";
}

rr {
    name=localhost;
    reverse=on;
    a=127.0.0.1;
    owner=localhost;
    soa=localhost,root.localhost,42,86400,900,86400,86400;
}
</pre>

<p>
重启 <a href="http://members.home.nl/p.a.rombouts/pdnsd/">Pdnsd</a> 生效配置：
</p>

<div class="org-src-container">

<pre class="src src-sh">sudo systemctl restart pdnsd
</pre>
</div>
</li>

<li>参考

<p>
《<a href="http://venmos-com.qiniudn.com/blog/2013/06/19/pdnsd/">用Pdnsd快速打造无污染高速缓存DNS服务器</a>》</p>
</li>
</ul>
]]></content:encoded>
        </item>
    </channel>
</rss>