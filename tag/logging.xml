<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>logging - 看看俺 – KanKanAn.com</title>
        <link>http://blog.kankanan.com/tag/logging.xml</link>
        <description>记我所思，忆我所为。</description>
        <lastBuildDate>Sun, 11 Feb 2018 10:19:58 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>logging - 看看俺 – KanKanAn.com</title>
            <url>http://blog.kankanan.com/static/favicon.ico</url>
            <link>http://blog.kankanan.com/tag/logging.xml</link>
        </image>
        <copyright>版权所有 © 2011-2018 看看俺 – KanKanAn.com</copyright>
        <category>技术</category>
        <item>
            <title><![CDATA[log4php初步使用]]></title>
            <link>/article/log4php-521d6b654f7f7528.html</link>
            <guid>/article/log4php-521d6b654f7f7528.html</guid>
            <pubDate>Mon, 06 May 2013 10:32:00 GMT</pubDate>
            <content:encoded><![CDATA[
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">简介</h2>
<div class="outline-text-2" id="text-1">
<p>
apache出品必属精品。正宗php日志库，与log4j一脉相承。
</p>

<p>
<a href="http://logging.apache.org/log4php/">http://logging.apache.org/log4php/</a>
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">安装</h2>
<div class="outline-text-2" id="text-2">
<p>
参考：<a href="http://logging.apache.org/log4php/install.html">http://logging.apache.org/log4php/install.html</a>
</p>

<ul class="org-ul">
<li>有root权限，安装到系统目录

<div class="org-src-container">

<pre class="src src-sh">sudo apt-get install php-pear
sudo pear channel-discover pear.apache.org/log4php
sudo pear install log4php/Apache_log4php
</pre>
</div>
</li>

<li>没有root权限，安装到当前目录下

<div class="org-src-container">

<pre class="src src-sh"><span style="color: #b294bb;">cd</span> libs
wget http://mirrors.tuna.tsinghua.edu.cn/apache/logging/log4php/2.3.0/apache-log<span style="color: #de935f; background-color: #373b41;">4php-2.3.0-src.tar.gz</span>
tar xzvf apache-log4php-2.3.0-src.tar.gz
ln -sf apache-log4php-2.3.0/src/main/php ./log4php
</pre>
</div>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">使用</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li>进行一下封装定制，可以满足绝大部分情况下的使用

<ul class="org-ul">
<li>类似nginx的访问日志记录格式
</li>
<li>日志中输出文件名及行号
</li>
<li>日志文件数据限制为10个，每个日志文件大小为10MB
</li>
</ul>
<p>
<a href="../static/logging.inc">logging.inc</a>
</p>
</li>

<li>使用示例

<p>
<code>example.php</code>
</p>
<div class="org-src-container">

<pre class="src src-php"><span style="color: #b294bb;">&lt;?php</span>
define(<span style="color: #8abeb7;">'LOGGING_APPNAME'</span>, <span style="color: #8abeb7;">'example'</span>);
<span style="color: #b5bd68;">require_once</span>(dirname(<span style="color: #81a2be;">__FILE__</span>) . <span style="color: #8abeb7;">"/logging.inc"</span>);

<span style="color: #c5c8c6; background-color: #1d1f21;">$</span><span style="color: #f0c674;">logger</span> = <span style="color: #81a2be;">Logger</span><span style="color: #c5c8c6; background-color: #1d1f21;">::</span>getLogger(<span style="color: #8abeb7;">"main"</span>);
<span style="color: #c5c8c6; background-color: #1d1f21;">$</span><span style="color: #f0c674;">logger</span><span style="color: #c5c8c6; background-color: #1d1f21;">-&gt;</span><span style="color: #c5c8c6; background-color: #1d1f21;">debug</span>(<span style="color: #8abeb7;">"info log"</span>);
<span style="color: #c5c8c6; background-color: #1d1f21;">$</span><span style="color: #f0c674;">logger</span><span style="color: #c5c8c6; background-color: #1d1f21;">-&gt;</span><span style="color: #c5c8c6; background-color: #1d1f21;">warn</span>(<span style="color: #8abeb7;">"info log"</span>);
<span style="color: #c5c8c6; background-color: #1d1f21;">$</span><span style="color: #f0c674;">logger</span><span style="color: #c5c8c6; background-color: #1d1f21;">-&gt;</span><span style="color: #c5c8c6; background-color: #1d1f21;">error</span>(<span style="color: #8abeb7;">"info log"</span>);
<span style="color: #81a2be;">?&gt;</span>
</pre>
</div>
</li>

<li>运行结果

<div class="org-src-container">

<pre class="src src-sh">$ php ./example.php
$ tail -f ./logs/example.log
2013-05-06 18:24:57,925 [DEBUG] main: info log (/home/tangxinfa/php/example.php:<span style="color: #de935f; background-color: #373b41;">6)</span>
2013-05-06 18:24:57,930 [WARN] main: info log (/home/tangxinfa/php/example.php:7<span style="color: #de935f; background-color: #373b41;">)</span>
2013-05-06 18:24:57,930 [ERROR] main: info log (/home/tangxinfa/php/example.php:<span style="color: #de935f; background-color: #373b41;">8)</span>
</pre>
</div>
</li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[log4cxx使用心得]]></title>
            <link>/article/log4cxx-4f7f75285fc35f97.html</link>
            <guid>/article/log4cxx-4f7f75285fc35f97.html</guid>
            <pubDate>Tue, 17 Jun 2008 02:01:00 GMT</pubDate>
            <content:encoded><![CDATA[<ul class="org-ul">
<li>简介

<p>
apache出品必属精品。正宗c++日志库，与log4j一脉相承。
</p>

<p>
<a href="http://logging.apache.org/log4cxx/index.html">http://logging.apache.org/log4cxx/index.html</a>
</p>
</li>

<li>下载、编译、安装

<p>
打算安装到${HOME}/libs目录下：
</p>

<div class="org-src-container">

<pre class="src src-sh"><span style="color: #b294bb;">cd</span> ~/libs
wget http://mirror.bjtu.edu.cn/apache//apr/apr-1.4.4.tar.bz2
tar xjvf apr-1.4.4.tar.bz2
<span style="color: #b294bb;">cd</span> apr-1.4.4
./configure --prefix=${<span style="color: #f0c674;">HOME</span>}/libs &amp;&amp; make &amp;&amp; make install
<span style="color: #b294bb;">cd</span> ..
wget http://mirror.bjtu.edu.cn/apache//apr/apr-util-1.3.11.tar.bz2
tar xjvf apr-util-1.3.11.tar.bz2
<span style="color: #b294bb;">cd</span> apr-util-1.3.11
./configure --prefix=${<span style="color: #f0c674;">HOME</span>}/libs --with-apr=${<span style="color: #f0c674;">HOME</span>}/libs &amp;&amp; make &amp;&amp; make instal<span style="color: #de935f; background-color: #373b41;">l</span>
<span style="color: #b294bb;">cd</span> ..
wget http://apache.etoak.com//logging/log4cxx/0.10.0/apache-log4cxx-0.10.0.tar.g<span style="color: #de935f; background-color: #373b41;">z</span>
tar xzvf apache-log4cxx-0.10.0.tar.gz
<span style="color: #b294bb;">cd</span> apache-log4cxx-0.10.0
./configure --with-charset=utf-8 --prefix=${<span style="color: #f0c674;">HOME</span>}/libs --with-apr=${<span style="color: #f0c674;">HOME</span>}/libs -<span style="color: #de935f; background-color: #373b41;">-with-apr-util=${</span><span style="color: #de935f; background-color: #373b41;">HOME</span><span style="color: #de935f; background-color: #373b41;">}/libs &amp;&amp; make &amp;&amp; make install</span>
</pre>
</div>
</li>

<li>使用例子

<p>
<code>hello.cpp</code> ：
</p>
<div class="org-src-container">

<pre class="src src-cpp"><span style="color: #b294bb;">#include</span> <span style="color: #8abeb7;">"log4cxx/logger.h"</span>
<span style="color: #b294bb;">#include</span> <span style="color: #8abeb7;">"log4cxx/propertyconfigurator.h"</span>

<span style="color: #b5bd68;">static</span> <span style="color: #81a2be;">log4cxx</span>::<span style="color: #81a2be;">LoggerPtr</span> <span style="color: #de935f;">logger</span>(<span style="color: #81a2be;">log4cxx</span>::<span style="color: #81a2be;">Logger</span>::getLogger(<span style="color: #8abeb7;">"hello"</span>));

<span style="color: #81a2be;">int</span> <span style="color: #de935f;">main</span>(<span style="color: #81a2be;">int</span> <span style="color: #f0c674;">argc</span>, <span style="color: #81a2be;">char</span> *<span style="color: #f0c674;">argv</span>[])
{
<span style="color: #969896; background-color: #222427;"> </span> <span style="color: #81a2be;">log4cxx</span>::<span style="color: #81a2be;">PropertyConfigurator</span>::configure(<span style="color: #8abeb7;">"./log4cxx_hello.properties"</span>);
<span style="color: #969896; background-color: #222427;"> </span> LOG4CXX_INFO(logger, <span style="color: #8abeb7;">"&#20320;&#22909;&#65292;log4cxx!"</span>);
<span style="color: #969896; background-color: #222427;"> </span> <span style="color: #b5bd68;">return</span> 0;
}
</pre>
</div>

<p>
<code>log4cxx_hello.properties</code> ：
</p>
<pre class="example">
log4j.rootLogger=debug, R

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=./hello.log

log4j.appender.R.MaxFileSize=100KB
# Keep one backup file
log4j.appender.R.MaxBackupIndex=10

log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%5p %c [%t] (%F:%L) - %m%n
</pre>

<p>
编译：
</p>
<div class="org-src-container">

<pre class="src src-sh">g++ -o hello hello.cpp -I${<span style="color: #f0c674;">HOME</span>}/libs/include ${<span style="color: #f0c674;">HOME</span>}/libs/lib/liblog4cxx.a ${<span style="color: #f0c674;">HO</span><span style="color: #de935f; background-color: #373b41;">ME</span><span style="color: #de935f; background-color: #373b41;">}/libs/lib/libaprutil-1.a ${</span><span style="color: #de935f; background-color: #373b41;">HOME</span><span style="color: #de935f; background-color: #373b41;">}/libs/lib/libapr-1.a  -lexpat -lpthread</span>
</pre>
</div>
</li>

<li>注意事项

<p>
由于一个日志文件写满后会重命名所有已有的日志文件，配置过大MaxBackupIndex的会有性能问题，因此log4cxx编译时限制了它的大小（大概十多个）以避免配置的MaxBackupIndex过大，如果要设置更大一点的MaxFileSize来保存更多日志，需要在编译前进行修改。
</p>

<p>
参考：<a href="http://objectmix.com/apache/684503-urgent-log4cxx-large-window-sizes-not-allowed.html">http://objectmix.com/apache/684503-urgent-log4cxx-large-window-sizes-not-allowed.html</a>
</p>
</li>

<li>使用技巧
<ul class="org-ul">
<li>决定配置文件的格式（xml，property）。以使用相应的配置器（Configurator）装入配置文件。

<p>
xml虽较property格式繁锁，支持的配置面更全，而property格式的配置文件使用更简单，容易在网上找到现成的配置文件。
</p>
</li>

<li>logger命名

<p>
logger名称反映了软件模块，如果有代表软件模块的类，则在类中包含以该类类名命名的logger对象，该模块功能相关代码通过该logger进行日志记录。
另外可将logger对象作为全局变量，方便使用，特别是当软件模块较松散，并无对应的封装类时。
</p>
</li>

<li>在代码中适当地放置日志代码。引用适当的日志对象，对日志进行适当分级。
</li>

<li>余下的工作就是修改配置文件，对日志进行控制了。
</li>
</ul>
</li>
</ul>

<p>
　　使用配置文件的好处就是可以方便地配置日志而不需要修改源代码，可以在配置文件中方便配置日志过滤、格式、日志目的地。
</p>

<ul class="org-ul">
<li>体验
</li>
</ul>

<p>
　之前产品中用到的是log4cplus，但是常常有写日志崩溃的情况出现，使用log4cxx正是用于解决该崩溃。</p>
]]></content:encoded>
        </item>
    </channel>
</rss>