<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>envoy - 看看俺 – KanKanAn.com</title>
        <link>http://blog.kankanan.com/tag/envoy.xml</link>
        <description>记我所思，忆我所为。</description>
        <lastBuildDate>Mon, 20 Nov 2017 08:11:34 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>envoy - 看看俺 – KanKanAn.com</title>
            <url>http://blog.kankanan.com/static/favicon.ico</url>
            <link>http://blog.kankanan.com/tag/envoy.xml</link>
        </image>
        <copyright>版权所有 © 2011-2015 看看俺 – KanKanAn.com</copyright>
        <category>技术</category>
        <item>
            <title><![CDATA[使用 Envoy 做为 socket.io 的前端代理]]></title>
            <link>/article/4f7f7528-envoy-505a4e3a-socket.io-7684524d7aef4ee37406.html</link>
            <guid>/article/4f7f7528-envoy-505a4e3a-socket.io-7684524d7aef4ee37406.html</guid>
            <pubDate>Mon, 20 Nov 2017 06:39:00 GMT</pubDate>
            <content:encoded><![CDATA[
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">示例 socket.io 项目</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>编译

<div class="org-src-container">

<pre class="src src-sh">go get github.com/tangxinfa/envoy-socket.io-example
<span style="color: #b294bb;">cd</span> $<span style="color: #f0c674;">GOPATH</span>/src/github.com/tangxinfa/envoy-socket.io-example
glide install
go build
</pre>
</div>
</li>

<li>运行

<div class="org-src-container">

<pre class="src src-sh">./envoy-socket.io-example -logtostderr
</pre>
</div>
</li>

<li>用浏览器打开 <code>http://localhost:8001</code>

<p>
正常情况下，会收到 <code>welcome</code> 消息，表示 <code>socket.io</code> 连接成功，可以在下方的编辑框输入内容，服务器会 echo 回来。
</p>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">修复 Envoy 的 Websocket 相关 Bug</h2>
<div class="outline-text-2" id="text-2">
<p>
当前的 Envoy 版本为
</p>
<pre class="example">
commit 3e43c2225c8882918b36b4b7c7bb55c6af2db929
Author: Greg Greenway &lt;ggreenway@users.noreply.github.com&gt;
Date:   Wed Nov 15 14:48:38 2017 -0800

Fix v2 TcpProxy config (#2065)

Signed-off-by: Greg Greenway &lt;ggreenway@apple.com&gt;
</pre>

<p>
存在两个问题导致 Websocket 不可用：
</p>

<ul class="org-ul">
<li>Connection 请求头包含多个值时未能正确处理，导致未正确判断出 Websocket 请求

<p>
Firefox 发起的 Websocket 请求 Connection 头的值为： <code>keep-alive, Upgrade</code> 。
</p>
</li>
</ul>


<ul class="org-ul">
<li>Envoy 向 Upstream 发起的 Websocket 请求多了一个 <code>transfer-encoding: chunked</code> 请求头

<p>
由于请求体是空的，所以是一个无效的 HTTP 请求。
</p>
</li>
</ul>


<p>
已提交 Merge Request <a href="https://github.com/envoyproxy/envoy/pull/2070">#2070</a> ，相信会很快修复。
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">将 Envoy 做为 socket.io 服务前端代理</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li>启动 Envoy

<p>
使用是的修复 BUG 后的 Envoy。
</p>

<div class="org-src-container">

<pre class="src src-sh">~/Opensource/envoy/bazel-bin/source/exe/envoy-static --log-level trace --config-<span style="color: #de935f; background-color: #373b41;">path ./envoy.json</span>
</pre>
</div>
</li>
</ul>


<ul class="org-ul">
<li>用浏览器打开 <code>http://localhost:9001</code>

<p>
正常情况下，会收到 <code>welcome</code> 消息，表示 socket.io 连接成功，可以在下方的编辑框输入内容，服务器会 echo 回来。</p>
</li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Envoy 的 json_transcoder_filter 介绍]]></title>
            <link>/article/envoy-7684-json_transcoder_filter-4ecb7ecd.html</link>
            <guid>/article/envoy-7684-json_transcoder_filter-4ecb7ecd.html</guid>
            <pubDate>Thu, 12 Oct 2017 11:56:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>
json_transcoder_filter 实现 HTTP/1.1+JSON 与 HTTP/2+GRPC 的互转。
</p>

<p>
使用第三方库 <a href="https://github.com/grpc-ecosystem/grpc-httpjson-transcoding">grpc-httpjson-transcoding</a> 完成 json 与 grpc 的协议转换，
转换规则由 <a href="https://github.com/googleapis/googleapis/blob/master/google/api/http.proto">http.proto</a> 定义。
</p>

<p>
<a href="https://github.com/googleapis/googleapis/blob/master/google/api/http.proto">http.proto</a> 通过注解（Annotations）为 GRPC 接口添加 RESTful HTTP 接口映射。
</p>

<p>
<code>json_transcoder_filter</code> 对 stream 有一定支持，由于它是基于 HTTP/1.1，本质上是请求-响应模型，
只支持 GRPC 的 <code>Server streaming</code> 和 <code>Client streaming</code> ，不支持 <code>Bidirectional streaming</code> ，
它将 GRPC 消息流映射为消息数组（Json array）。
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">示例项目</h2>
<div class="outline-text-2" id="text-1">
<p>
Envoy 带了一个 <a href="https://github.com/envoyproxy/envoy/tree/master/examples/grpc-bridge">grpc-bridge 示例项目</a>，依照它做了一个 grpc_json_transcoder 示例项目：
</p>

<ul class="org-ul">
<li><a href="https://github.com/tangxinfa/grpc_json_transcoder_example">tangxinfa/grpc_json_transcoder_example: Envoy grpc_json_transcoder filter example</a>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">参考</h2>
<div class="outline-text-2" id="text-2">
<ul class="org-ul">
<li><a href="https://cloud.google.com/endpoints/docs/grpc/transcoding">Transcoding HTTP/JSON to gRPC  |  Cloud Endpoints with gRPC  |  Google Cloud Platform</a>
</li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
    </channel>
</rss>