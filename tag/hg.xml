<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>hg - 看看俺 – KanKanAn.com</title>
        <description>记我所思，忆我所为。</description>
        <link>http://blog.kankanan.com/tag/hg.xml</link>
        <lastBuildDate>Mon, 10 Apr 2017 10:05:50 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <image>
            <title>hg - 看看俺 – KanKanAn.com</title>
            <url>http://blog.kankanan.com/static/favicon.ico</url>
            <link>http://blog.kankanan.com/tag/hg.xml</link>
        </image>
        <copyright>版权所有 © 2011-2015 看看俺 – KanKanAn.com</copyright>
        <generator>Feed for Node.js</generator>
        <category>技术</category>
        <item>
            <title><![CDATA[linux下翻墙访问bitbucket.org仓库]]></title>
            <link>/article/linux-4e0b7ffb58998bbf95ee-bitbucket.org-4ed35e93.html</link>
            <guid>/article/linux-4e0b7ffb58998bbf95ee-bitbucket.org-4ed35e93.html</guid>
            <pubDate>Fri, 28 Jun 2013 05:57:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>
今天往 bitbucket.org push 时才发现 bitbucket 被 GFW 了。我的仓库为 Mercurial hg，hg 项目根目录下的 <code>.hg/hgrc</code> 配置文件中可指定 http_proxy，试了一下不支持 socks 代理（我的浏览器用它来翻墙），最终使用 tsocks 或 proxychains 实现翻墙访问 bitbucket.org 仓库。
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">使用 ssh 服务代理网络访问</h2>
<div class="outline-text-2" id="text-1">
<p>
创建本地 socks 代理的脚本 <code>ssh_proxy.sh</code>
</p>
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #969896; font-style: italic;">#</span><span style="color: #969896; font-style: italic;">!/bin/</span><span style="color: #b5bd68;">bash</span>

<span style="color: #f0c674;">n</span>=<span style="color: #b294bb;">`ps waux | grep 'bash .*/ssh_proxy.sh' | grep -v grep | wc -l`</span>
<span style="color: #b5bd68;">if</span> [ $<span style="color: #f0c674;">n</span> -lt 3 ]; <span style="color: #b5bd68;">then</span>
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #b5bd68;">while</span> [ true ]; <span style="color: #b5bd68;">do</span>
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #f0c674;">n</span>=<span style="color: #b294bb;">`ps aux | grep 'ssh' | grep '7070' | grep -v grep | wc -l`</span>
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #b5bd68;">if</span> [ $<span style="color: #f0c674;">n</span> -lt 1 ]; <span style="color: #b5bd68;">then</span>
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #b294bb;">echo</span> <span style="color: #8abeb7;">"start ssh connecting"</span>
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   ssh -qTnNf -D 7070 user@host
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #b5bd68;">fi</span>
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #b294bb;">echo</span> <span style="color: #8abeb7;">"wait for next checking"</span>
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #969896; background-color: #1d1f21;"> </span>   sleep 30
<span style="color: #969896; background-color: #1d1f21;"> </span>   <span style="color: #b5bd68;">done</span>
<span style="color: #b5bd68;">fi</span>
<span style="color: #b294bb;">echo</span> <span style="color: #8abeb7;">"ssh_proxy.sh already running"</span>
</pre>
</div>

<p>
请将 user@host 改为你的 vps 用户及主机，并配置为免输入密码。
</p>

<p>
启动 socks 代理脚本
</p>

<div class="org-src-container">

<pre class="src src-sh">nohup bash ./ssh_proxy.sh &amp;
</pre>
</div>

<p>
通过 ssh 隧道是最简单的方式，vps 一般都会开 ssh 服务，拿来即用。
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">使用 shadowsocks 服务代理网络访问</h2>
<div class="outline-text-2" id="text-2">
<p>
vps 上安装并启动 shadowsocks 服务器（ss-server），配置文件 <code>/etc/shadowsocks.json</code> 内容如下
</p>
<div class="org-src-container">

<pre class="src src-json">{
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"server"</span>:<span style="color: #8abeb7;">"0.0.0.0"</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"server_port"</span>:<span style="color: #81a2be;">8989</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"password"</span>:<span style="color: #8abeb7;">"7FdiirqD"</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"timeout"</span>:<span style="color: #81a2be;">600</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"method"</span>:<span style="color: #8abeb7;">"aes-256-cfb"</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"fast_open"</span>: <span style="color: #81a2be;">false</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"workers"</span>: <span style="color: #81a2be;">1</span>
}
</pre>
</div>

<p>
<code>password</code> 请自行进行修改。
</p>

<p>
pc 上安装并启动 shadowsocks 客户端（ss-local），配置文件 <code>/etc/shadowsocks.json</code> 内容如下
</p>
<div class="org-src-container">

<pre class="src src-json">{
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"server"</span>:<span style="color: #8abeb7;">"X.X.X.X"</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"server_port"</span>:<span style="color: #81a2be;">8989</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"local_port"</span>:<span style="color: #81a2be;">7070</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"password"</span>:<span style="color: #8abeb7;">"7FdiirqD"</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"timeout"</span>:<span style="color: #81a2be;">600</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"method"</span>:<span style="color: #8abeb7;">"aes-256-cfb"</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"fast_open"</span>: <span style="color: #81a2be;">false</span>,
<span style="color: #969896; background-color: #1d1f21;"> </span> <span style="color: #b5bd68;">"workers"</span>: <span style="color: #81a2be;">1</span>
}
</pre>
</div>

<p>
<code>server</code> 请自行修改为真正的 shadowsocks 服务器外网 IP。
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">透明代理</h2>
<div class="outline-text-2" id="text-3">
<p>
firefox 可以配置为通过 socks 代理联网，但绝大多数应用是不支持的，而透明代理（Transparent Proxy）可以使这些应用也使用代理联网。
</p>
</div>

<div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1">ss-redir</h3>
<div class="outline-text-3" id="text-3-1">
<p>
shadowsocks 自带的本地透明代理客户端，可以使整个系统都使用代理访问网络。
</p>

<p>
参考 <a href="http://manpages.org/ss-redir">man ss-redir (1): shadowsocks client as transparent proxy, libev port</a>
</p>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2">tsocks</h3>
<div class="outline-text-3" id="text-3-2">
<ul class="org-ul">
<li>安装

<div class="org-src-container">

<pre class="src src-sh">yaourt -S tsocks
</pre>
</div>
</li>

<li>配置

<p>
<code>/etc/tsocks.conf</code>
</p>
<pre class="example">
# We can access 192.168.0.* directly
local = 192.168.0.0/255.255.255.0
local = 10.0.0.0/255.0.0.0

# Otherwise we use the server
server = 127.0.0.1
server_port = 7070
</pre>

<p>
具体用法 <code>man tsocks.conf</code>
</p>
</li>

<li>使用

<p>
让 hg 用上 socks 代理功能
</p>

<div class="org-src-container">

<pre class="src src-sh">tsocks hg push
</pre>
</div>

<p>
tsocks 看起来很通用，应该也可以让 git 等进行 socks 代理访问。
</p>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3">proxychains</h3>
<div class="outline-text-3" id="text-3-3">
<p>
tsocks 不支持代理访问 https
</p>

<pre class="example">
$ tsocks curl https://www.baidu.com
curl: (7) Failed to connect to www.baidu.com port 443: Connection refused
</pre>

<p>
proxychains 支持代理访问 https
</p>

<pre class="example">
$ proxychains curl https://www.baidu.com
[proxychains] config file found: /etc/proxychains.conf
[proxychains] preloading /usr/lib/libproxychains4.so
[proxychains] DLL init: proxychains-ng 4.11
[proxychains] Dynamic chain  ...  127.0.0.1:7070  ...  www.baidu.com:443  ...  OK
&lt;html&gt;
&lt;head&gt;
    &lt;script&gt;
        location.replace(location.href.replace("https://","http://"));
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;noscript&gt;&lt;meta http-equiv="refresh" content="0;url=http://www.baidu.com/"&gt;&lt;/noscript&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
proxychains 的安装配置请参考：<a href="https://sites.google.com/a/pickdreams.org/snail-library/Home/yong-tsocks-heproxychains-dai-lilinux-xia-suo-you-ruan-jian">用tsocks和proxychains代理Linux下所有软件 - 蜗牛图书馆</a></p>
</div>
</div>
</div>
]]></content:encoded>
        </item>
    </channel>
</rss>