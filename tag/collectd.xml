<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>collectd - 看看俺 – KanKanAn.com</title>
        <description>记我所思，忆我所为。</description>
        <link>http://blog.kankanan.com/tag/collectd.xml</link>
        <lastBuildDate>Thu, 05 May 2016 04:54:34 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <image>
            <title>collectd - 看看俺 – KanKanAn.com</title>
            <url>http://blog.kankanan.com/static/favicon.ico</url>
            <link>http://blog.kankanan.com/tag/collectd.xml</link>
        </image>
        <copyright>版权所有 © 2011-2015 看看俺 – KanKanAn.com</copyright>
        <generator>Feed for Node.js</generator>
        <category>技术</category>
        <item>
            <title><![CDATA[collectd exec 插件使用进阶]]></title>
            <link>/article/collectd-exec-63d24ef64f7f75288fdb9636.html</link>
            <guid>/article/collectd-exec-63d24ef64f7f75288fdb9636.html</guid>
            <pubDate>Thu, 05 May 2016 04:44:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>
前面一篇文章《<a href="http://blog.kankanan.com/article/4f7f7528-collectd-8fdb884c670d52a176d163a7.html">使用 collectd 进行服务监控 | 看看俺 – KanKanAn.com</a>》展示了如何使用 collectd 的 exec 插件。
</p>

<p>
要使收集的统计信息显示正常、易于使用，则需要对上报的数据有充分的理解。
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">数据上报</h2>
<div class="outline-text-2" id="text-1">
<p>
引用自 <a href="https://collectd.org/documentation/manpages/collectd-exec.5.shtml">man 5 collectd-exec</a>
</p>
<blockquote>
<p>
PUTVAL Identifier [OptionList] Valuelist
  Submits one or more values (identified by Identifier, see below) to the daemon which will dispatch it to all it's write-plugins.
</p>

<p>
An Identifier is of the form "host/plugin-instance/type-instance" with both instance-parts being optional. If they're omitted the hyphen must be omitted, too. plugin and each instance-part may be chosen freely as long as
the tuple (plugin, plugin instance, type instance) uniquely identifies the plugin within collectd. type identifies the type and number of values (i. e. data-set) passed to collectd. A large list of predefined data-sets is
available in the types.db file. See types.db(5) for a description of the format of this file.
</p>

<p>
The OptionList is an optional list of Options, where each option is a key-value-pair. A list of currently understood options can be found below, all other options will be ignored. Values that contain spaces must be quoted
with double quotes.
</p>

<p>
Valuelist is a colon-separated list of the time and the values, each either an integer if the data-source is a counter, or a double if the data-source is of type "gauge". You can submit an undefined gauge-value by using
U. When submitting U to a counter the behavior is undefined. The time is given as epoch (i. e. standard UNIX time).
</p>

<p>
You can mix options and values, but the order is important: Options only effect following values, so specifying an option as last field is allowed, but useless. Also, an option applies to all following values, so you
don't need to re-set an option over and over again.
</p>

<p>
The currently defined Options are:
</p>

<p>
interval=seconds
    Gives the interval in which the data identified by Identifier is being collected.
</p>

<p>
Please note that this is the same format as used in the unixsock plugin, see collectd-unixsock(5). There's also a bit more information on identifiers in case you're confused.
</p>

<p>
Since examples usually let one understand a lot better, here are some:
</p>

<p>
PUTVAL leeloo/cpu-0/cpu-idle N:2299366
PUTVAL alice/interface/if_octets-eth0 interval=10 1180647081:421465:479194
</p>
</blockquote>

<ul class="org-ul">
<li><code>Identifier</code> 

<p>
格式为 <code>host/plugin-instance/type-instance</code> 
</p>

<p>
其中的 <code>-</code> 为分隔符， <code>instance</code> 部分是可省略（此时 <code>-</code> 也要省略）。
</p>
</li>

<li><code>host</code>

<p>
主机名称，通常取自 <code>HOSTNAME</code> 环境变量。
</p>
</li>

<li><code>plugin</code> 

<p>
插件名称。
</p>
</li>

<li><code>type</code>

<p>
预定义的值类型名称，定义值的类型及数量，以及 collectd 服务会对值做何处理（如：按时间间隔平均化）。
</p>

<p>
参考 <a href="https://collectd.org/documentation/manpages/types.db.5.shtml">man 5 types.db</a> <a href="https://collectd.org/wiki/index.php/Data_source">Data source - collectd Wiki</a>
</p>

<p>
如某个上报的统计指标在网页上没有对应的图表产生，则很可能是上报的值与类型不符，我们的机器上运营人员改动了 types.db 中 memory 类型，导致上报失败：
</p>
<pre class="example">
# memory         value:GAUGE:0:281474976710656
memory          free:GAUGE:0:281474976710656, buffered:GAUGE:0:281474976710656, used:GAUGE:0:281474976710656, cached:GAUGE:0:281474976710656
</pre>
</li>
</ul>
</div>
</div>


<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">分层展示</h2>
<div class="outline-text-2" id="text-2">
<ul class="org-ul">
<li>主机列表

<p>
选择要查看的主机，对应上面的 <code>host</code>
</p>
</li>
</ul>


<ul class="org-ul">
<li>插件列表

<p>
选择要查看的插件，对应上面的 <code>plugin</code>
</p>
</li>
</ul>


<ul class="org-ul">
<li>统计图表列表页

<p>
插件实例（ <code>plugin instance</code> ）+类型（ <code>type</code> ）产生一张图表，类型实例（ <code>type instance</code> ）对应图标上的一条曲线。
</p>
</li>
</ul>


<ul class="org-ul">
<li>统计图表详情页

<p>
点击统计图表列表页上的图表进入统计图表详情页，此时可以选择统计的时间范围（如：按小时、天、周、月、年）。
</p>

<p>
另外可以聚合显示所有主机上的相同统计图表，以便进行交叉对比。
</p>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">总结</h2>
<div class="outline-text-2" id="text-3">
<p>
上报数据时，我们拥有极大的自由性，而 collectd 会宽容地接受并展示结果，但是为了让最终的结果有用、易用，我们需要正确地指定上报的信息项。
</p>

<ul class="org-ul">
<li><code>host</code>

<p>
应该填写主机名称，当我们需要整个服务（包括多台主机）的统计时，可以借助 collectd 界面提供的聚合功能实现。
</p>
</li>
</ul>


<ul class="org-ul">
<li><code>plugin</code>

<p>
插件名称
</p>
</li>

<li><code>plugin instance</code>

<p>
插件实例，对应插件收集一个统计指标名称，如：memory。
</p>

<p>
对于简单的插件（只收集一个统计指标），则可以直接省略插件实例（plugin instance）部分，插件名称命名使用统计指标名称。
</p>
</li>

<li><code>type</code>

<p>
请在 types.db 中预定义的类型中选择。
</p>
</li>

<li><code>type instance</code>

<p>
对于主机上的唯一统计指标（如：load），就不需要使用 <code>type instance</code> 了，如果是主机上的非唯一统计指标（如：各分区使用率、进程 cpu 占用率等），则可以使用 <code>type instance</code> 来区分（如：填写为分区路径、进程名称等）。
</p>

<p>
多个 <code>type instance</code> 会在同一张图表中各使用一条曲线展示，如果放在一起展示没有意义，则可能更适合使用 <code>plugin instance</code> 进行标识。</p>
</li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Archlinux 的 collectd 支持监控 redis]]></title>
            <link>/article/archlinux-7684-collectd-652f630176d163a7-redis.html</link>
            <guid>/article/archlinux-7684-collectd-652f630176d163a7-redis.html</guid>
            <pubDate>Thu, 31 Mar 2016 09:44:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>
Archlinux 下使用 <code>pacman</code> 安装的 <code>collectd</code> 没有 redis 插件。
</p>

<p>
查看 collectd 的 <a href="https://projects.archlinux.org/svntogit/community.git/tree/trunk/PKGBUILD?h=packages/collectd">PKGBUILD</a> 文件，并未明令禁止 redis 插件，从源代码编译安装的话，只要系统装了 <code>hiredis</code> ，redis 插件应该就会自动启用。
</p>

<p>
所以我们需要从源代码编译安装 <code>collectd</code> 软件包。
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">安装 ABS</h2>
<div class="outline-text-2" id="text-1">
<blockquote>
<p>
What is the Arch Build System?
</p>

<p>
The Arch Build System is a ports-like system for building and packaging software from source code. While pacman is the specialized Arch tool for binary package management (including packages built with the ABS), ABS is a collection of tools for compiling source into installable .pkg.tar.xz packages.    
</p>
</blockquote>
<p>
引用自 <a href="https://wiki.archlinux.org/index.php/Arch_Build_System">Arch Build System - ArchWiki</a>
</p>

<div class="org-src-container">

<pre class="src src-sh">yaourt -S abs
sudo abs
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">编译安装 collectd</h2>
<div class="outline-text-2" id="text-2">
<div class="org-src-container">

<pre class="src src-sh"><span class="linenr">1: </span>yaourt -S hiredis
<span class="linenr">2: </span>cp -R /var/abs/community/collectd ~/
<span class="linenr">3: </span><span style="color: #cc99cc;">cd</span> ~/collectd
<span id="coderef-archlinux_makepkg" class="coderef-off"><span class="linenr">4: </span>makepkg</span>
<span class="linenr">5: </span>yaourt -U ./collectd-5.5.1-2-x86_64.pkg.tar.xz
</pre>
</div>

<dl class="org-dl">
<dt> 行 <a href="#coderef-archlinux_makepkg"class="coderef" onmouseover="CodeHighlightOn(this, 'coderef-archlinux_makepkg');" onmouseout="CodeHighlightOff(this, 'coderef-archlinux_makepkg');">4</a>  </dt><dd>如果报 <code>Missing dependencies</code> 错误则按提示使用 pacman 装上缺失的依赖项
</dd>
</dl>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">使用以前的 collectd 配置</h2>
<div class="outline-text-2" id="text-3">
<p>
重新安装 collectd 后，以前的配置保存在 <code>/etc/collectd.conf.pacsave</code> ，恢复一下
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo mv /etc/collectd.conf.pacsave /etc/collectd.conf
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4">启用 collectd 插件</h2>
<div class="outline-text-2" id="text-4">
<p>
修改 collectd 配置文件 <code>/etc/collectd.conf</code> 
</p>
<pre class="example">
LoadPlugin redis

&lt;Plugin redis&gt;
  &lt;Node "db"&gt;
     Host "127.0.0.1"
     Port "6379"
     Timeout 2000
  &lt;/Node&gt;
&lt;/Plugin&gt;
</pre>

<p>
重启 collectd 服务，现在可以在界面上看到 redis 的监控项了。
</p>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5">参考</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li><a href="http://arch.acgtyrant.com/2013/12/26/soul/">Arch Linux 的靈魂：PKGBUILD、AUR 和 ABS | Tyrant's Arch Linux</a>
</li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[使用 collectd 进行服务监控]]></title>
            <link>/article/4f7f7528-collectd-8fdb884c670d52a176d163a7.html</link>
            <guid>/article/4f7f7528-collectd-8fdb884c670d52a176d163a7.html</guid>
            <pubDate>Thu, 31 Mar 2016 04:39:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>
collectd 的官网 <a href="https://collectd.org/">collectd.org</a> 。
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">collectd 服务</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>安装

<div class="org-src-container">

<pre class="src src-sh">yaourt -S collectd
</pre>
</div>
</li>

<li>启动

<div class="org-src-container">

<pre class="src src-sh">sudo systemctl enable collectd
sudo systemctl start collectd
</pre>
</div>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">collectd 界面</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><a href="http://blog.kankanan.com/article/nginx-4e0b5feb901f642d5efa-php-8fd0884c73af5883.html">nginx下快速搭建php运行环境</a></h3>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2">安装 rrdtool</h3>
<div class="outline-text-3" id="text-2-2">
<div class="org-src-container">

<pre class="src src-sh">yaourt -S rrdtool
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3">下载 GCP</h3>
<div class="outline-text-3" id="text-2-3">
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #cc99cc;">cd</span> /usr/share/nginx/html/
sudo git clone https://github.com/pommi/CGP.git
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2-4" class="outline-3">
<h3 id="sec-2-4">配置 GCP</h3>
<div class="outline-text-3" id="text-2-4">
<p>
修改配置文件 /usr/share/nginx/html/CGP/conf/config.php
</p>
<pre class="example">
# collectd's datadir
$CONFIG['datadir'] = '/var/lib/collectd/rrd';
</pre>
<p>
改为
</p>
<pre class="example">
# collectd's datadir
$CONFIG['datadir'] = '/var/lib/collectd';
</pre>
</div>
</div>

<div id="outline-container-sec-2-5" class="outline-3">
<h3 id="sec-2-5">打开界面</h3>
<div class="outline-text-3" id="text-2-5">
<p>
浏览器打开页面 <a href="http://localhost/CGP/index.php"><a href="http://localhost/CGP/index.php">http://localhost/CGP/index.php</a></a> ，可以看到服务器自身的监控信息。
</p>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">collectd 插件</h2>
<div class="outline-text-2" id="text-3">
<p>
collectd 支持很多 <a href="https://collectd.org/wiki/index.php/Table_of_Plugins">插件</a> ，使用 c 语言开发插件请参考 <a href="https://collectd.org/wiki/index.php/Plugin_architecture">Plugin architecture - collectd Wiki</a>。
</p>

<p>
<a href="https://collectd.org/wiki/index.php/Plugin:Exec">Exec</a> 插件使用 shell 脚本来收集系统监控数据。
</p>

<p>
以监控电池电量为例。
</p>
</div>

<div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1">启用 Exec 插件</h3>
<div class="outline-text-3" id="text-3-1">
<p>
修改 collectd 配置文件 /etc/collectd.conf
</p>
<pre class="example">
LoadPlugin exec
&lt;Plugin exec&gt;
   Exec "nobody:nobody" "/usr/bin/power-capacity"
&lt;/Plugin&gt;
</pre>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2">监控笔记本电量脚本</h3>
<div class="outline-text-3" id="text-3-2">
<p>
<code>/usr/bin/power-capacity</code>
</p>
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #999999; font-style: italic;">#</span><span style="color: #999999; font-style: italic;">!/bin/</span><span style="color: #99cc99;">bash</span>

<span style="color: #ffcc66;">HOSTNAME</span>=<span style="color: #66cccc;">"${COLLECTD_HOSTNAME:-localhost}"</span>
<span style="color: #ffcc66;">INTERVAL</span>=<span style="color: #66cccc;">"${COLLECTD_INTERVAL:-60}"</span>

<span style="color: #99cc99;">while</span> sleep <span style="color: #66cccc;">"$INTERVAL"</span>; <span style="color: #99cc99;">do</span>
<span style="color: #cccccc; background-color: #515151;"> </span> <span style="color: #ffcc66;">VALUE</span>=$(<span style="color: #cc99cc;">echo</span> -n <span style="color: #cc99cc;">`cat /sys/class/power_supply/BAT0/capacity`</span>)
<span style="color: #cccccc; background-color: #515151;"> </span> <span style="color: #cc99cc;">echo</span> <span style="color: #66cccc;">"PUTVAL \"$HOSTNAME/power/capacity\" interval=$INTERVAL N:$VALUE"</span>
<span style="color: #99cc99;">done</span>
</pre>
</div>

<p>
为脚本添加可执行权限
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo chmod a+x /usr/bin/power-capacity
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3">重启 collectd 生效插件</h3>
<div class="outline-text-3" id="text-3-3">
<div class="org-src-container">

<pre class="src src-sh">sudo systemctl restart collectd
</pre>
</div>

<p>
过一会儿就可以在界面上看到电量监控项。
</p>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4">collectd 多机器监控</h2>
<div class="outline-text-2" id="text-4">
<p>
监控本机没有什么用处，通过 network 插件，可以将 collectd 配置为服务器或客户端。
</p>

<ul class="org-ul">
<li>collectd 服务器

<p>
接受 collectd 客户端的上报的数据。
</p>
</li>

<li>collectd 客户端

<p>
上报数据到 collectd 服务器。
</p>
</li>
</ul>
</div>

<div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1">本机配置为 collectd 服务器</h3>
<div class="outline-text-3" id="text-4-1">
<p>
通过 <a href="https://collectd.org/documentation/manpages/collectd.conf.5.shtml#plugin_network">network</a> 插件配置为 server 端。
</p>

<p>
修改 collectd 配置文件 /etc/collectd.conf 
</p>
<pre class="example">
LoadPlugin network

&lt;Plugin network&gt;
    &lt;Listen "0.0.0.0" "25826"&gt;
        SecurityLevel Sign
        AuthFile "/etc/collectd/passwd"
    &lt;/Listen&gt;
&lt;/Plugin&gt;
</pre>

<p>
创建密码文件
<code>/etc/collectd/passwd</code>
</p>
<pre class="example">
user0: foo
user1: bar
</pre>

<p>
重启 collectd 服务，生效配置。
</p>
</div>
</div>

<div id="outline-container-sec-4-2" class="outline-3">
<h3 id="sec-4-2">其它机器配置为 collectd 客户端</h3>
<div class="outline-text-3" id="text-4-2">
<p>
参考前面的 <a href="#sec-1">collectd 服务</a> 一节安装 collectd。
</p>

<p>
通过 <a href="https://collectd.org/documentation/manpages/collectd.conf.5.shtml#plugin_network">network</a> 插件配置为 client 端。
</p>

<p>
修改 collectd 配置文件 /etc/collectd.conf 
</p>
<pre class="example">
LoadPlugin network

&lt;Plugin network&gt;
    &lt;Server "172.17.0.1" "25826"&gt;
        SecurityLevel Encrypt
        Username "user0"
        Password "foo"
    &lt;/Server&gt;
&lt;/Plugin&gt;
</pre>
<p>
服务器的 IP 为 172.17.0.1。
</p>

<p>
重启 collectd 服务，生效配置，等一会儿就可以在界面上看到客户端机器的监控信息。
</p>
</div>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5">参考</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li><a href="https://github.com/pommi/CGP/blob/master/README.md">CGP/README.md at master · pommi/CGP</a>
</li>

<li><a href="https://collectd.org/wiki/index.php/First_steps">First steps - collectd Wiki</a>
</li>

<li><a href="http://www.drupal001.com/2012/07/system-monitor-collectd/">Collectd详解、Collectd使用说明、Collectd中文说明 - 系统性能监控利器</a>
</li>

<li><a href="https://collectd.org/wiki/index.php/Plugin:Exec">Plugin:Exec - collectd Wiki</a>
</li>

<li><a href="http://blog.sina.com.cn/s/blog_502c8cc40100pbgu.html">collectd使用_新浪研发中心_新浪博客</a>
</li>

<li><a href="https://collectd.org/documentation/manpages/collectd.conf.5.shtml#global_options">collectd.conf(5) – collectd – The system statistics collection daemon</a>
</li>
</ul>
</div>
</div>
]]></content:encoded>
        </item>
    </channel>
</rss>