#+AUTHOR: 唐新发
#+EMAIL: tangxinfa@xunlei.com
#+DESCRIPTION: 120 minutes
#+OPTIONS: toc:nil

* Javascript简介
  web浏览器上的唯一语言
  批着c外衣的lisp
  被误解最多的语言

  :NOTES:
  　　1995年，Netscape（网景）打算在浏览器（Netscape Navigator 2.0）中嵌入Scheme，招募来Brendan Eich（布兰登·艾奇），事情很快变成在浏览器中嵌入一种像Java的脚本语言，Brendan Eich在10天的时间里写出了JavaScript的雏形Mocha（摩卡），Mocha也被用于入Netscape的服务器产品LiveWire，为了便于市场营销JavaScript改名为LiveScript，1995年底Netscape和Sun商谈将LiveScript最终更名为JavaScript。
　　　JavaScript 1.0随Netscape Navigator 2.0发行并取得了成功，随后Netscape在Netscape Navigator 3.0中发布了JavaScript 1.1版，这个时候微软决定进军浏览器，发布了IE 3.0并搭载了一个JavaScript的克隆版，叫做JScript。1997年，JavaScript 1.1JavaScript 1.1作为一个草案提交给欧洲计算机制造商协会（ECMA），完成了标准化（ECMA-262标准，ECMAScript脚本语言）。
  　　随着后来Netscape在浏览器大战中不敌微软，LiveWire服务器产品也跟着失败了，于是服务器端JavaScript消失了。
  :END:

* Javascript与ECMAScript
  ECMAScript做为一个标准并不与任何具体浏览器相绑定，简单地说，ECMAScript 描述了以下内容：
    - 语法
    - 类型
    - 语句
    - 关键字
    - 保留字
    - 运算符
    - 对象

  一个完整的 JavaScript 实现是由以下 3 个不同部分组成的：
    - 核心（ECMAScript）
    - 文档对象模型（DOM）
    - 浏览器对象模型（BOM）

* Javascript特点
    - 函数式
    - 原型继承
    - 弱类型
    - 词法作用域
      
* Javascript特性：闭包
  闭包（closure）是代码块（通常为函数）和创建该代码块的上下文中数据的结合，表现为函数可以访问外部作用域定义的变量，即使外部作用域已经退出。
  
* Javascript工具：Jslint
* 浏览器中的Javascript
* C10K问题
* select与epoll
* 事件回调
* Javascript从前端到后端
* V8引擎简介
* Node.js简介
* Node.js适用范围
* Node.js代码风格
* Node.js包管理机制
* Node.js构建Http服务
* Node.js构建Http服务：Connect
* Node.js构建Http服务：Express
* Node.js超越Http服务
* 参考资料
  - 《Javascript语言精粹》
  - [[http://jibbering.com/faq/notes/closures/][Javascript Closures]]
  - [[http://www.nodebeginner.org/index-zh-cn.html][Node.js入门]]
  - [[http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb][Understanding node.js]]
  - [[http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/][Understanding the node.js event loop « Mixu's tech blog]]
